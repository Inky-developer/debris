var searchIndex = JSON.parse('{\
"debris_backends":{"doc":"Backend implementations for the debris compiler","t":[8,3,0,0,10,13,13,13,4,13,3,13,13,13,13,4,4,13,13,4,13,13,13,13,13,3,13,13,13,13,0,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,13,3,13,13,13,13,4,4,13,13,4,13,13,13,13,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,11,11,5,11,11,11,11,11,11,11,12,12,3,2,18,11,11,0,11,11,11,12,11,11,0,11,0,11,0,12,11,0,0,0,0,11,11,11,3,18,18,11,11,11,11,11,11,11,11,11,11,12,3,13,3,3,4,13,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,3,11,11,12,11,11,11,5,11,11,11,12,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11,13,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,12,5,5,3,11,11,11,11,11,11,11,11,12,12,12,5,5,5,11,11,11,11],"n":["Backend","DatapackBackend","common","datapack","generate","Dummy","Equal","Execute","ExecuteComponent","Function","FunctionIdent","IfScoreRange","IfScoreRelation","JsonMessage","Maximum","MinecraftCommand","MinecraftRange","Minimum","NotEqual","ObjectiveCriterion","Range","RawCommand","ScoreboardAdd","ScoreboardOperation","ScoreboardOperationAdd","ScoreboardPlayer","ScoreboardRemove","ScoreboardSet","ScoreboardSetEqual","ScoreboardSetFromResult","commands","is_collection","namespace","path","player","scoreboard","string_escape","comparison","player","player1","player2","range","and_then","command","command","criterion","function","json_name","message","name","name","operation","parts","player","player","player","player1","player1","player2","player2","target","value","value","0","0","0","0","from","to","Dummy","Equal","Execute","ExecuteComponent","Function","FunctionIdent","IfScoreRange","IfScoreRelation","JsonMessage","Maximum","MinecraftCommand","MinecraftRange","Minimum","NotEqual","ObjectiveCriterion","Range","RawCommand","ScoreboardAdd","ScoreboardOperation","ScoreboardOperationAdd","ScoreboardPlayer","ScoreboardRemove","ScoreboardSet","ScoreboardSetEqual","ScoreboardSetFromResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_operator","hash","into","into","into","into","into","into","is_collection","is_condition","namespace","ne","path","player","scoreboard","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","comparison","player","player1","player2","range","and_then","command","command","criterion","function","json_name","message","name","name","operation","parts","player","player","player","player1","player1","player2","player2","target","value","value","0","0","0","0","from","to","Char","None","Str","StringEscape","borrow","borrow_mut","escape_minecraft","from","into","into_iter","next","try_from","try_into","type_id","0","0","Datapack","DatapackBackend","FUNCTION_TAGS_PATH","add_load_json","add_tick_json","backend","borrow","borrow_mut","default","dir","fmt","from","function_context","functions","generator","into","json_formatter","main_dir","new","scoreboard_constants","scoreboard_context","stringify","templates","try_from","try_into","type_id","DatapackBackend","FILE_EXTENSION","FUNCTION_INTERNAL_PATH","borrow","borrow_mut","default","fmt","from","generate","into","try_from","try_into","type_id","0","BuildingFunction","Custom","FunctionContext","FunctionId","FunctionLocation","Main","append_to_fn","as_function_ident","assemble","block_id_mapping","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commands","current_function_id","default","default","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","functions","get_function_id","get_function_id_from_ident","get_function_ident","hash","hash","insert","into","into","into","into","into_functions","namespace","ne","ne","new","post_commands","reserve","reserve_at","reserve_block","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","function_name","path","DatapackGenerator","add_command","borrow","borrow_mut","branch_taken_hack_required","build","catch_output","compile_context","extend_command_by","fmt","from","function_ctx","get_as_single_command","get_condition","get_condition_inner","handle","handle_binary_operation","handle_branch","handle_call","handle_condition","handle_execute","handle_extern_functions","handle_fast_store","handle_fast_store_from_result","handle_function","handle_main_function","handle_ticking_function","handle_write","into","llir","new","scoreboard_constants","scoreboard_ctx","stack","try_from","try_into","type_id","JsonTextWriter","borrow","borrow_mut","buf","default","flush_pending","fmt","format_json","from","into","into_string","pending","try_from","try_into","type_id","write","write_score","write_str","ScoreboardConstants","borrow","borrow_mut","constants","constants","default","fmt","from","get_name","into","name","try_from","try_into","type_id","Normal","ScoreboardContext","ScoreboardPlayerId","Temporary","add_player","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","format_player","format_scoreboard","from","from","from","get_scoreboard","get_scoreboard_player","get_temporary_player","hash","into","into","ne","new","player_fmt_string","scoreboard_players","scoreboard_prefix","scoreboards","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","fmt_comparison","fmt_operation","TemplateData","borrow","borrow_mut","clone","clone_into","fmt","from","from","into","main_function_dir","project","project_description","template_load_json","template_pack_mcmeta","template_tick_json","to_owned","try_from","try_into","type_id"],"q":["debris_backends","","","","","debris_backends::common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_backends::common::ExecuteComponent","","","","","debris_backends::common::MinecraftCommand","","","","","","","","","","","","","","","","","","","","","debris_backends::common::MinecraftRange","","","","","","debris_backends::common::commands","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_backends::common::commands::ExecuteComponent","","","","","debris_backends::common::commands::MinecraftCommand","","","","","","","","","","","","","","","","","","","","","debris_backends::common::commands::MinecraftRange","","","","","","debris_backends::common::string_escape","","","","","","","","","","","","","","debris_backends::common::string_escape::StringEscape","","debris_backends::datapack","","","","","","","","","","","","","","","","","","","","","","","","","","debris_backends::datapack::backend","","","","","","","","","","","","","debris_backends::datapack::function_context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_backends::datapack::function_context::FunctionLocation","","debris_backends::datapack::generator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_backends::datapack::json_formatter","","","","","","","","","","","","","","","","","","debris_backends::datapack::scoreboard_constants","","","","","","","","","","","","","","debris_backends::datapack::scoreboard_context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_backends::datapack::scoreboard_context::ScoreboardPlayerId","","debris_backends::datapack::stringify","","debris_backends::datapack::templates","","","","","","","","","","","","","","","","","",""],"d":["A Backend for debris, which has to convert <code>LLIR</code> into a …","The Datapack Backend implementation","Defines common items that are specific to the latest …","A Backend that can compile to minecraft datapacks","Converts the llir into a directory","Mostly used by debris","A range that only contains one value","Any used execute command","A component in an execute command","Calls another function","A unique minecraft function identifier","Tests for a relation between a score and a static value","Tests for a relation between to scores","","A range with an upper bound, eg. ..50","Enumerates all minecraft commands that are used by any …","Any valid minecraft range","A range with a lower bound, eg. 0..","A range that contains every value except one","Any objective criterion","A full range, eg. 1..99","","","","Quick operation which adds or removes a static value","A combination of scoreboard and player","","Sets the scoreboard value to a specific integer","Sets the scoreboard value to another scoreboard value","Sets the scoreboard value equal to the result of the other …","","Whether this function is a collection, marked by a <code>#</code>","The namespace of this function, for example <code>debris</code>","The path of this function, for example <code>foo/bar/baz</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mostly used by debris","A range that only contains one value","Any used execute command","A component in an execute command","Calls another function","A unique minecraft function identifier","Tests for a relation between a score and a static value","Tests for a relation between to scores","","A range with an upper bound, eg. ..50","Enumerates all minecraft commands that are used by any …","Any valid minecraft range","A range with a lower bound, eg. 0..","A range that contains every value except one","Any objective criterion","A full range, eg. 1..99","","","","Quick operation which adds or removes a static value","A combination of scoreboard and player","","Sets the scoreboard value to a specific integer","Sets the scoreboard value to another scoreboard value","Sets the scoreboard value equal to the result of the other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether this function is a collection, marked by a <code>#</code>","Returns whether this component is a condition (Right now …","The namespace of this function, for example <code>debris</code>","","The path of this function, for example <code>foo/bar/baz</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This implements iterator to allow for the <code>flat_map</code> …","","","Escapes a string for minecraft: Newlines are replaced with …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Represents an in-memory datapack","","","","","","","","","The virtual file structure","","Returns the argument unchanged.","","Returns the functions directory of this pack","","Calls <code>U::from(self)</code>.","","The name of the main directory","Creates a new <code>Datapack</code> from a Config","","","","Implements some functions which can static files which …","","","","The Datapack Backend implementation","","The directory which will contain all automatically …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The debris namespace","","","","","","","","","","","","","","","","","","","","","","","This struct is used to generate a datapack from the llir …","Adds a command to the current stack","","","Returns whether a flag is required to make sure only the …","","Handles the given command and returns the produced output","The compilation configuration","If <code>command</code> is a function call, pushes <code>other</code> to that …","","Returns the argument unchanged.","Contains the already generated functions","Converts a bunch of minecraft commands into a single …","Evaluates this condition and, if it is true, calls <code>and_then</code>…","","","","","","","","","","","","Handles the main function","Handles functions that run every tick","","Calls <code>U::from(self)</code>.","The llir to compile","","Keeps track of all constants that are used throughout the …","A context which keeps track of the currently used …","The current stack","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Keeps track of used scoreboard constants that are used in …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Holds data about specific scoreboard contexts","Used to differentiate between a generated id and a …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the name of this scoreboard","Gets the scoreboard player that corresponds to this <code>ItemId</code>","Makes a new scoreboard player and returns it as a …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new scoreboard context with the default …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,4,0,4,0,5,5,4,3,0,0,3,3,0,3,4,4,4,4,0,4,4,4,4,0,6,6,6,7,7,0,8,9,8,8,9,10,11,12,13,14,13,15,13,16,17,10,18,11,19,20,17,20,17,15,18,19,21,22,23,24,25,25,2,3,4,0,4,0,5,5,4,3,0,0,3,3,0,3,4,4,4,4,0,4,4,4,4,4,5,3,7,2,6,4,5,3,7,2,6,4,5,3,7,2,4,5,3,7,2,6,6,4,4,5,5,3,3,7,7,2,2,6,6,4,5,3,7,2,6,3,6,4,5,3,7,2,6,6,5,6,6,6,7,7,4,5,3,7,2,4,5,3,7,2,6,4,5,3,7,2,6,4,5,3,7,2,6,4,5,3,7,2,6,8,9,8,8,9,10,11,12,13,14,13,15,13,16,17,10,18,11,19,20,17,20,17,15,18,19,21,22,23,24,25,25,26,26,26,0,26,26,0,26,26,26,26,26,26,26,27,28,0,0,29,29,29,0,29,29,29,29,29,29,0,29,0,29,0,29,29,0,0,0,0,29,29,29,0,30,30,30,30,30,30,30,30,30,30,30,30,31,0,32,0,0,0,32,33,32,34,33,34,31,32,33,34,31,32,33,31,31,34,33,34,31,31,32,31,32,34,31,32,33,34,31,32,33,33,33,33,33,31,32,33,34,31,32,33,33,33,31,32,33,34,33,33,33,31,34,31,32,33,34,31,32,33,34,31,32,33,35,36,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,38,38,38,38,38,38,0,38,38,38,38,38,38,38,38,38,38,0,39,39,39,39,39,39,39,39,39,39,39,39,39,40,0,0,40,41,41,40,41,40,40,40,40,40,41,40,41,41,41,40,40,41,41,41,40,41,40,40,41,41,41,41,41,40,41,40,41,40,41,40,42,43,0,0,0,44,44,44,44,44,44,44,44,44,44,44,0,0,0,44,44,44,44],"f":[null,null,null,null,[[["",0],["llir",3],["compilecontext",3]],["directory",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["minecraftcommand",4]],["minecraftcommand",4]],[[["executecomponent",4]],["executecomponent",4]],[[["minecraftrange",4]],["minecraftrange",4]],[[["scoreboardplayer",3]],["scoreboardplayer",3]],[[["objectivecriterion",4]],["objectivecriterion",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["functionident",3],["functionident",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["minecraftcommand",4],["formatter",3]],["result",6]],[[["minecraftcommand",4],["formatter",3]],["result",6]],[[["executecomponent",4],["formatter",3]],["result",6]],[[["executecomponent",4],["formatter",3]],["result",6]],[[["minecraftrange",4],["formatter",3]],["result",6]],[[["minecraftrange",4],["formatter",3]],["result",6]],[[["scoreboardplayer",3],["formatter",3]],["result",6]],[[["scoreboardplayer",3],["formatter",3]],["result",6]],[[["objectivecriterion",4],["formatter",3]],["result",6]],[[["objectivecriterion",4],["formatter",3]],["result",6]],[[["functionident",3],["formatter",3]],["result",6]],[[["functionident",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",0],["scoreboardcomparison",4]],["minecraftrange",4]],[[["functionident",3],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["executecomponent",4]],["bool",0]],null,[[["functionident",3],["functionident",3]],["bool",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["str",0]],["iterator",8]],[[]],[[]],[[]],[[["stringescape",4]],["option",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["datapack",3],["config",3]]],[[["datapack",3],["config",3]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["datapack",3]],null,[[["datapack",3],["formatter",3]],["result",6]],[[]],null,[[["datapack",3]],["directory",3]],null,[[]],null,null,[[["config",3]],["datapack",3]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["datapackbackend",3]],[[["datapackbackend",3],["formatter",3]],["result",6]],[[]],[[["datapackbackend",3],["llir",3],["compilecontext",3]],["directory",3]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["functioncontext",3],["functionid",3],["minecraftcommand",4]]],[[["functionlocation",4],["rc",3,[["str",0]]]],["functionident",3]],[[["buildingfunction",3]],["vec",3,[["minecraftcommand",4]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["functionid",3]],["functionid",3]],[[["",0],["",0]]],null,null,[[],["buildingfunction",3]],[[],["functionid",3]],[[["functionid",3],["functionid",3]],["bool",0]],[[["functionlocation",4],["functionlocation",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["buildingfunction",3],["formatter",3]],["result",6]],[[["functionid",3],["formatter",3]],["result",6]],[[["functionlocation",4],["formatter",3]],["result",6]],[[["functioncontext",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[["functioncontext",3],["blockid",3]],["option",4,[["functionid",3]]]],[[["functioncontext",3],["functionident",3]],["functionid",3]],[[["functioncontext",3],["functionid",3]],["rc",3,[["functionident",3]]]],[[["functionid",3],["",0]]],[[["functionlocation",4],["",0]]],[[["functioncontext",3],["functionid",3],["iterator",8]]],[[]],[[]],[[]],[[]],[[["functioncontext",3]],["iterator",8]],null,[[["functionid",3],["functionid",3]],["bool",0]],[[["functionlocation",4],["functionlocation",4]],["bool",0]],[[["rc",3,[["str",0]]]],["functioncontext",3]],null,[[["functioncontext",3]],["functionid",3]],[[["functioncontext",3],["functionlocation",4]],["functionid",3]],[[["functioncontext",3],["blockid",3]],["functionid",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["datapackgenerator",3],["minecraftcommand",4]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["datapackgenerator",3],["branch",3]],["option",4,[["branchkind",4]]]],[[["datapackgenerator",3]],["directory",3]],[[["datapackgenerator",3],["node",4]],["vec",3,[["minecraftcommand",4]]]],null,[[["datapackgenerator",3],["minecraftcommand",4],["minecraftcommand",4]],["minecraftcommand",4]],[[["datapackgenerator",3],["formatter",3]],["result",6]],[[]],null,[[["datapackgenerator",3],["vec",3,[["minecraftcommand",4]]]],["option",4,[["minecraftcommand",4]]]],[[["datapackgenerator",3],["condition",4],["option",4,[["minecraftcommand",4]]]],["minecraftcommand",4]],[[["datapackgenerator",3],["condition",4],["vec",3]]],[[["datapackgenerator",3],["node",4]]],[[["datapackgenerator",3],["binaryoperation",3]]],[[["datapackgenerator",3],["branch",3]]],[[["datapackgenerator",3],["call",3]]],[[["datapackgenerator",3],["condition",4]]],[[["datapackgenerator",3],["executeraw",3]]],[[["datapackgenerator",3],["externitempath",3],["blockid",3]]],[[["datapackgenerator",3],["faststore",3]]],[[["datapackgenerator",3],["faststorefromresult",3]]],[[["datapackgenerator",3],["function",3]]],[[["datapackgenerator",3],["iterator",8]],["bool",0]],[[["datapackgenerator",3],["iterator",8]],["bool",0]],[[["datapackgenerator",3],["writemessage",3]]],[[]],null,[[["compilecontext",3],["llir",3]],["datapackgenerator",3]],null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[],["jsontextwriter",3]],[[["jsontextwriter",3]]],[[["jsontextwriter",3],["formatter",3]],["result",6]],[[["formattedtext",3],["scoreboardcontext",3],["functioncontext",3]],["string",3]],[[]],[[]],[[["jsontextwriter",3]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["jsontextwriter",3],["jsonformatcomponent",4],["scoreboardcontext",3],["functioncontext",3]]],[[["jsontextwriter",3],["scoreboardplayer",3]]],[[["jsontextwriter",3],["str",0]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["scoreboardconstants",3]],["iterator",8]],null,[[],["scoreboardconstants",3]],[[["scoreboardconstants",3],["formatter",3]],["result",6]],[[]],[[["scoreboardconstants",3],["i32",0],["scoreboardcontext",3]],["scoreboardplayer",3]],[[]],[[["i32",0]],["rc",3,[["str",0]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["scoreboardcontext",3],["scoreboardplayerid",4]],["rc",3,[["str",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["scoreboardplayerid",4]],["scoreboardplayerid",4]],[[["",0],["",0]]],[[["scoreboardplayerid",4],["scoreboardplayerid",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["scoreboardcontext",3],["formatter",3]],["result",6]],[[["scoreboardplayerid",4],["formatter",3]],["result",6]],[[["scoreboardcontext",3],["usize",0]],["rc",3,[["str",0]]]],[[["scoreboardcontext",3],["scoreboard",4]],["rc",3,[["str",0]]]],[[]],[[["itemid",3]],["scoreboardplayerid",4]],[[]],[[["scoreboardcontext",3],["scoreboard",4]],["rc",3,[["str",0]]]],[[["scoreboardcontext",3],["itemid",3]],["rc",3,[["str",0]]]],[[["scoreboardcontext",3]],["scoreboardplayer",3]],[[["scoreboardplayerid",4],["",0]]],[[]],[[]],[[["scoreboardplayerid",4],["scoreboardplayerid",4]],["bool",0]],[[["string",3],["buildmode",4]],["scoreboardcontext",3]],null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["scoreboardcomparison",4]],["str",0]],[[["scoreboardoperation",4]],["str",0]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["templatedata",3]],["templatedata",3]],[[["",0],["",0]]],[[["templatedata",3],["formatter",3]],["result",6]],[[]],[[["config",3]],["templatedata",3]],[[]],null,null,null,[[["templatedata",3]],["string",3]],[[["templatedata",3]],["string",3]],[[["templatedata",3]],["string",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[8,"Backend"],[4,"ObjectiveCriterion"],[4,"MinecraftRange"],[4,"MinecraftCommand"],[4,"ExecuteComponent"],[3,"FunctionIdent"],[3,"ScoreboardPlayer"],[13,"IfScoreRelation"],[13,"IfScoreRange"],[13,"Execute"],[13,"ScoreboardSetFromResult"],[13,"RawCommand"],[13,"ScoreboardAdd"],[13,"Function"],[13,"JsonMessage"],[13,"ScoreboardRemove"],[13,"ScoreboardOperation"],[13,"ScoreboardSet"],[13,"ScoreboardOperationAdd"],[13,"ScoreboardSetEqual"],[13,"Minimum"],[13,"Maximum"],[13,"Equal"],[13,"NotEqual"],[13,"Range"],[4,"StringEscape"],[13,"Str"],[13,"Char"],[3,"Datapack"],[3,"DatapackBackend"],[3,"FunctionId"],[4,"FunctionLocation"],[3,"FunctionContext"],[3,"BuildingFunction"],[13,"Main"],[13,"Custom"],[3,"DatapackGenerator"],[3,"JsonTextWriter"],[3,"ScoreboardConstants"],[4,"ScoreboardPlayerId"],[3,"ScoreboardContext"],[13,"Normal"],[13,"Temporary"],[3,"TemplateData"]]},\
"debris_common":{"doc":"Common items used by the compiler","t":[12,4,13,13,4,13,13,13,13,13,13,3,6,3,3,3,3,13,13,13,13,13,6,6,4,13,3,3,13,13,13,13,4,13,13,13,13,3,13,4,13,13,13,0,12,5,12,12,0,0,12,12,12,12,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,13,13,13,4,13,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,6,3,3,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,18,3,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11],"n":["0","Accessor","Add","And","BuildMode","CmpEq","CmpGe","CmpGt","CmpLe","CmpLt","CmpNe","Code","CodeId","CodeRef","CompilationId","CompileContext","Config","Debug","Debug","Div","Dot","Full","FxIndexMap","FxIndexSet","Ident","Index","InputFile","InputFiles","Mod","Mul","None","Not","OptMode","Or","Path","Promote","Release","Span","Special","SpecialIdent","Sub","UnaryMinus","Value","accessor","build_mode","character_width_at_index","code","compilation_id","compile_context","config","config","current_uid","default_scoreboard_name","file","file_provider","graph","ident","input_file","input_files","input_files","input_files","len","offset","opt_mode","path","project_description","project_name","source","span","start","0","0","0","0","Accessor","Path","borrow","borrow_mut","clone","clone_into","eq","equals_ident","equivalent","fmt","from","from","hash","into","ne","to_owned","try_from","try_into","type_id","0","0","CompilationId","CompileContext","add_input_file","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","compilation_id","config","current_uid","eq","equivalent","fmt","fmt","from","from","get_input_file","get_unique_id","hash","input_files","into","into","ne","new","partial_cmp","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","BuildMode","Config","Debug","Debug","Full","None","OptMode","Release","aggressive_function_inlining","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_mode","clone","clone","clone_into","clone_into","default","default","default_scoreboard_name","disable_optimization","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","into","into","into","is_debug","is_release","ne","opt_mode","opt_mode","project_description","project_name","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_build_mode","FileProvider","FsFileProvider","MemoryFileProvider","add_file","borrow","borrow","borrow_mut","borrow_mut","default","default","files","fmt","fmt","from","from","into","into","new","read_file","read_file","read_file","root","try_from","try_from","try_into","try_into","type_id","type_id","GraphDfs","GraphLoopDetector","GraphMatrix","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","data","default","default","edges","fmt","from","from","from","get_row","get_row_mut","has_loop","index","index_mut","into","into","into","iter","iter_order","new","rows","size","to_visit","to_visit","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visited","Add","And","CmpEq","CmpGe","CmpGt","CmpLe","CmpLt","CmpNe","Div","Dot","Ident","Index","Mod","Mul","Not","Or","Promote","Special","SpecialIdent","Sub","UnaryMinus","Value","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","into","into","ne","new","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","Code","CodeId","CodeRef","InputFile","InputFiles","add_input","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","code","default","eq","equivalent","file","find_by_filename","fmt","fmt","fmt","fmt","from","from","from","from","get_code","get_code_ref","get_input","get_input_offset","get_offset","get_relative_span","get_span","get_span_code","get_span_file","get_span_str","get_total_offset","hash","input_files","input_files","into","into","into","into","line_col","ne","new","offset","path","source","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","EMPTY","Span","add","as_slice","at_start","borrow","borrow_mut","char_bounds","character_width_at_index","clone","clone_into","end","eq","equivalent","fmt","from","from","hash","into","is_empty","len","len","ne","new","start","start","to_owned","try_from","try_into","type_id","until"],"q":["debris_common","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_common::Accessor","debris_common::Ident","","","debris_common::accessor","","","","","","","","","","","","","","","","","","","debris_common::accessor::Accessor","debris_common::compile_context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_common::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_common::file_provider","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_common::graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_common::ident","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_common::ident::Ident","","","debris_common::input_file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_common::span","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","An accessor represents a dotted path","","","The build mode for this compilation","","","","","","","A code object contains the source code and optionally a …","The type of a code id, currently just a usize","A handy object to work in a specific input file","The id of the current compilation unit. Used to generate …","The Compilation context stores various information about …","Holds data about the user specified configuration","Debug build: produces slower code, but contains various …","Some optimizations, but no aggressive inlining (default)","","","Full optimizations","","","identifier for a value","","A single input file, implementation detail","Keeps track of all input files and allows to make cheap …","","","No optimizations","","How to optimize the code","","A path like a.b.c","","drops most safety checks, lower readability","A span which uniquely specifies a span of characters in …","","Every special identifier","","","Since Idents have be cloned quite often a generic value is …","","","Utility function to get the width of a character at a …","The code of the input file","","","","The current config which specifies how to compile","The current unique id system. Note that this is different …","","","This module has the <code>FileProvider</code> trait, which is used by …","Very basic graph implementation which is specialized for …","","Input files are used to store the files required for …","","All input files which are used in this compiler","The code files","","The global offset","","","","","","","","","","","","An accessor represents a dotted path","A path like a.b.c","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","The id of the current compilation unit. Used to generate …","The Compilation context stores various information about …","","","","","","","","","","The current config which specifies how to compile","The current unique id system. Note that this is different …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a unique id","","The code files","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The build mode for this compilation","Holds data about the user specified configuration","Debug build: produces slower code, but contains various …","Some optimizations, but no aggressive inlining (default)","Full optimizations","No optimizations","How to optimize the code","drops most safety checks, lower readability","Returns whether the optimizer should perform aggressive …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the current build mode is debug","Whether the current build mode is release","","Returns the default optimization mode for this build mode","","","","","","","","","","","","","","","","Replaces the build mode and changes the opt mode to the …","","A <code>FileProvider</code> implementation that reads files from the …","A <code>FileProvider</code> implementation that has an in-memory pool …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Gets the contents of the file with the specified name","","","","","","","","","","A struct that implements a non-recursive …","Detects loops in a graph. This is a custom struct in order …","A directed graph backed by a matrix. <code>T</code> is the type of …","","","","","","","","","","Returns the indices of all <code>Option::Some</code> variants in the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns <code>true</code> if the graph has a loop which is reachable …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new <code>GraphMatrix</code> with a <code>size</code> rows and <code>size</code> …","","","","","","","","","","","","","","","","","","","","","","","","","identifier for a value","","","","","","","","Every special identifier","","","Since Idents have be cloned quite often a generic value is …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new identifier","","","","","","","","","","","","","","A code object contains the source code and optionally a …","The type of a code id, currently just a usize","A handy object to work in a specific input file","A single input file, implementation detail","Keeps track of all input files and allows to make cheap …","Adds a code unit and returns its ID","","","","","","","","","","","The code of the input file","","","","","Searches the registered <code>InputFile</code>s and returns the first …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Gets the input file with this id","Gets the offset of the file with this id","","Returns a span that is relative to the start of this code …","","","Searches for the input file that contains the given span","Returns the str that corresponds to a span","Calculates the total byte offset","","","All input files which are used in this compiler","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the line in a file at which this span begins and …","","","The global offset","","","","","","","","","","","","","","","","","A span which uniquely specifies a span of characters in …","","","Returns a span with the same start and a length of one","","","Since ranges are used to index into a str on a byte level, …","Utility function to get the width of a character at a …","","","Returns the end of this span","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns, whether this span is empty","Returns the length of this span","","","Creates a new <code>Span</code> from the starting character and its …","Returns the start of this span","","","","","","Constructs a new span which ranges from the start of this …"],"i":[1,0,2,2,0,2,2,2,2,2,2,0,0,0,0,0,0,3,4,2,2,4,0,0,0,5,0,0,2,2,4,2,0,2,6,2,3,0,5,0,2,2,5,0,7,0,8,9,0,0,9,9,7,10,0,0,0,0,10,11,9,12,8,7,13,7,7,13,0,12,14,15,16,17,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,14,1,0,0,9,1,9,1,9,1,1,1,9,9,9,1,1,1,9,1,9,9,9,1,9,1,9,1,9,1,1,1,9,1,9,1,9,0,0,3,4,4,4,0,3,4,3,4,7,3,4,7,7,3,4,3,4,3,7,7,4,3,4,7,3,4,7,3,4,4,7,3,4,7,3,4,7,3,3,7,3,7,7,7,3,4,4,3,4,7,3,4,7,3,4,7,7,0,0,0,18,19,18,19,18,19,18,18,19,18,19,18,19,18,19,20,19,18,19,19,18,19,18,19,18,0,0,0,21,22,23,21,22,23,21,22,23,21,21,21,22,23,21,21,22,21,21,21,22,23,23,23,21,21,21,22,23,21,22,23,21,22,23,21,22,23,22,2,2,2,2,2,2,2,2,2,2,0,5,2,2,2,2,2,5,0,2,2,5,5,2,5,2,5,2,5,2,5,5,2,5,2,5,5,2,2,5,5,5,2,5,2,5,2,5,5,5,2,5,2,5,2,5,2,5,2,15,16,17,0,0,0,0,0,11,13,10,8,11,13,10,8,11,10,10,8,11,13,13,10,11,13,10,8,11,13,10,8,11,10,11,11,11,10,10,10,11,11,11,11,13,10,11,13,10,8,11,11,13,11,8,13,13,10,13,10,8,11,13,10,8,11,13,10,8,11,12,0,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",0],["str",0]],["usize",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["accessor",4]],["accessor",4]],[[["",0],["",0]]],[[["accessor",4],["accessor",4]],["bool",0]],[[["accessor",4],["asref",8,[["str",0]]]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["accessor",4],["formatter",3]],["result",6]],[[]],[[["ident",4]],["accessor",4]],[[["accessor",4],["",0]]],[[]],[[["accessor",4],["accessor",4]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["compilecontext",3],["code",3]],["codeid",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["compilationid",3]],["compilationid",3]],[[["",0],["",0]]],[[["compilationid",3],["compilationid",3]],["ordering",4]],null,null,null,[[["compilationid",3],["compilationid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["compilationid",3],["formatter",3]],["result",6]],[[["compilecontext",3],["formatter",3]],["result",6]],[[]],[[]],[[["compilecontext",3],["codeid",6]],["code",3]],[[["compilecontext",3]],["usize",0]],[[["compilationid",3],["",0]]],null,[[]],[[]],[[["compilationid",3],["compilationid",3]],["bool",0]],[[["compilationid",3]],["compilecontext",3]],[[["compilationid",3],["compilationid",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["optmode",4]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["buildmode",4]],["buildmode",4]],[[["optmode",4]],["optmode",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["buildmode",4]],[[],["config",3]],null,[[["optmode",4]],["bool",0]],[[["buildmode",4],["buildmode",4]],["bool",0]],[[["optmode",4],["optmode",4]],["bool",0]],[[["config",3],["config",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["buildmode",4],["formatter",3]],["result",6]],[[["optmode",4],["formatter",3]],["result",6]],[[["optmode",4],["formatter",3]],["result",6]],[[["config",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buildmode",4]],["bool",0]],[[["buildmode",4]],["bool",0]],[[["config",3],["config",3]],["bool",0]],[[["buildmode",4]],["optmode",4]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["config",3],["buildmode",4]]],null,null,null,[[["memoryfileprovider",3],["box",3,[["str",0]]],["box",3,[["str",0]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["fsfileprovider",3]],[[],["memoryfileprovider",3]],null,[[["fsfileprovider",3],["formatter",3]],["result",6]],[[["memoryfileprovider",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["pathbuf",3]],["fsfileprovider",3]],[[["",0],["str",0]],["option",4,[["box",3,[["str",0]]]]]],[[["fsfileprovider",3],["str",0]],["option",4,[["box",3,[["str",0]]]]]],[[["memoryfileprovider",3],["str",0]],["option",4,[["box",3,[["str",0]]]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[],["graphloopdetector",3]],[[],["graphdfs",3]],[[["graphmatrix",3],["usize",0]],["iterator",8]],[[["graphmatrix",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["graphmatrix",3],["usize",0]],["option",4]],[[["graphmatrix",3],["usize",0]],["option",4]],[[["graphloopdetector",3],["graphmatrix",3],["u32",0]],["bool",0]],[[["graphmatrix",3],["usize",0]]],[[["graphmatrix",3],["usize",0]]],[[]],[[]],[[]],[[["graphdfs",3],["graphmatrix",3],["iterator",8]],["iterator",8]],null,[[["usize",0]],["graphmatrix",3]],[[["graphmatrix",3]],["iterator",8]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["ident",4]],["ident",4]],[[["specialident",4]],["specialident",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["ident",4],["str",0]],["bool",0]],[[["ident",4],["ident",4]],["bool",0]],[[["specialident",4],["specialident",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["ident",4],["formatter",3]],["result",6]],[[["ident",4],["formatter",3]],["result",6]],[[["specialident",4],["formatter",3]],["result",6]],[[["specialident",4],["formatter",3]],["result",6]],[[],["ident",4]],[[["specialident",4]],["ident",4]],[[]],[[]],[[["ident",4],["",0]]],[[["specialident",4],["",0]]],[[]],[[]],[[["ident",4],["ident",4]],["bool",0]],[[["asref",8,[["str",0]]]],["ident",4]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["inputfiles",3],["code",3]],["codeid",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["coderef",3]],["coderef",3]],[[["",0],["",0]]],null,[[],["inputfiles",3]],[[["code",3],["code",3]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["inputfiles",3],["str",0]],["option",4,[["codeid",6]]]],[[["code",3],["formatter",3]],["result",6]],[[["coderef",3],["formatter",3]],["result",6]],[[["inputfile",3],["formatter",3]],["result",6]],[[["inputfiles",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["coderef",3]],["code",3]],[[["inputfiles",3],["codeid",6]],["coderef",3]],[[["inputfiles",3],["codeid",6]],["code",3]],[[["inputfiles",3],["codeid",6]],["usize",0]],[[["coderef",3]],["usize",0]],[[["coderef",3],["span",3]],["option",4,[["span",3]]]],[[["coderef",3]],["span",3]],[[["inputfiles",3],["span",3]],["coderef",3]],[[["inputfiles",3],["span",3]]],[[["inputfiles",3],["span",3]],["str",0]],[[["inputfiles",3]],["usize",0]],[[["code",3],["",0]]],null,null,[[]],[[]],[[]],[[]],[[["inputfiles",3],["span",3]]],[[["code",3],["code",3]],["bool",0]],[[],["inputfiles",3]],null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["span",3],["usize",0]]],[[["span",3]],["range",3,[["usize",0]]]],[[["span",3]],["span",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["span",3],["str",0]]],[[["usize",0],["str",0]],["usize",0]],[[["span",3]],["span",3]],[[["",0],["",0]]],[[["span",3]],["usize",0]],[[["span",3],["span",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["span",3],["formatter",3]],["result",6]],[[["range",3,[["usize",0]]]],["span",3]],[[]],[[["span",3],["",0]]],[[]],[[["span",3]],["bool",0]],[[["span",3]],["usize",0]],null,[[["span",3],["span",3]],["bool",0]],[[["usize",0],["usize",0]],["span",3]],[[["span",3]],["usize",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["span",3],["span",3]],["span",3]]],"p":[[3,"CompilationId"],[4,"SpecialIdent"],[4,"BuildMode"],[4,"OptMode"],[4,"Ident"],[4,"Accessor"],[3,"Config"],[3,"InputFile"],[3,"CompileContext"],[3,"CodeRef"],[3,"InputFiles"],[3,"Span"],[3,"Code"],[13,"Path"],[13,"Value"],[13,"Index"],[13,"Special"],[3,"MemoryFileProvider"],[3,"FsFileProvider"],[8,"FileProvider"],[3,"GraphMatrix"],[3,"GraphLoopDetector"],[3,"GraphDfs"]]},\
"debris_error":{"doc":"Compilation error handling","t":[12,8,17,13,3,13,13,4,13,13,13,13,13,13,13,13,3,13,4,6,13,13,13,13,13,13,13,4,13,6,4,3,3,3,13,13,13,13,13,13,13,13,13,13,13,12,12,12,10,11,11,11,11,11,12,11,11,14,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,12,12,0,0,11,12,0,12,12,0,12,12,12,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,13,13,13,13,13,13,13,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5],"n":["0","AsAnnotationSnippet","COLORED","CircularImport","CompileErrors","ComptimeUpdate","ContinueWithValue","ControlFlowRequires","Function","FunctionAlreadyExported","ImmutableProperty","IndexOutOfBounds","InvalidComptimeBranch","InvalidControlFlow","InvalidExternItemPath","InvalidIntLiteral","LangError","LangError","LangErrorKind","LangResult","LeftoverInput","Loop","MissingModule","MissingStructInitializer","MissingVariable","NonComptimeVariable","NotYetImplemented","ParseError","ParseError","Result","SingleCompileError","SliceOwned","SnippetOwned","SourceAnnotationOwned","TupleMismatch","UnexpectedComma","UnexpectedFunctionIdent","UnexpectedOperator","UnexpectedOverload","UnexpectedPath","UnexpectedProperty","UnexpectedStructInitializer","UnexpectedToken","UnexpectedType","UnreachableCode","annotation_type","annotation_type","annotations","as_annotation_snippet","as_annotation_snippet","borrow","borrow","borrow_mut","borrow_mut","caller","clone","clone_into","debris_unimplemented","eq","equivalent","fmt","fmt","footer","format","format","from","from","from","from","from","id","into","into","kind","label","lang_error","macros","ne","origin","parse_error","range","slices","snippet","source","span","title","to_display_list","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","available","class","control_flow","declared","error","error","expected","expected","function_definition_span","got","ident","index","lhs","lhs_count","max","missing","module","msg","notes","operator","parameters","path","path","property","requires","rhs","rhs_count","similar","strukt","strukt","value_class","var_name","var_name","error","expected","span","span","span","span","span","span","0","0","CircularImport","ComptimeUpdate","ContinueWithValue","ControlFlowRequires","Function","FunctionAlreadyExported","ImmutableProperty","IndexOutOfBounds","InvalidComptimeBranch","InvalidControlFlow","InvalidExternItemPath","LangError","LangErrorKind","LangErrorSnippet","Loop","MissingModule","MissingStructInitializer","MissingVariable","NonComptimeVariable","NotYetImplemented","TupleMismatch","UnexpectedOperator","UnexpectedOverload","UnexpectedProperty","UnexpectedStructInitializer","UnexpectedType","UnreachableCode","as_annotation_snippet","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caller","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","footer","from","from","from","from","get_snippet","into","into","into","into","kind","ne","ne","new","slices","span","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","available","class","control_flow","declared","error","error","expected","expected","function_definition_span","got","ident","index","lhs","lhs_count","max","missing","module","msg","notes","operator","parameters","path","path","property","requires","rhs","rhs_count","similar","strukt","strukt","value_class","var_name","var_name","InvalidIntLiteral","LeftoverInput","ParseError","UnexpectedComma","UnexpectedFunctionIdent","UnexpectedPath","UnexpectedToken","as_annotation_snippet","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","into","ne","span","to_owned","try_from","try_into","type_id","error","expected","span","span","span","span","span","span","AnnotationOwned","SliceOwned","SnippetOwned","SourceAnnotationOwned","annotation_type","annotation_type","annotation_type","annotations","as_annotation","as_slice","as_snippet","as_source_annotation","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","footer","from","from","from","from","id","id","into","into","into","into","label","label","origin","range","slices","source","title","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","display_expected_of","display_expected_of_all","display_expected_of_any"],"q":["debris_error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_error::LangErrorKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_error::ParseError","","","","","","","","debris_error::SingleCompileError","","debris_error::lang_error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_error::lang_error::LangErrorKind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_error::parse_error","","","","","","","","","","","","","","","","","","","","","","","debris_error::parse_error::ParseError","","","","","","","","debris_error::snippet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_error::utils","",""],"d":["","","Used to determine whether the error messages should use …","","","","","","","","","","","","","","A generic error which gets thrown when compiling","An error which happens when compiling the input","Specifies a specific error reason","A result type which allows quick error throwing since no …","","","","","","","","Thrown when parsing bad input","An error which happens when parsing the input","The result type used by most of the core functions","A Compile Error","An owned counterpart to the <code>annotate_snippets::Slice</code> struct","An owned counterpart to the <code>annotate_snippets::Snippet</code> …","An owned counterpart to the …","","","","","","","","","","","","","","","","","","","","","In debug mode stores the caller to provide additional …","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The specific error","","","This module contains some macros for the most common error …","","","","","","Owned variants of the <code>annotate_snippets</code> library structs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Symbols which were expected instead","","","","","","The span where this error ocurred","","","","","","","","","","","","","","A generic error which gets thrown when compiling","Specifies a specific error reason","","","","","","","","","","","","","","","","","","","","","","","","In debug mode stores the caller to provide additional …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The specific error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Thrown when parsing bad input","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Symbols which were expected instead","","","","","","The span where this error ocurred","An owned counterpart to the …","An owned counterpart to the <code>annotate_snippets::Slice</code> struct","An owned counterpart to the <code>annotate_snippets::Snippet</code> …","An owned counterpart to the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Displays a string which say that the elements of <code>collection</code>","",""],"i":[1,0,0,2,0,2,2,0,3,2,2,2,2,2,2,4,0,5,0,0,4,3,2,2,2,2,2,0,5,0,0,0,0,0,2,4,4,2,2,4,2,2,4,2,2,6,7,8,9,5,1,5,1,5,10,5,5,0,5,5,1,5,6,1,5,1,1,5,5,5,6,1,5,10,7,0,0,5,8,0,7,6,0,8,10,6,9,5,1,5,1,5,1,5,0,11,12,13,14,15,16,14,17,17,14,11,18,19,20,18,21,22,23,24,19,17,15,16,25,13,19,20,24,11,21,25,24,12,26,27,26,28,29,30,31,27,32,33,2,2,2,0,3,2,2,2,2,2,2,0,0,0,3,2,2,2,2,2,2,2,2,2,2,2,2,10,34,10,2,3,34,10,2,3,10,10,2,3,10,2,3,10,2,3,10,2,3,10,2,2,3,34,34,10,2,3,2,34,10,2,3,10,10,2,10,34,10,10,2,3,2,34,10,2,3,34,10,2,3,34,10,2,3,11,12,13,14,15,16,14,17,17,14,11,18,19,20,18,21,22,23,24,19,17,15,16,25,13,19,20,24,11,21,25,24,12,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,26,27,26,28,29,30,31,27,0,0,0,0,6,35,7,8,35,8,6,7,6,8,35,7,6,8,35,7,6,8,35,7,6,6,8,35,7,6,35,6,8,35,7,35,7,8,7,6,8,6,6,8,35,7,6,8,35,7,6,8,35,7,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["compilecontext",3]],["snippetowned",3]],[[["singlecompileerror",4],["compilecontext",3]],["snippetowned",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["singlecompileerror",4]],["singlecompileerror",4]],[[["",0],["",0]]],null,[[["singlecompileerror",4],["singlecompileerror",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["compileerrors",3],["formatter",3]],["result",6]],[[["singlecompileerror",4],["formatter",3]],["result",6]],null,[[["compileerrors",3],["compilecontext",3]],["string",3]],[[["singlecompileerror",4],["compilecontext",3]],["string",3]],[[]],[[["vec",3,[["singlecompileerror",4]]]],["compileerrors",3]],[[["parseerror",4]],["singlecompileerror",4]],[[["langerror",3]],["singlecompileerror",4]],[[]],null,[[]],[[]],null,null,null,null,[[["singlecompileerror",4],["singlecompileerror",4]],["bool",0]],null,null,null,null,null,null,null,null,[[["",0],["compilecontext",3]],["string",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["langerror",3],["compilecontext",3]],["snippetowned",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["langerror",3]],["langerror",3]],[[["langerrorkind",4]],["langerrorkind",4]],[[["controlflowrequires",4]],["controlflowrequires",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["langerror",3],["langerror",3]],["bool",0]],[[["langerrorkind",4],["langerrorkind",4]],["bool",0]],[[["controlflowrequires",4],["controlflowrequires",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["langerror",3],["formatter",3]],["result",6]],[[["langerrorkind",4],["formatter",3]],["result",6]],[[["langerrorkind",4],["formatter",3]],["result",6]],[[["controlflowrequires",4],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[["langerrorkind",4],["span",3],["compilecontext",3]],["langerrorsnippet",3]],[[]],[[]],[[]],[[]],null,[[["langerror",3],["langerror",3]],["bool",0]],[[["langerrorkind",4],["langerrorkind",4]],["bool",0]],[[["langerrorkind",4],["span",3]],["langerror",3]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["parseerror",4],["compilecontext",3]],["snippetowned",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parseerror",4]],["parseerror",4]],[[["",0],["",0]]],[[["parseerror",4],["parseerror",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["parseerror",4],["formatter",3]],["result",6]],[[]],[[]],[[["parseerror",4],["parseerror",4]],["bool",0]],[[["parseerror",4]],["span",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["annotationowned",3]],["annotation",3]],[[["sliceowned",3],["inputfiles",3]],["slice",3]],[[["snippetowned",3],["inputfiles",3]],["snippet",3]],[[["sourceannotationowned",3],["inputfiles",3]],["sourceannotation",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["snippetowned",3],["formatter",3]],["result",6]],[[["sliceowned",3],["formatter",3]],["result",6]],[[["annotationowned",3],["formatter",3]],["result",6]],[[["sourceannotationowned",3],["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["str",0]],["string",3]],[[],["string",3]],[[],["string",3]]],"p":[[3,"CompileErrors"],[4,"LangErrorKind"],[4,"ControlFlowRequires"],[4,"ParseError"],[4,"SingleCompileError"],[3,"SnippetOwned"],[3,"SourceAnnotationOwned"],[3,"SliceOwned"],[8,"AsAnnotationSnippet"],[3,"LangError"],[13,"UnexpectedStructInitializer"],[13,"NonComptimeVariable"],[13,"InvalidControlFlow"],[13,"UnexpectedType"],[13,"MissingModule"],[13,"InvalidExternItemPath"],[13,"UnexpectedOverload"],[13,"IndexOutOfBounds"],[13,"UnexpectedOperator"],[13,"TupleMismatch"],[13,"MissingStructInitializer"],[13,"CircularImport"],[13,"NotYetImplemented"],[13,"MissingVariable"],[13,"UnexpectedProperty"],[13,"InvalidIntLiteral"],[13,"UnexpectedToken"],[13,"LeftoverInput"],[13,"UnexpectedComma"],[13,"UnexpectedFunctionIdent"],[13,"UnexpectedPath"],[13,"ParseError"],[13,"LangError"],[3,"LangErrorSnippet"],[3,"AnnotationOwned"]]},\
"debris_hir":{"doc":"High-level intermediate representation","t":[3,3,3,3,3,3,11,11,11,11,12,12,12,11,12,12,12,11,11,11,11,11,0,0,0,0,12,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,3,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,12,11,11,11,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,4,3,4,3,4,4,4,4,3,3,4,3,3,3,4,4,3,4,3,3,4,3,4,3,3,3,4,3,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11],"n":["Hir","HirContext","HirFile","IdentifierPath","ImportDependencies","SpannedIdentifier","borrow","borrow","borrow_mut","borrow_mut","code_id","code_id","compile_context","default","dependencies","errors","file_offset","fmt","fmt","from","from","get","hir_context","hir_impl","hir_nodes","identifier","idents","imported_modules","input_file","insert","into","into","is_empty","iter","len","main_function","main_function","modules","span","spans","try_from","try_from","try_into","try_into","type_id","type_id","HirContext","add_import_file","borrow","borrow_mut","build_accessor","compile_context","convert_pattern_to_value","dependencies","errors","file_offset","fmt","from","get_ident","handle_assignment","handle_attribute_list","handle_block","handle_branch","handle_control_flow","handle_expression","handle_function","handle_import","handle_infinite_loop","handle_infix_op","handle_item","handle_module","handle_parse_error","handle_path","handle_pattern","handle_postfix_op","handle_prefix_op","handle_struct","handle_struct_literal","handle_type_pattern","handle_update","handle_value","handle_while_loop","input_file","into","item_span","maybe_add_name_to_expression","new","normalize_local_span","span","try_from","try_into","type_id","HirFile","borrow","borrow_mut","code_id","fmt","from","from_code","into","main_function","try_from","try_into","type_id","And","Attribute","BinaryOperation","Block","Block","Bool","Break","Comparison","Comptime","ConditionalBranch","ConditionalBranch","Continue","ControlFlow","ControlFlow","Divide","Dot","Eq","Expression","Fixed","FormatString","Function","Function","Function","FunctionCall","Ge","Gt","HirBlock","HirComparisonOperator","HirConditionalBranch","HirConstValue","HirControlFlow","HirControlKind","HirDeclarationMode","HirExpression","HirFormatStringMember","HirFunction","HirFunctionCall","HirFunctionName","HirImport","HirInfiniteLoop","HirInfix","HirInfixOperator","HirItem","HirModule","HirObject","HirParameterDeclaration","HirPrefix","HirPrefixOperator","HirPropertyDeclaration","HirStatement","HirStruct","HirStructInitialization","HirTupleInitialization","HirTypePattern","HirVariableInitialization","HirVariablePattern","HirVariableUpdate","Ident","Import","InfiniteLoop","InfiniteLoop","Integer","Le","Let","Lt","Minus","Minus","Module","Modulo","Ne","Not","Object","Or","Path","Path","Path","Plus","Return","Statement","String","String","Struct","StructInitialization","Times","Tuple","Tuple","TupleInitialization","UnaryOperation","Unnamed","Value","Variable","Variable","VariableDecl","VariableUpdate","attributes","attributes","attributes","base","block","block","block","block_negative","block_positive","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","condition","datatype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expression","expression","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_ident","get_raw_special_ident","get_special_ident","id","ident","ident","ident","ident","ident","ident","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_ident","is_comptime","is_unknown","kind","last_item_span","mode","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","objects","objects","operator","operator","parameter_span","parameters","parameters","parameters_span","pattern","pattern","properties","return_type","return_type_span","return_value","returns","signature_span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","span","spanned_ident","spanned_ident","statements","takes_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","values","values","span","span","span","span","span","value","value","value","value","value","0","0","0","0","0","0","0","0","0","0","0","lhs","operation","operation","rhs","value","0","0","0","file","pos","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","parameters","return_type","span","span","values","0","0","IdentifierPath","SpannedIdentifier","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","display","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","idents","idents","into","into","into_inner","last","ne","ne","new","new","single_ident","span","span","span_without_last","split_at_last","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["debris_hir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_hir::hir_context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_hir::hir_impl","","","","","","","","","","","","debris_hir::hir_nodesdebris_hir::hir_nodes::HirConstValue","","","","","","","","","","debris_hir::hir_nodes::HirExpression","","","","","","","","","","","","","","","","debris_hir::hir_nodes::HirFormatStringMember","","debris_hir::hir_nodes::HirFunctionName","","","debris_hir::hir_nodes::HirInfixOperator","debris_hir::hir_nodes::HirItem","","debris_hir::hir_nodes::HirObject","","","","debris_hir::hir_nodes::HirStatement","","","","","","","debris_hir::hir_nodes::HirTypePattern","","","","","","debris_hir::hir_nodes::HirVariablePattern","","debris_hir::identifier","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The hir representation of an input file and all of its …","Contains state data that are used during the hir …","This struct stores the high-level intermediate …","A list of <code>SpannedIdentifier</code>s, can be a dotted path","Keeps track of all imported modules, uses indexes as keys","Identifies a variable or value based on its span","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Converts the high-level representation from the pest …","Defines every node used in the hir representation","","","","","Inserts a dependency and the code span and returns its …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","The spans that correspond to the modules. Access via the …","","","","","","","Contains state data that are used during the hir …","","","","Creates an expression that accesses <code>lhs</code> on <code>rhs</code> and tries to","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Handles while loops by desugaring them into normal loops …","","Calls <code>U::from(self)</code>.","","","","","","","","","This struct stores the high-level intermediate …","","","","","Returns the argument unchanged.","Creates a <code>HirFile</code> from code.","Calls <code>U::from(self)</code>.","","","","","Logical and","Attributes are a form of metadata that can be applied to …","A binary operation, for example <code>a + b</code>","A block which returns something","A normal block","","","Any comparison like &lt;, &gt;, &lt;=, &gt;=, ==, !=","","","A normal if statement","","","Controls the program flow","Mathematical division","Accesses a property of an object","","","","","An anonymous function","A function, like <code>fn(Int, Int) -&gt; Int</code>","","A function call, for example <code>foo()</code> or <code>path.to.foo()</code>","","","A block of code. Usually contained withing a pair of {} …","Any supported comparison operator","An if-branch which checks a condition and runs code …","A constant literal, already parsed","Represents a control flow statement like return or break","","","Any expression","","A function, which contains other statements","Any function call, can be dotted","Anonymous functions don’t have an explicit identifier, …","Marks an import statement. The id specifies the index of …","An infinite loop (Can be exited using control keywords …","Holds an infix operator combined with its span","Any operator that can be used as an infix","Any Item","A module with an associated name","","Holds a variable type declaration like <code>foo: String</code> This is …","Holds a prefix operator combined with its span","Any prefix operator","Declaration of a property in a struct definition","Any statement, the difference to an expression is that a …","A struct definition","Creates a Struct Object from a struct","","Any pattern that is allowed to specify a function …","Sets a variable like <code>let a = expression();</code>","","Similar to <code>HirVariableInitialization</code>, however this node …","","Syntax sugar for a module from another file","","","","","","","Mathematical subtraction","Mathematical minus","","Mathematical modulo","","Logical negation","","Logical or","","A path, for example <code>a.b.c</code>","A normal type, like <code>Int</code>","Mathematical addition","","","","","","","Mathematical multiplication","","","","A unary operation, for example <code>-a</code>","","A literal value, for example <code>2.0</code> or <code>&quot;Hello World&quot;</code>","","A variable, for example <code>a</code>","A variable declaration, for example <code>let foo = 1</code>","A write to an already existing variable","","","","","","The block containing all statements of the function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the property","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the associated Ident","Returns the associated <code>SpecialIdent</code>","Returns the associated <code>SpecialIdent</code>","","","","The identifier inside of the struct","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns the span of the item in the block which is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The objects that got declared within this block","","","","","","","","","","All declared properties of this struct","","","The returned value:","","","","","","","","","","","","","","","","","","The span of the declaration","","","","","","","","","","","The statements of this blocklist of <code>SpannedIdentifier</code>s, can be a dotted path","Identifies a variable or value based on its span","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Creates a new <code>SpannedIdentifier</code> from the Span","Creates a new <code>IdentifierPath</code> from the vec of identifiers","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,2,1,2,3,1,4,2,4,4,4,1,2,1,2,2,0,0,0,0,5,1,4,2,1,2,2,2,2,3,1,2,6,2,1,2,1,2,1,2,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,3,3,3,3,3,3,3,3,3,3,3,7,0,8,8,9,10,11,7,12,8,9,11,8,9,7,7,13,9,10,10,8,14,15,8,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,15,8,9,10,13,12,13,7,17,15,7,13,17,18,7,19,8,14,7,11,18,10,20,15,8,7,19,14,8,8,16,8,20,8,9,9,21,22,23,24,25,21,23,26,26,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,13,7,27,17,28,11,31,12,14,16,13,7,27,17,28,11,31,12,14,16,26,34,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,30,38,10,20,13,7,27,17,28,29,11,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,17,13,7,29,29,31,34,21,22,23,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,16,26,16,30,37,32,10,20,7,27,28,29,30,25,31,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,37,22,27,28,21,35,21,35,32,33,22,21,21,37,11,21,10,19,8,9,14,38,16,27,28,29,30,25,31,32,33,34,35,26,24,36,37,21,22,23,16,15,37,11,13,7,27,17,28,11,31,12,14,16,11,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,31,10,20,13,7,27,17,28,29,11,30,25,31,12,19,32,33,34,35,26,24,36,8,9,14,37,38,16,21,22,23,15,18,32,33,35,24,36,39,40,41,42,43,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,55,55,56,57,58,59,60,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,76,77,77,78,79,0,0,6,5,6,5,6,5,6,5,5,6,5,6,5,6,5,6,6,5,5,6,5,5,5,6,5,5,5,6,5,6,5,5,5,6,5,5,6,5,6,5,6,5,6,5],"f":[null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[],["importdependencies",3]],null,null,null,[[["hir",3],["formatter",3]],["result",6]],[[["importdependencies",3],["formatter",3]],["result",6]],[[]],[[]],[[["importdependencies",3],["usize",0]]],null,null,null,null,null,null,null,[[["importdependencies",3],["ident",4],["span",3]],["usize",0]],[[]],[[]],[[["importdependencies",3]],["bool",0]],[[["importdependencies",3]],["iterator",8]],[[["importdependencies",3]],["usize",0]],null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["hircontext",3],["spannedidentifier",3]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["hirexpression",4],["hirexpression",4],["span",3]],["hirexpression",4]],null,[[["hircontext",3],["hirvariablepattern",4]],["hirexpression",4]],null,null,null,[[["hircontext",3],["formatter",3]],["result",6]],[[]],[[["hircontext",3],["spannedidentifier",3]],["ident",4]],[[["hircontext",3],["assignment",3]],["hirvariableinitialization",3]],[[["hircontext",3],["attributelist",3]],["vec",3,[["attribute",3]]]],[[["hircontext",3],["block",3]],["hirblock",3]],[[["hircontext",3],["branch",3]],["hirconditionalbranch",3]],[[["hircontext",3],["controlflowoperation",3]],["hircontrolflow",3]],[[["hircontext",3],["expression",4]],["hirexpression",4]],[[["hircontext",3],["function",3]],["hirfunction",3]],[[["hircontext",3],["import",3]],["hirimport",3]],[[["hircontext",3],["infloop",3]],["hirinfiniteloop",3]],[[["hircontext",3],["infixop",3]],["hirexpression",4]],[[["hircontext",3],["statement",4]],["hiritem",4]],[[["hircontext",3],["module",3]],["hirmodule",3]],[[["hircontext",3],["parseerrorkind",4]],["parseerror",4]],[[["hircontext",3],["path",3]],["identifierpath",3]],[[["hircontext",3],["pattern",4]],["hirvariablepattern",4]],[[["hircontext",3],["postfixop",3]],["hirexpression",4]],[[["hircontext",3],["prefixop",3]],["hirexpression",4]],[[["hircontext",3],["struct",3]],["hirstruct",3]],[[["hircontext",3],["hirexpression",4],["structliteral",3]],["hirstructinitialization",3]],[[["hircontext",3],["pattern",4]],["hirtypepattern",4]],[[["hircontext",3],["update",3]],["hirvariableupdate",3]],[[["hircontext",3],["value",4]],["hirexpression",4]],[[["hircontext",3],["whileloop",3]],["hirinfiniteloop",3]],null,[[]],[[["hircontext",3]],["span",3]],[[["hirexpression",4],["spannedidentifier",3]],["hirexpression",4]],[[["coderef",3],["compilecontext",3],["importdependencies",3]],["hircontext",3]],[[["hircontext",3],["localspan",3]],["span",3]],[[["hircontext",3],["into",8,[["astnodeortoken",4]]]],["span",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["hirfile",3],["formatter",3]],["result",6]],[[]],[[["coderef",3],["compilecontext",3],["importdependencies",3]],["result",4,[["hirfile",3],["vec",3,[["singlecompileerror",4]]]]]],[[]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullhircomparisonoperator",4]],["hircomparisonoperator",4]],[[["hirinfixoperator",4]],["hirinfixoperator",4]],[[["hirinfix",3]],["hirinfix",3]],[[["hirprefixoperator",4]],["hirprefixoperator",4]],[[["hirprefix",3]],["hirprefix",3]],[[["hircontrolkind",4]],["hircontrolkind",4]],[[["hirparameterdeclaration",3]],["hirparameterdeclaration",3]],[[["hirdeclarationmode",4]],["hirdeclarationmode",4]],[[["hirtypepattern",4]],["hirtypepattern",4]],[[["hirfunctionname",4]],["hirfunctionname",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["hirconstvalue",4],["hirconstvalue",4]],["bool",0]],[[["hirformatstringmember",4],["hirformatstringmember",4]],["bool",0]],[[["hircomparisonoperator",4],["hircomparisonoperator",4]],["bool",0]],[[["hirinfixoperator",4],["hirinfixoperator",4]],["bool",0]],[[["hirinfix",3],["hirinfix",3]],["bool",0]],[[["hirprefixoperator",4],["hirprefixoperator",4]],["bool",0]],[[["hirprefix",3],["hirprefix",3]],["bool",0]],[[["hirimport",3],["hirimport",3]],["bool",0]],[[["hircontrolkind",4],["hircontrolkind",4]],["bool",0]],[[["hircontrolflow",3],["hircontrolflow",3]],["bool",0]],[[["hirinfiniteloop",3],["hirinfiniteloop",3]],["bool",0]],[[["hirparameterdeclaration",3],["hirparameterdeclaration",3]],["bool",0]],[[["hirdeclarationmode",4],["hirdeclarationmode",4]],["bool",0]],[[["hirvariablepattern",4],["hirvariablepattern",4]],["bool",0]],[[["hirvariableinitialization",3],["hirvariableinitialization",3]],["bool",0]],[[["hirvariableupdate",3],["hirvariableupdate",3]],["bool",0]],[[["hirpropertydeclaration",3],["hirpropertydeclaration",3]],["bool",0]],[[["hirfunctioncall",3],["hirfunctioncall",3]],["bool",0]],[[["hirconditionalbranch",3],["hirconditionalbranch",3]],["bool",0]],[[["hirstructinitialization",3],["hirstructinitialization",3]],["bool",0]],[[["hirtupleinitialization",3],["hirtupleinitialization",3]],["bool",0]],[[["hirexpression",4],["hirexpression",4]],["bool",0]],[[["hirstatement",4],["hirstatement",4]],["bool",0]],[[["hirtypepattern",4],["hirtypepattern",4]],["bool",0]],[[["hirblock",3],["hirblock",3]],["bool",0]],[[["attribute",3],["attribute",3]],["bool",0]],[[["hirfunctionname",4],["hirfunctionname",4]],["bool",0]],[[["hirfunction",3],["hirfunction",3]],["bool",0]],[[["hirstruct",3],["hirstruct",3]],["bool",0]],[[["hirmodule",3],["hirmodule",3]],["bool",0]],[[["hirobject",4],["hirobject",4]],["bool",0]],[[["hiritem",4],["hiritem",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,[[["hirconstvalue",4],["formatter",3]],["result",6]],[[["hirformatstringmember",4],["formatter",3]],["result",6]],[[["hircomparisonoperator",4],["formatter",3]],["result",6]],[[["hirinfixoperator",4],["formatter",3]],["result",6]],[[["hirinfix",3],["formatter",3]],["result",6]],[[["hirprefixoperator",4],["formatter",3]],["result",6]],[[["hirprefix",3],["formatter",3]],["result",6]],[[["hirimport",3],["formatter",3]],["result",6]],[[["hircontrolkind",4],["formatter",3]],["result",6]],[[["hircontrolkind",4],["formatter",3]],["result",6]],[[["hircontrolflow",3],["formatter",3]],["result",6]],[[["hirinfiniteloop",3],["formatter",3]],["result",6]],[[["hirparameterdeclaration",3],["formatter",3]],["result",6]],[[["hirdeclarationmode",4],["formatter",3]],["result",6]],[[["hirvariablepattern",4],["formatter",3]],["result",6]],[[["hirvariableinitialization",3],["formatter",3]],["result",6]],[[["hirvariableupdate",3],["formatter",3]],["result",6]],[[["hirpropertydeclaration",3],["formatter",3]],["result",6]],[[["hirfunctioncall",3],["formatter",3]],["result",6]],[[["hirconditionalbranch",3],["formatter",3]],["result",6]],[[["hirstructinitialization",3],["formatter",3]],["result",6]],[[["hirtupleinitialization",3],["formatter",3]],["result",6]],[[["hirexpression",4],["formatter",3]],["result",6]],[[["hirstatement",4],["formatter",3]],["result",6]],[[["hirtypepattern",4],["formatter",3]],["result",6]],[[["hirblock",3],["formatter",3]],["result",6]],[[["attribute",3],["formatter",3]],["result",6]],[[["hirfunctionname",4],["formatter",3]],["result",6]],[[["hirfunction",3],["formatter",3]],["result",6]],[[["hirstruct",3],["formatter",3]],["result",6]],[[["hirmodule",3],["formatter",3]],["result",6]],[[["hirobject",4],["formatter",3]],["result",6]],[[["hiritem",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hirprefixoperator",4]],["ident",4]],[[["hircomparisonoperator",4]],["specialident",4]],[[["hirinfixoperator",4]],["specialident",4]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hirfunctionname",4],["inputfiles",3]],["ident",4]],null,[[["hirfunctionname",4]],["bool",0]],null,[[["hirblock",3]],["span",3]],null,[[["hirconstvalue",4],["hirconstvalue",4]],["bool",0]],[[["hirformatstringmember",4],["hirformatstringmember",4]],["bool",0]],[[["hirinfixoperator",4],["hirinfixoperator",4]],["bool",0]],[[["hirinfix",3],["hirinfix",3]],["bool",0]],[[["hirprefix",3],["hirprefix",3]],["bool",0]],[[["hirimport",3],["hirimport",3]],["bool",0]],[[["hircontrolflow",3],["hircontrolflow",3]],["bool",0]],[[["hirinfiniteloop",3],["hirinfiniteloop",3]],["bool",0]],[[["hirparameterdeclaration",3],["hirparameterdeclaration",3]],["bool",0]],[[["hirvariablepattern",4],["hirvariablepattern",4]],["bool",0]],[[["hirvariableinitialization",3],["hirvariableinitialization",3]],["bool",0]],[[["hirvariableupdate",3],["hirvariableupdate",3]],["bool",0]],[[["hirpropertydeclaration",3],["hirpropertydeclaration",3]],["bool",0]],[[["hirfunctioncall",3],["hirfunctioncall",3]],["bool",0]],[[["hirconditionalbranch",3],["hirconditionalbranch",3]],["bool",0]],[[["hirstructinitialization",3],["hirstructinitialization",3]],["bool",0]],[[["hirtupleinitialization",3],["hirtupleinitialization",3]],["bool",0]],[[["hirexpression",4],["hirexpression",4]],["bool",0]],[[["hirstatement",4],["hirstatement",4]],["bool",0]],[[["hirtypepattern",4],["hirtypepattern",4]],["bool",0]],[[["hirblock",3],["hirblock",3]],["bool",0]],[[["attribute",3],["attribute",3]],["bool",0]],[[["hirfunctionname",4],["hirfunctionname",4]],["bool",0]],[[["hirfunction",3],["hirfunction",3]],["bool",0]],[[["hirstruct",3],["hirstruct",3]],["bool",0]],[[["hirmodule",3],["hirmodule",3]],["bool",0]],[[["hirobject",4],["hirobject",4]],["bool",0]],[[["hiritem",4],["hiritem",4]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,[[["hirfunction",3]],["span",3]],null,[[["hircontrolkind",4]],["bool",0]],null,[[["hirconstvalue",4]],["span",3]],[[["hirvariablepattern",4]],["span",3]],[[["hirexpression",4]],["span",3]],[[["hirstatement",4]],["span",3]],[[["hirtypepattern",4]],["span",3]],[[["attribute",3]],["span",3]],[[["hirfunctionname",4]],["span",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirfunctionname",4]],["option",4,[["spannedidentifier",3]]]],[[["hirobject",4]],["option",4,[["spannedidentifier",3]]]],null,[[["hircontrolkind",4]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["spannedidentifier",3]],["spannedidentifier",3]],[[["identifierpath",3]],["identifierpath",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["identifierpath",3],["compilecontext",3]],["string",3]],[[["spannedidentifier",3],["spannedidentifier",3]],["bool",0]],[[["identifierpath",3],["identifierpath",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["spannedidentifier",3],["formatter",3]],["result",6]],[[["identifierpath",3],["formatter",3]],["result",6]],[[["span",3]],["spannedidentifier",3]],[[]],[[["spannedidentifier",3]],["identifierpath",3]],[[]],[[["spannedidentifier",3],["",0]]],[[["identifierpath",3],["",0]]],[[["identifierpath",3]]],null,[[]],[[]],[[["identifierpath",3]],["vec",3,[["spannedidentifier",3]]]],[[["identifierpath",3]],["spannedidentifier",3]],[[["spannedidentifier",3],["spannedidentifier",3]],["bool",0]],[[["identifierpath",3],["identifierpath",3]],["bool",0]],[[["span",3]],["spannedidentifier",3]],[[["vec",3,[["spannedidentifier",3]]]],["identifierpath",3]],[[["identifierpath",3]],["option",4,[["spannedidentifier",3]]]],[[["identifierpath",3]],["span",3]],null,[[["identifierpath",3]],["option",4,[["span",3]]]],[[["identifierpath",3]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Hir"],[3,"ImportDependencies"],[3,"HirFile"],[3,"HirContext"],[3,"IdentifierPath"],[3,"SpannedIdentifier"],[4,"HirInfixOperator"],[4,"HirExpression"],[4,"HirStatement"],[4,"HirConstValue"],[4,"HirControlKind"],[4,"HirDeclarationMode"],[4,"HirComparisonOperator"],[4,"HirTypePattern"],[4,"HirObject"],[4,"HirFunctionName"],[4,"HirPrefixOperator"],[4,"HirItem"],[4,"HirVariablePattern"],[4,"HirFormatStringMember"],[3,"HirFunction"],[3,"HirStruct"],[3,"HirModule"],[3,"HirStructInitialization"],[3,"HirInfiniteLoop"],[3,"HirConditionalBranch"],[3,"HirInfix"],[3,"HirPrefix"],[3,"HirImport"],[3,"HirControlFlow"],[3,"HirParameterDeclaration"],[3,"HirVariableInitialization"],[3,"HirVariableUpdate"],[3,"HirPropertyDeclaration"],[3,"HirFunctionCall"],[3,"HirTupleInitialization"],[3,"HirBlock"],[3,"Attribute"],[13,"Integer"],[13,"Bool"],[13,"Fixed"],[13,"String"],[13,"FormatString"],[13,"Variable"],[13,"Path"],[13,"Value"],[13,"Block"],[13,"Function"],[13,"FunctionCall"],[13,"ConditionalBranch"],[13,"StructInitialization"],[13,"TupleInitialization"],[13,"InfiniteLoop"],[13,"ControlFlow"],[13,"BinaryOperation"],[13,"UnaryOperation"],[13,"String"],[13,"Variable"],[13,"Ident"],[13,"Unnamed"],[13,"Comparison"],[13,"Object"],[13,"Statement"],[13,"Function"],[13,"Struct"],[13,"Module"],[13,"Import"],[13,"VariableDecl"],[13,"VariableUpdate"],[13,"ControlFlow"],[13,"Block"],[13,"ConditionalBranch"],[13,"InfiniteLoop"],[13,"Expression"],[13,"Path"],[13,"Function"],[13,"Tuple"],[13,"Path"],[13,"Tuple"]]},\
"debris_lang":{"doc":"The Debris compiler.","t":[5,5,5],"n":["debug_run","init","main"],"q":["debris_lang","",""],"d":["Compiles the file <code>test.txt</code> into llir","",""],"i":[0,0,0],"f":[[[["compileconfig",3]],["result",4,[["llir",3],["compileerrors",3]]]],[[],["compileconfig",3]],[[]]],"p":[]},\
"debris_llir":{"doc":"Low-level intermediate representation","t":[12,13,3,3,13,13,3,13,13,13,13,13,3,13,6,13,13,8,6,3,3,13,13,13,13,13,4,13,8,10,0,12,0,12,0,12,10,0,12,0,12,0,12,12,10,12,14,10,0,0,0,0,0,0,12,14,12,0,14,0,10,0,0,0,12,0,12,12,12,0,0,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,4,6,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,8,6,3,8,10,11,11,11,11,12,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,5,12,3,13,13,4,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,8,6,3,8,8,11,11,11,11,11,11,14,10,11,11,11,11,14,14,14,12,11,11,10,5,12,10,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,13,4,13,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,4,3,4,13,3,3,6,3,13,13,13,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,11,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,3,13,4,13,3,3,13,3,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,3,11,11,12,11,11,11,12,11,11,12,12,11,11,11,11,12,13,13,3,13,13,3,13,4,3,13,13,13,4,13,13,3,4,3,13,3,13,3,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,14,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,12,11,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,13,11,11,11,11,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,11,11,11,5,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,5,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,11,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,4,3,13,13,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,6,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,11,12,12,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,14,11,11,11,11,14,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,3,11,14,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,3,3,6,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,6,0,0,0,0,0,0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,3,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,4,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,3,17,8,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,12,12,11,11,11,11,11,11,17,12,13,13,13,13,13,4,13,13,13,3,3,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,2,2,0,0,0,0,0,2,2,2,0,0,2,5,3,18,11,11,12,11,11,11,11,11,11,12,5,5,5,11,11,11,11,5,5,5,3,11,11,11,11,11,11,11,11,11,11,12,13,13,3,4,13,12,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,5,12,3,11,11,11,11,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,13,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,11,11,11,3,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Any","CallGraph","CodeStats","ComptimeBool","ComptimeInt","DebrisObject","DynamicBool","DynamicInt","FormatString","Function","FunctionRef","Llir","Module","NativeFunctionId","Never","Null","ObjectPayload","ObjectProperties","ObjectRef","Runtime","String","Struct","StructObject","Tuple","TupleObject","Type","Type","ValidPayload","as_any","block_id","call_graph","class","class","debris_object","entry_function","eq","error_utils","extern_blocks","extern_item_path","function_calls","function_interface","function_parameters","functions","get_static_class","graph","impl_class","into_object","item_id","json_format","llir_builder","llir_function_builder","llir_impl","llir_nodes","load_blocks","log","loop_detector","macro_impl_class","match_object","memory","memory_layout","minecraft_utils","objects","opt","payload","runtime","runtime","scheduled_blocks","stats","type_context","types","variable_information","visited_functions","visitor","0","BlockId","borrow","borrow_mut","clone","clone_into","cmp","dummy","eq","equivalent","fmt","fmt","from","hash","into","ne","partial_cmp","to_owned","to_string","try_from","try_into","type_id","Class","ClassKind","ClassRef","Function","Struct","StructValue","Tuple","TupleValue","Type","as_value","borrow","borrow","borrow_mut","borrow_mut","comptime_encodable","diverges","diverges","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","get_property","into","into","kind","matches","matches","matches_type","ne","ne","new_empty","new_obj_from_allocator","properties","runtime_encodable","to_string","to_string","try_from","try_from","try_into","try_into","typ","type_id","type_id","0","0","0","0","0","0","0","DebrisObject","ObjectPayload","ObjectProperties","ObjectRef","ValidPayload","as_any","borrow","borrow","borrow_mut","borrow_mut","class","clone","clone_into","create_class","create_class","deref","downcast_class","downcast_payload","eq","eq","equivalent","fmt","fmt","fmt","from","from","from","from_payload","get_property","get_property","get_property","get_static_class","into","into","into_object","into_result","json_fmt","json_fmt","memory_layout","payload","runtime_class","runtime_class","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unexpected_type","0","ExternItemPath","InvalidCharacter","InvalidDoubleUnderscore","ItemPathError","VALID_CHARACTERS","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","from","from","hash","into","into","ne","new","path","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify","0","0","1","0","DebrisFunctionInterface","DowncastArray","NormalizedFnSig","NormalizedFunction","ToFunctionInterface","ValidReturnType","borrow","borrow","borrow_mut","borrow_mut","call","call_raw","count","downcast_array","from","from","from","handle_raw_result","impl_downcast_array","impl_map_valid_return_type","impl_to_function_interface","inner_fn","into","into","into_result","make_overload","required_parameter_fn","to_normalized_function","to_normalized_function","try_from","try_from","try_into","try_into","type_id","type_id","ItemId","ItemIdAllocator","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","current","default","eq","equivalent","fmt","fmt","from","from","hash","id","into","into","ne","next_id","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","FormattedText","Function","JsonFormatComponent","RawText","Score","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","into","into","ne","ne","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","BlockIdGenerator","CallStack","FunctionGenerics","FunctionParameter","Generic","LlirBuilder","MonomorphizedFunction","NativeFunctionId","NativeFunctionMap","None","Parameter","Some","block_id","block_id_for","block_id_generator","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","class","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compile_context","contains","default","default","extern_items","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","function_parameters","functions","generic_instantiation","generic_instantiation_by_index","get","get_mut","global_namespace","insert","instantiations","into","into","into","into","into","into","into","item_id_allocator","max_id","mir_function","native_function_map","new","new","next_id","next_id","obj_id","return_value","return_values_arena","runtime","set_obj","signature","span","then","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_context","type_id","type_id","type_id","type_id","type_id","type_id","type_id","block_id","function_id","prev","class","class","index","index","obj_id","obj_id","span","span","template","BuilderSharedState","Check","EvaluationMode","Full","FunctionBuilderRuntime","LlirFunctionBuilder","Monomorphization","ParameterPartition","_set_obj","ancestor","block_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","builder","call_builtin_function","call_native_function","call_native_function_no_alias","call_stack","clone","clone_into","compile_context","compile_native_function","compile_null_function","compiled_contexts","contexts","copy_if_runtime","data","declare_obj","default","default","export","exports","fmt","fmt","fmt","fmt","force_compile_context","from","from","from","from","from","functions","get_compiled_context","get_function","get_function_generics","get_obj","get_obj_opt","handle_branch","handle_builtin_function_call","handle_dynamic_branch","handle_exported_functions","handle_function_call","handle_goto","handle_module","handle_native_function_call","handle_node","handle_on_tick_functions","handle_primitive_declaration","handle_property_access","handle_property_update","handle_runtime_copy","handle_runtime_promotion","handle_static_branch","handle_variable_update","has_overlapping_references","into","into","into","into","into","left","local_runtime","monomorphize_native_function","monomorphize_raw","new","new","nodes","object_mapping","pending_runtime_functions","pivot","promote_obj","register_ticking_function","right","set_obj","shared","ticking_functions","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unify_with","verify_parameters","verify_property_exists","verify_tuple_length","verify_value","verify_value_comptime","Llir","borrow","borrow_mut","entry_function","fmt","fmt","from","functions","into","new","runtime","stats","to_string","try_from","try_into","type_id","0","Actionbar","And","BinaryOperation","BinaryOperation","Both","Branch","Branch","BranchKind","Call","Call","Chat","Compare","Condition","Condition","Execute","ExecuteRaw","ExecuteRawComponent","FastStore","FastStore","FastStoreFromResult","FastStoreFromResult","Function","NegBranch","Node","Node","Nop","Or","PosBranch","Read","Read","ReadWrite","ReadWrite","ScoreboardValue","String","Subtitle","Title","VariableAccess","VariableAccessMut","Write","Write","Write","WriteMessage","WriteTarget","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calls_function","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","condition","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","has_call","id","id","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_effect_free","is_effect_free","is_empty","is_simple","lhs","make_access_visitor","message","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","neg_branch","nodes","nodes","not","operation","pos_branch","reads_from","return_value","rhs","scan","scan_mut","scoreboard","scoreboard","scoreboard","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","variable_accesses","variable_accesses","variable_accesses_mut","variable_accesses_mut","variable_reads","writes_to","0","0","comparison","lhs","rhs","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","0","0","0","1","MemoryLayout","Multiple","One","Unsized","borrow","borrow_mut","clone","clone_into","copy","eq","equivalent","fmt","from","from","from_iter","into","iter","mem_copy","mem_size","ne","to_owned","try_from","try_into","type_id","0","0","Custom","Divide","Equal","Greater","GreaterOrEqual","Internal","Less","LessOrEqual","Main","Max","Min","Minus","Modulo","NotEqual","Plus","Scoreboard","Scoreboard","ScoreboardComparison","ScoreboardOperation","ScoreboardValue","Static","Times","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","evaluate","evaluate","flip_sides","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","hash","id","into","into","into","into","invert","ne","ne","str_value","str_value","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","1","obj_bool","obj_bool_static","obj_class","obj_format_string","obj_function","obj_function_ref","obj_int","obj_int_static","obj_module","obj_native_function","obj_never","obj_null","obj_string","obj_struct","obj_struct_object","obj_tuple_object","ObjBool","and_static","as_scoreboard_value","borrow","borrow_mut","cmp","create_properties","eq","equivalent","fmt","fmt","from","from","id","into","into_result","json_fmt","memory_layout","memory_layout","ne","new","or_static","static_class","to_string","try_from","try_into","type_id","ObjStaticBool","as_scoreboard_value","borrow","borrow_mut","create_properties","eq","equivalent","fmt","fmt","from","from","into","into_result","memory_layout","ne","runtime_class","static_class","to_string","try_from","try_into","type_id","value","HasClass","ObjClass","borrow","borrow_mut","class","clone","clone_into","create_properties","create_properties","deref","eq","equivalent","fmt","fmt","from","from","get_property","into","into_result","memory_layout","ne","new","static_class","static_class","to_owned","to_string","try_from","try_into","type_id","FormatStringComponent","ObjFormatString","String","Value","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","components","create_properties","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into_result","json_fmt","memory_layout","ne","ne","new","static_class","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","0","0","FunctionClass","FunctionClassRef","FunctionContext","ObjFunction","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call_function","call_function_raw","callback_function","clone","clone_into","compile_native_function","create_properties","diverges","emit","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","into","into","into","into_result","item_id","item_id_allocator","llir_function_builder","matches","memory_layout","name","ne","new","nodes","parameters","parameters","promote_obj","return_class","runtime_mut","self_val","self_value_as","span","static_class","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_ctx","type_id","type_id","type_id","with_new_function_context","ObjFunctionRef","block_id","borrow","borrow_mut","clone","clone_into","create_properties","eq","equivalent","fmt","fmt","from","into","into_result","json_fmt","memory_layout","ne","new","static_class","to_owned","to_string","try_from","try_into","type_id","ObjInt","as_scoreboard_value","bin_op","borrow","borrow_mut","clone","clone_into","cmp","create_properties","eq","equivalent","fmt","fmt","from","from","id","into","into_result","json_fmt","memory_layout","memory_layout","ne","new","static_class","to_owned","to_string","try_from","try_into","type_id","ObjStaticInt","as_scoreboard_value","bin_op","borrow","borrow_mut","clone","clone_into","cmp","create_properties","eq","equivalent","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","impl_for","into","into_result","memory_layout","ne","new","runtime_class","static_class","to_owned","to_string","try_from","try_into","type_id","value","ObjModule","borrow","borrow_mut","clone","clone_into","create_properties","eq","equivalent","fmt","fmt","from","get_property","ident","ident","into","into_result","members","members","memory_layout","ne","new","register","register_function","set_property","static_class","to_owned","to_string","try_from","try_into","type_id","with_members","ObjNativeFunction","borrow","borrow_mut","create_class","create_properties","eq","equivalent","fmt","fmt","from","function_id","into","into_result","memory_layout","ne","signature","static_class","to_string","try_from","try_into","type_id","ObjNever","borrow","borrow_mut","clone","clone_into","create_properties","eq","equivalent","fmt","fmt","from","into","into_result","memory_layout","static_class","to_owned","to_string","try_from","try_into","type_id","ObjNull","borrow","borrow_mut","clone","clone_into","create_properties","eq","equivalent","fmt","fmt","from","from","into","into_result","memory_layout","static_class","to_owned","to_string","try_from","try_into","type_id","ObjString","borrow","borrow_mut","clone","clone_into","create_properties","deref","eq","equivalent","fmt","fmt","from","from","into","into_result","json_fmt","memory_layout","ne","new","static_class","to_owned","to_string","try_from","try_into","type_id","value","value","ObjStruct","Struct","StructRef","borrow","borrow","borrow_mut","borrow_mut","comptime_encodable","create_class","create_properties","deref","diverges","eq","eq","equivalent","equivalent","fields","fmt","fmt","fmt","fmt","from","from","get_property","ident","into","into","into_result","memory_layout","namespace","ne","ne","new","runtime_encodable","static_class","struct_ref","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ObjStructObject","borrow","borrow_mut","check_properties_valid","create_class","create_properties","eq","equivalent","fmt","fmt","from","get_property","into","into_result","json_fmt","memory_layout","memory_layout","ne","new","properties","static_class","struct_type","to_string","try_from","try_into","type_id","ObjTupleObject","Tuple","TupleRef","borrow","borrow","borrow_mut","borrow_mut","class","comptime_encodable","create_class","create_properties","diverges","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","get_property","into","into","into_result","json_fmt","layout","length","matches","memory_layout","memory_layout","ne","ne","new","runtime_encodable","static_class","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","values","NodeId","call_graph","code_stats","function_parameters","global_opt","logger","optimize_commands","optimizers","peephole_opt","variable_metadata","CallGraph","InfiniteLoopDetector","borrow","borrow","borrow_mut","borrow_mut","default","detect_infinite_loop","fmt","from","from","from","get_called_functions","get_reachable_from","graph","graph_for","has_loop","into","into","iter_dfs","loop_detector","modify_call","pending_functions","try_from","try_from","try_into","try_into","type_id","type_id","update","visited_functions","visitor","CodeStats","add_node","borrow","borrow_mut","call_graph","check_function_can_write_to","clear","fmt","from","function_calls","function_parameters","into","new","remove_node","try_from","try_into","type_id","update","update_node","variable_information","visited_functions","FunctionParameter","FunctionParameters","None","Read","ReadWrite","Write","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","default","default","dependencies_for","fmt","fmt","from","from","get","get_function_parameters","into","into","is_dependency","is_read","is_write","parameters","read","set_read","set_write","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write","Commands","GlobalOptimizer","MAX_ITERATIONS","Optimizer","borrow","borrow","borrow_mut","borrow_mut","commands","config","execute_commands","fmt","fmt","from","from","functions","get_call_count","get_function","get_function_mut","get_info","get_reads","infinite_loop_detector","into","into","is_id_unused","iter_at","iter_functions","iter_nodes","new","new","optimize","optimize","optimizer","previous_node","retain_functions","run","run_optimizer","runtime","stats","try_from","try_from","try_into","try_into","type_id","type_id","LOG_ENABLED","0","ChangeReads","ChangeWrite","Delete","Delete","DiscardResult","ExecuteRawUpdate","InlineBranch","InlineFunction","InsertAfter","OptimizeCommand","OptimizeCommandDeque","OptimizeCommandKind","RemoveAliasFunction","Replace","Replace","SetCondition","UpdateBranch","UpdateBranchCondition","UpdateExecuteRaw","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref_mut","fmt","fmt","fmt","fmt","from","from","from","from","id","into","into","into","into","kind","new","push","shift","shift_back","shift_forward","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","1","1","1","branch","new_node","ConstOptimizer","RedundancyOptimizer","RedundantCopyOptimizer","alias_function_optimizer","arithmetic_optimizer","callchain_optimizer","common_path_optimizer","const_optimizer","optimize_alias_function","optimize_call_chain","optimize_common_path","redundancy_optimizer","redundant_copy_optimizer","simple_arithmetic_optimization","optimize_alias_function","Fraction","ONE","borrow","borrow_mut","denominator","fmt","from","from","into","inverse","mul","numerator","optimize_additive","optimize_multiplicative","simple_arithmetic_optimization","simplify","try_from","try_into","type_id","optimize_call_chain","get_common_call","optimize_common_path","ConstOptimizer","borrow","borrow_mut","default","from","into","optimize","optimize_node","try_from","try_into","type_id","value_hints","False","NewCondition","RedundancyOptimizer","SimplifiedCondition","True","aggressive_function_inlining","borrow","borrow","borrow_mut","borrow_mut","default","from","from","from","into","into","merge_condition","optimize","simplify_condition","try_from","try_from","try_into","try_into","type_id","type_id","write_after_write","0","RedundantCopyOptimizer","borrow","borrow_mut","default","from","into","optimize","pending_commands","try_from","try_into","type_id","PeepholeOptimizer","_nodes","borrow","borrow_mut","extend","fmt","from","from_compile_context","into","nodes","opt_mode","optimize","optimize_and_insert","optimize_branch","push","take","try_from","try_into","type_id","value_hints","Exact","Hint","Unknown","ValueHints","VariableUsage","add_read","add_write","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_all","clear_hint","clone","clone","clone_into","clone_into","constant_value","default","default","default","exact","fmt","fmt","fmt","from","from","from","get_hint","get_scoreboard_value","hints","into","into","into","reads","remove_read","remove_write","set_hint","static_binary_operation","static_condition","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_hints","used_once","writes","0","Runtime","add_extern_block","add_on_load","borrow","borrow_mut","contains","default","extend","extern_blocks","fmt","from","into","load_blocks","root_blocks","schedule","scheduled_blocks","try_from","try_into","type_id","TypeContext","borrow","borrow_mut","cache","default","fmt","from","get","insert","into","never","never","null","null","static_class_obj","try_from","try_into","type_id","Any","ComptimeBool","ComptimeInt","DynamicBool","DynamicInt","FormatString","Function","FunctionRef","Module","Never","Null","String","Struct","StructObject","Tuple","TupleObject","Type","Type","borrow","borrow_mut","clone","clone_into","comptime_encodable","diverges","eq","equivalent","fmt","fmt","from","hash","into","is_int","is_never","is_reference","matches","runtime_encodable","to_owned","to_string","try_from","try_into","type_id"],"q":["debris_llir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::block_id","","","","","","","","","","","","","","","","","","","","","","debris_llir::class","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::class::ClassKind","","","","","","debris_llir::debris_object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::error_utils","debris_llir::extern_item_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::extern_item_path::ItemPathError","","","debris_llir::function_interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::item_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::json_format","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::json_format::JsonFormatComponent","","","debris_llir::llir_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::llir_builder::CallStack","","","debris_llir::llir_builder::FunctionParameter","","","","","","","","","debris_llir::llir_function_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::llir_impl","","","","","","","","","","","","","","","","debris_llir::llir_nodesdebris_llir::llir_nodes::Condition","","","","","debris_llir::llir_nodes::ExecuteRawComponent","","","debris_llir::llir_nodes::Node","","","","","","","","debris_llir::llir_nodes::VariableAccess","","","","debris_llir::llir_nodes::VariableAccessMut","","","","debris_llir::memory","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::memory::MemoryLayout","","debris_llir::minecraft_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::minecraft_utils::Scoreboard","","debris_llir::minecraft_utils::ScoreboardValue","","","debris_llir::objects","","","","","","","","","","","","","","","","debris_llir::objects::obj_bool","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_bool_static","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_class","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_format_string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_format_string::FormatStringComponent","","debris_llir::objects::obj_function","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_function_ref","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_int","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_int_static","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_native_function","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_never","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_null","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_string","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_struct_object","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::objects::obj_tuple_object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::opt","","","","","","","","","","debris_llir::opt::call_graph","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::opt::code_stats","","","","","","","","","","","","","","","","","","","","","debris_llir::opt::function_parameters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::opt::global_opt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::opt::logger","debris_llir::opt::optimize_commands","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::opt::optimize_commands::ExecuteRawUpdate","debris_llir::opt::optimize_commands::OptimizeCommandKind","","","","","","","","","","","","","","debris_llir::opt::optimizers","","","","","","","","","","","","","","debris_llir::opt::optimizers::alias_function_optimizer","debris_llir::opt::optimizers::arithmetic_optimizer","","","","","","","","","","","","","","","","","","","debris_llir::opt::optimizers::callchain_optimizer","debris_llir::opt::optimizers::common_path_optimizer","","debris_llir::opt::optimizers::const_optimizer","","","","","","","","","","","","debris_llir::opt::optimizers::redundancy_optimizer","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::opt::optimizers::redundancy_optimizer::SimplifiedCondition","debris_llir::opt::optimizers::redundant_copy_optimizer","","","","","","","","","","","debris_llir::opt::peephole_opt","","","","","","","","","","","","","","","","","","","","debris_llir::opt::variable_metadata","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_llir::opt::variable_metadata::Hint","debris_llir::runtime","","","","","","","","","","","","","","","","","","","debris_llir::type_context","","","","","","","","","","","","","","","","","","debris_llir::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Type which matches with every other type Objects of type …","","tracks statistics about the global code which can be used …","A boolean value known at compile time","Compile time known 32-bit signed integer","Objects are a central type for the compiler. Basically …","Runtime boolean","32-bit signed integer known at runtime","A compile time known format string","Any function, native or api","A reference to a compiled function A compiled function is …","The low-level intermediate representation struct","Module type","","Marks a value that cannot be constructed, for example The …","The null type, implicitly returned by functions which don…","A trait for values that can be used as debris object …","The type of the properties map","This struct is used to pass objects around","","A compile time known string","Type of a struct definition","An instantiated struct","Type of a tuple TODO: Could a <code>Type::Tuple</code> not just be a …","An instantiated tuple","The type of a class object","The type of a type","","","","","This module defines classes. The concept of a class should …","The class of the object","","The entry point","Tests whether this object is equal to another object","","","","","This module contains a trait <code>ToFunctionInterface</code> which …","Tracks which parameters a function takes. Due to the …","The functions which were created, excluding the main …","","","","","","(Current incomplete) interface for minecraft’s text …","","","","Contains every node that can be produced in the llir step.","","","","","Helper macro that makes match-style semantics available …","","Returns the memory layout of this specific object This …","","Contains all objects which can be used in a debris program.","Contains two optimizer that can operate on the llir: The …","The actual value","","The runtime, which stores resources","","Some statistics interesting for the backend","","","","This local variable is cached, so no repeated allocations …","","","Identifies a single callable block of code","","","","","","Creates a dummy <code>BlockId</code>, For testing only","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","A class combines <code>ClassKind</code> and corresponding properties …","An enum over every type that exists in debris. Either a …","","","","","","","","Changes all types to their respective objects, e.g. <code>Struct</code> …","","","","","Returns whether this type can be fully encoded at compile …","Returns whether this value diverges, aka is impossible to …","Whether it is impossible to construct a value of this class","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a property of this class","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether the other class kind matches this class …","Returns if the value class <code>other</code> matches this pattern","Returns whether the other class has the same type as this …","","","Constructs a new class with an empty properties map","Constructs a new runtime object that corresponds to this …","","Returns whether this type can be fully encoded at runtime.","","","","","","","Returns the simple <code>Type</code> of this <code>ClassKind</code>","","","","","","","","","","Objects are a central type for the compiler. Basically …","A trait for values that can be used as debris object …","The type of the properties map","This struct is used to pass objects around","","","","","","","The class of the object","","","The class specific to this object. Contains additionally …","The class specific to this object. Contains additionally …","","Helper function for downcasting the payload into a class","Converts the payload into its original type","Tests whether this object is equal to another object","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Tries to get a property that belongs to this object","May be overwritten by distinct payloads which carry …","May be overwritten by distinct payloads which carry …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts this object into json components so it can be …","Converts this object into json components so it can be …","Returns the memory layout of this specific object This …","The actual value","Returns the class which the runtime encodable variant of …","Returns the class which the runtime encodable variant of …","","","","","","","","","","","Represents the path of an extern item, like extern fn This …","","","","A Regex of valid characters (See Minecraft Wiki) Currently …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The common type for working with callbacks","This trait allows downcasting an entire array of objects …","","","This trait can convert functions into compatible interface …","Trait used for converting any valid return value into a …","","","","","Calls this interface and returns the result and a vec of …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","This macro works much like <code>impl_to_function_interface</code> by …","Maps a valid return type from <code>$from</code> to <code>$to</code>","Implements the <code>ToFunctionInterface</code> trait for functions …","Calls this function if the parameters are valid and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the parameters that this function wants. If None …","","","","","","","","","A unique identifier for an item, used to determine the","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Debris syntax: …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Stores the already compiled native functions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Stores the already compiled functions This is not part of …","","","","","","","","","Small hack to prevent borrow checker problems where rust …","","","Returns a new <code>CallStack</code> that contains the given function …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Does not change any meaningful state. Used to just check …","Specifies how code should be evaluated, e.g. if a context …","Normal evaluation","","","Function monomorphization evaluation: Keeps the object …","Partitions function parameters into a left half and a …","","","","","","","","","","","","","","","","","","Calls a native function where it has been verified that …","","","","","Compiles function with <code>function_id</code>. Caller has to …","Helper to compile a function that takes no parameters and …","","","","","Sets an object, with <code>comptime_update_allowed</code> set. This can …","","","","","","","","","Compiles any context, even if it is already compiled. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Checks if any objects that are references contain the same …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The local runtime","Compiles the function with the given parameters into a new …","Actual monomorphization happening here Compiles the …","","","","","Stores function ids pending to be added to the runtime","","Tries to promote an object to the <code>target</code> class and returns …","","","","","","","","","","","","","","","","","","","","","","Adds the accumulated state of another function builder to …","Verifies that the given <code>parameters</code> match the signature of …","","","","","The low-level intermediate representation struct","","","The entry point","","","Returns the argument unchanged.","The functions which were created, excluding the main …","Calls <code>U::from(self)</code>.","Compiles the mir into a llir","The runtime, which stores resources","Some statistics interesting for the backend","","","","","","","","Operates on two scoreboard values and stores the result …","","","Branches based on a condition","","","Calls a function","","","Comparison between two values, eg. val1 &lt;= val2","Evaluates a condition and returns either true or false","","","Executes a literal string","A component for a raw execute command","Stores a ‘fast’ variable","","Stores a ‘fast’ variable from the result of another …","","A function node, contains other nodes","","Any node","Embeds another node in the output","Does nothing","","","Marks that a value is read by this node","","Marks that a value can be both read from and written to by …","","References the value locations","Writes a string literal","","","Denotes how a specific node accesses variables.","See <code>VariableAccess</code>.","Marks that a value is written to by this node. The second …","","","Writes a formatted message","The buffer to write to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if this function contains a node that calls the …","","","","","","","","","","","","","","","","","","","","","","","","","The command to use","The condition to test","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Checks whether this node contains a call","The id of this function","The id of the target var","The id of the target var","The id of the resulting value","The id of that function","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether evaluating this condition has any side …","Returns whether this command has no side effect. sometimes …","","Checks whether this condition is “simple”, which means …","The left value","This awful macro contains code that otherwise would have …","","","","","","","","","","","","The node to execute if that condition is false","","The nodes which this function contains","Returns a condition that is true, when this condition is …","The kind of operation","The node to execute if that condition is true","Whether this node has a read-dependency on <code>item_id</code>","","The right value","Iterates over this node and all other nodes that this node …","A copy of the above function, but with mutability enabled …","The scoreboard of the target var","The scoreboard of the target var","The scoreboard of the resulting value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The value to store into the target var","Recursively yields all variables that this condition reads …","Accepts a callback function as argument and calls it with …","","See <code>variable_accesses</code>.","","Whether this node could modify <code>item_id</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Specifies how a specific object lays out its runtime memory","This type is spread across multiple fields","This type has exactly one integer sized field","This type has no runtime memory","","","","","Copies a scoreboard value from source to destination","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Copies all items from source over to destination","Returns the amount of words that this layout occupies","","","","","","","","Custom scoreboards, each with a unique identifier","","","","","Special scoreboards used for internal tracking","","","The Main scoreboard, where all operations are per default","","","","","","","Identifies a specific scoreboard","","Any comparison that can be executed on two scoreboard …","Any operation that can be executed on a scoreboard- This …","A Value that can be stored on a scoreboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Flips the comparison (converts OP such that …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Inverts the comparison, such that it is exactly and only …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A boolean value that is stored on a scoreboard","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Returns the boolean or-ed with the static value","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Marks objects that have a class","The class of a value.","","","","","","Returns all properties that belong to this class","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Returns the static class that belongs to this Object","","","","","","","","A static format string object","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","The context which gets passed to a function","A function object","","","","","","","","","","","","","","","Adds a node to the previously emitted nodes","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The id of the returned value","","","Here a concept of ‘variance’ is required: normal …","","","","","The nodes that are emitted by this function","The parameters for this function call, excluding the self …","","","","","The self value","Returns <code>self_val</code> downcasted to the desired type or None","","","","","","","","","","","","","","","","Generates a new function context which can be used for …","A reference to an already generated native function A …","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A dynamic Integer","Returns a <code>ScoreboardValue</code> which identifies a specific …","Shorthand for adding a binary operation node","","","","","","","","","","","Returns the argument unchanged.","","The id of the item","Calls <code>U::from(self)</code>.","","","","","","Creates a new dynamic integer with this id","","","","","","","A static integer object","Returns a <code>ScoreboardValue</code> which matches this int","Shorthand for adding a binary operation node","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Implements From for all numeric types","Calls <code>U::from(self)</code>.","","","","Creates a new static integers with this value","","","","","","","","","A module object","","","","","","","","","","Returns the argument unchanged.","","Returns the ident of this module","The identifying name of this module","Calls <code>U::from(self)</code>.","","","The members of this module","","","Creates a new empty module with this name","Registers a value for the first time","A more concise way to register builtin functions without …","Sets a property","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","Signals that a block will never return. The most …","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","A static string object","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Stores a user defined struct","","","","","","","","","","","","","","","","The fields are stored in an indexmap so that the user …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Namespace is in a once cell, because the struct must be …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A heterogenous, compile-time known collection of objects. …","","","","","","","","Returns true if any of the contained fields of this tuple …","","","Returns whether this tuple diverges. This tuple diverges …","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns whether the other tuple matches this tuple, where …","","","","","","Returns whether every type contained in this tuple can be …","","","","","","","","","","","The optimizer can uniquely identify each node with this …","","","","","Simple logger to make debugging the optimizer simpler. Can …","","This module contains various types implementing the …","","This module contains structs which can hold metadata for …","","","","","","","","This function returns true if start definitely contains an …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a set of all functions that can be reached from …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","tracks statistics about the global code which can be used …","","","","","This function returns whether the call graph of any block …","","","Returns the argument unchanged.","","Tracks which parameters a function takes. Due to the …","Calls <code>U::from(self)</code>.","","","","","","Updates the variable reads and writes. The iterator does …","","","This local variable is cached, so no repeated allocations …","Declares how a variable is used by a function","Stores how functions use variables as parameters.","Variable is not used at all by this function","Variable is read by this function","Variable is read from and written to by this function","Variable is written to by this function","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Interface for optimizing functions to get data about the …","Does optimization on the whole program.","Maximum amount of Turing-complete iterations the optimizer …","","","","","","","","Execute every command that is in the current command stack","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the variable info for this node","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterates all subsequent nodes of this function","Iterates over all functions","Iterates over all nodes.","","","","","","","","Runs the optimization passes and returns the final …","Runs an optimizing function","","","","","","","","","","","Replaces all variables <code>.0</code> with <code>.1</code>","Changes the variable this node writes to","Deletes a single node","","Converts the FastStoreFromResult node into its command, …","","Discards the node and only keeps the branch that matches …","Inlines the function of this function call.","Inserts this node after","","Just a wrapper around deque with a simple push method","Optimizing functions output commands that tell the …","Removes all aliases to a function which only redirects to …","Replaces the old node completely","","Changes the condition of this branch to a new condition …","Updates the specified branch with the new node","Updates the condition of a branch","Modifies a <code>Node::Execute</code> IMPORTANT: Right now the indices …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Shifts the node id of this command one back","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TODO: implement this properly","","This optimizer handles functions that alias other function.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Optimizes basic arithmetic expressions with the shape x OP …","","","","","Inlines the function call chain. This optimizer only runs …","Extracts the first common function call in the calls …","This expensive optimization searches for common paths at …","Optimizes nodes which are const-evaluatable. This …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Removes useless nodes","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tries to merge the condition and the previous node into …","","Simplifies trivial conditions","","","","","","","Checks for a write to <code>id</code> after <code>node</code> and returns with false …","","A node which copies a value <code>a</code> to <code>b</code> is often redundant. …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","A just-in-time peephole optimizer.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Optimizes a node and the previous nodes and pushes the new …","","Adds this node to the collection and optimizes it on the …","Drops this instance and returns the wrapped nodes","","","","Information about the possible values of runtime variables","Hints that the value can have exactly one value (the …","A hint about the possible value of a variable","Hints that the value is unknown (the variable can take any …","Stores the possible range of values of a runtime variable","General data about the usage of a specific variable","","","","","","","","","Clears all hints","Clears all hints for this id","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Tries to get the static value of a scoreboard value","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Tries to evaluate a binary operation with static values","Tries to evaluate a condition with static values","","","","","","","","","","","","Updates the hints for all variables that this node modifies","Returns whether the variable is written to at most once …","","","","Adds a specific block as an extern item with the given name","Adds a specific block to the list of blocks which should …","","","Returns whether this function contains the given <code>id</code>.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Gives an iterator over the blocks which are the root …","Schedules a specific block to run every tick.","","","","","Caches all classes. Could maybe be used as an arena in the …","","","Cache for classes","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","The never singleton","","The null singleton","Returns an object ref to the static class of the given type","","","","Type which matches with every other type Objects of type …","A boolean value known at compile time","Compile time known 32-bit signed integer","Runtime boolean","32-bit signed integer known at runtime","A compile time known format string","Any function, native or api","A reference to a compiled function A compiled function is …","Module type","Marks a value that cannot be constructed, for example The …","The null type, implicitly returned by functions which don…","A compile time known string","Type of a struct definition","An instantiated struct","Type of a tuple TODO: Could a <code>Type::Tuple</code> not just be a …","An instantiated tuple","The type of a class object","The type of a type","","","","","Returns whether this type can be encoded at compile time.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Returns whether this type should be treated as a reference.","Returns whether <code>other</code> matches the pattern of <code>self</code>","Returns whether this type can be completely encoded at …","","","","",""],"i":[1,2,0,0,2,2,0,2,2,2,2,2,0,2,0,2,2,0,0,0,0,2,2,2,2,2,0,2,0,3,0,4,0,5,0,6,3,0,7,0,4,0,4,6,3,8,0,3,0,0,0,0,0,0,7,0,8,0,0,0,9,0,0,0,5,0,6,7,6,0,0,4,4,8,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,12,11,12,11,11,12,12,11,11,12,12,11,12,12,11,12,12,11,12,12,12,12,11,11,12,11,12,11,12,11,11,12,13,14,15,16,17,18,1,0,0,0,0,0,3,5,1,5,1,5,1,1,9,9,1,5,5,3,1,1,5,1,1,5,1,1,1,5,9,9,3,5,1,3,1,9,9,9,5,9,9,1,1,5,1,5,1,5,1,0,19,0,20,20,0,19,19,20,19,20,19,19,19,19,19,20,19,20,19,19,20,19,19,19,20,19,20,20,19,20,19,20,19,19,21,22,21,23,0,0,0,0,0,0,23,24,23,24,23,23,0,25,23,23,24,23,0,0,0,24,23,24,26,0,24,27,24,23,24,23,24,23,24,0,0,28,29,28,29,28,28,29,29,28,28,28,28,28,29,28,28,28,29,28,29,28,28,28,29,28,29,28,29,0,30,0,30,30,31,30,31,30,31,30,31,30,31,31,30,31,30,31,31,30,30,31,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,32,33,34,0,0,0,0,35,0,0,0,0,36,35,36,37,36,38,38,39,35,40,37,41,36,38,39,35,40,37,41,36,38,35,35,37,41,36,35,37,41,36,38,36,39,40,38,35,40,37,41,36,38,39,35,40,37,41,36,41,40,41,41,40,40,38,40,41,38,39,35,40,37,41,36,38,40,41,38,38,41,39,39,35,37,38,38,0,41,35,36,35,37,41,36,38,39,35,40,37,41,36,38,39,35,40,37,41,36,38,38,39,35,40,37,41,36,42,42,42,43,44,43,44,43,44,43,44,43,0,45,0,45,0,0,45,0,46,46,46,46,47,48,45,49,46,47,48,45,49,46,46,46,46,46,46,45,45,46,46,46,47,46,46,49,46,47,48,48,48,47,48,45,49,46,46,47,48,45,49,47,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,46,47,48,45,49,49,47,46,46,46,49,46,47,46,49,46,48,49,46,46,48,45,46,47,48,45,49,46,47,48,45,49,46,47,48,45,49,47,46,46,46,0,46,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,50,51,52,0,53,54,0,53,0,0,53,51,52,0,53,53,0,0,0,53,0,53,0,54,0,55,53,52,54,56,57,56,57,55,55,51,51,0,0,56,57,53,0,0,56,57,58,59,60,61,62,52,54,63,55,50,64,51,53,56,57,58,59,60,61,62,52,54,63,55,50,64,51,53,58,59,60,61,62,52,54,63,55,50,64,51,53,59,60,61,62,52,54,63,55,50,64,51,53,60,63,59,60,61,62,52,54,63,55,50,64,51,53,59,60,61,62,52,54,63,55,50,64,51,53,58,58,59,60,61,62,52,52,54,63,55,50,64,51,51,53,53,56,57,58,59,60,61,62,52,54,63,55,50,64,51,53,53,58,59,60,61,62,56,57,58,59,60,61,62,52,54,63,55,50,64,51,53,52,53,58,52,61,0,64,59,60,61,62,52,63,55,50,64,53,63,58,58,52,61,63,53,58,61,53,53,59,60,61,64,59,60,61,62,52,54,63,55,50,64,51,53,58,52,51,53,56,57,58,59,60,61,62,52,54,63,55,50,64,51,53,56,57,58,59,60,61,62,52,54,63,55,50,64,51,53,56,57,58,59,60,61,62,52,54,63,55,50,64,51,53,59,52,53,52,53,52,53,65,66,67,67,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,80,82,83,84,83,0,85,85,85,85,85,85,85,0,85,85,85,85,85,85,85,85,0,85,85,85,85,85,85,86,87,88,89,90,90,90,88,90,90,88,89,89,89,89,90,89,0,91,0,0,0,91,89,88,91,89,90,88,91,89,90,88,91,89,90,88,91,89,90,88,91,89,90,88,91,89,90,89,90,90,88,88,91,91,89,90,88,91,89,90,88,91,88,91,89,90,90,88,91,89,90,88,91,89,90,88,91,88,91,89,90,88,91,89,90,88,91,89,90,92,93,94,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,96,96,96,96,96,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,0,98,98,98,98,98,99,98,98,98,98,98,98,98,98,98,98,98,98,98,98,99,98,98,98,98,98,98,0,0,100,100,100,101,100,101,100,101,100,101,101,101,100,101,100,101,100,101,101,100,101,101,100,101,101,101,101,100,101,101,101,100,101,101,100,101,100,101,100,101,102,103,0,0,0,0,104,105,106,104,105,106,104,104,105,105,105,104,105,106,104,105,106,105,106,105,105,106,106,104,105,106,104,105,106,105,104,104,104,106,105,105,106,105,104,104,106,104,106,104,104,104,104,105,105,105,106,104,105,106,104,105,106,104,104,105,106,104,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,108,0,108,108,108,108,0,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,109,0,109,109,109,109,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,109,109,109,109,109,109,109,109,109,109,109,109,109,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,0,115,116,115,116,115,116,116,116,115,115,116,115,116,115,115,115,116,116,115,116,116,115,115,116,116,116,115,115,116,116,115,116,116,115,116,115,116,115,116,115,116,0,117,117,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,0,0,118,119,118,119,119,118,119,119,118,118,119,118,119,118,118,119,119,118,118,119,119,118,119,119,119,118,119,118,119,119,118,119,119,118,119,118,119,118,119,118,119,118,119,119,0,0,0,0,0,0,0,0,0,0,0,0,8,120,8,120,120,120,8,8,8,120,8,8,8,0,8,8,120,8,8,8,120,8,120,8,120,8,120,8,120,8,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,121,121,121,121,121,122,121,122,122,121,121,121,122,122,121,122,121,122,122,122,121,122,122,121,121,122,121,122,122,121,121,122,121,122,121,122,121,0,0,0,0,123,124,123,124,123,124,123,123,124,123,124,124,123,124,124,123,123,123,123,124,123,124,124,124,123,124,125,124,123,124,123,124,123,124,123,123,124,123,124,123,124,0,126,127,127,127,128,127,0,127,127,127,0,0,0,127,127,128,127,127,127,127,127,128,129,126,127,128,129,126,126,126,126,127,128,129,126,127,128,129,126,129,127,128,129,126,129,129,126,129,129,129,127,128,129,126,127,128,129,126,127,128,129,126,130,131,132,133,134,135,136,137,138,139,135,136,139,140,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,141,141,141,141,141,141,141,141,141,141,0,0,0,141,141,141,141,0,0,0,0,142,142,142,142,142,142,142,142,142,142,142,143,143,0,0,143,144,143,144,143,144,144,143,143,144,143,144,0,144,0,143,144,143,144,143,144,0,145,0,146,146,146,146,146,146,146,146,146,146,0,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,148,0,148,0,0,149,149,148,150,149,148,150,149,150,150,148,149,148,149,149,148,150,149,148,148,150,149,148,150,149,150,150,150,148,150,149,149,149,149,150,150,150,148,149,148,150,149,148,150,149,148,150,149,150,149,149,151,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["any",8]],null,null,null,null,null,null,[[["",0],["objectref",3]],["bool",0]],null,null,null,null,null,null,null,[[["",0],["typecontext",3]],["classref",6]],null,null,[[["typecontext",3]],["objectref",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["memorylayout",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["blockid",3]],["blockid",3]],[[["",0],["",0]]],[[["blockid",3],["blockid",3]],["ordering",4]],[[["u32",0]],["blockid",3]],[[["blockid",3],["blockid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["blockid",3],["formatter",3]],["result",6]],[[["blockid",3],["formatter",3]],["result",6]],[[]],[[["blockid",3],["",0]]],[[]],[[["blockid",3],["blockid",3]],["bool",0]],[[["blockid",3],["blockid",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["classkind",4]],["option",4,[["classkind",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["classkind",4]],["bool",0]],[[["classkind",4]],["bool",0]],[[["class",3]],["bool",0]],[[["classkind",4],["classkind",4]],["bool",0]],[[["class",3],["class",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["classkind",4],["formatter",3]],["result",6]],[[["classkind",4],["formatter",3]],["result",6]],[[["class",3],["formatter",3]],["result",6]],[[["class",3],["formatter",3]],["result",6]],[[["type",4]],["classkind",4]],[[]],[[]],[[["class",3],["ident",4]],["option",4,[["objectref",3]]]],[[]],[[]],null,[[["classkind",4],["classkind",4]],["bool",0]],[[["class",3],["class",3]],["bool",0]],[[["class",3],["class",3]],["bool",0]],[[["classkind",4],["classkind",4]],["bool",0]],[[["class",3],["class",3]],["bool",0]],[[["classkind",4]],["class",3]],[[["class",3],["typecontext",3],["itemidallocator",3]],["option",4,[["objectref",3]]]],null,[[["classkind",4]],["bool",0]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["classkind",4]],["type",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["objectref",3]],["objectref",3]],[[["",0],["",0]]],[[["",0],["typecontext",3]],["classref",6]],[[["",0],["typecontext",3]],["classref",6]],[[["objectref",3]]],[[["debrisobject",3,[["objectpayload",8]]]],["option",4,[["classref",6]]]],[[["debrisobject",3,[["objectpayload",8]]]],["option",4]],[[["",0],["objectref",3]],["bool",0]],[[["objectref",3],["objectref",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["debrisobject",3,[["objectpayload",8]]],["formatter",3]],["result",6]],[[["objectref",3],["formatter",3]],["result",6]],[[["objectref",3],["formatter",3]],["result",6]],[[]],[[["debrisobject",3,[["objectpayload",8]]]],["objectref",3]],[[]],[[["typecontext",3],["objectpayload",8]],["objectref",3]],[[["debrisobject",3,[["objectpayload",8]]],["typecontext",3],["ident",4]],["option",4,[["objectref",3]]]],[[["",0],["typecontext",3],["ident",4]],["option",4,[["objectref",3]]]],[[["",0],["typecontext",3],["ident",4]],["option",4,[["objectref",3]]]],[[["",0],["typecontext",3]],["classref",6]],[[]],[[]],[[["typecontext",3]],["objectref",3]],[[["objectref",3],["functioncontext",3]],["option",4,[["langresult",6,[["objectref",3]]]]]],[[["",0],["vec",3]]],[[["",0],["vec",3]]],[[["",0]],["memorylayout",4]],null,[[["",0],["typecontext",3]],["option",4,[["classref",6]]]],[[["",0],["typecontext",3]],["option",4,[["classref",6]]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["span",3],["class",3],["class",3]],["singlecompileerror",4]],null,null,null,null,null,null,[[["externitempath",3]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["externitempath",3]],["externitempath",3]],[[["",0],["",0]]],[[["externitempath",3],["externitempath",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["itempatherror",4],["formatter",3]],["result",6]],[[["externitempath",3],["formatter",3]],["result",6]],[[]],[[]],[[["externitempath",3],["",0]]],[[]],[[]],[[["externitempath",3],["externitempath",3]],["bool",0]],[[["string",3]],["result",4,[["externitempath",3],["itempatherror",4]]]],[[["itempatherror",4]],["string",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["string",3]],["result",4,[["string",3],["itempatherror",4]]]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["debrisfunctioninterface",3],["functioncontext",3]],["result",6,[["objectref",3]]]],[[["debrisfunctioninterface",3],["functioncontext",3]],["option",4,[["langresult",6,[["objectref",3]]]]]],null,[[["",0]],["option",4]],[[]],[[["normalizedfunction",3]],["debrisfunctioninterface",3]],[[]],[[["debrisfunctioninterface",3],["functioncontext",3],["option",4,[["langresult",6,[["objectref",3]]]]]],["langresult",6,[["objectref",3]]]],null,null,null,null,[[]],[[]],[[["functioncontext",3]],["option",4,[["langresult",6,[["objectref",3]]]]]],[[["vec",3,[["normalizedfunction",3]]]],["normalizedfunction",3]],null,[[],["normalizedfunction",3]],[[["normalizedfunction",3]],["normalizedfunction",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["itemid",3]],["itemid",3]],[[["",0],["",0]]],null,[[],["itemidallocator",3]],[[["itemid",3],["itemid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["itemid",3],["formatter",3]],["result",6]],[[["itemid",3],["formatter",3]],["result",6]],[[]],[[]],[[["itemid",3],["",0]]],null,[[]],[[]],[[["itemid",3],["itemid",3]],["bool",0]],[[["itemidallocator",3]],["itemid",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["formattedtext",3]],["formattedtext",3]],[[["jsonformatcomponent",4]],["jsonformatcomponent",4]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["formattedtext",3],["formattedtext",3]],["bool",0]],[[["jsonformatcomponent",4],["jsonformatcomponent",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["formattedtext",3],["formatter",3]],["result",6]],[[["formattedtext",3],["formatter",3]],["result",6]],[[["jsonformatcomponent",4],["formatter",3]],["result",6]],[[["jsonformatcomponent",4],["formatter",3]],["result",6]],[[["vec",3,[["jsonformatcomponent",4]]]],["formattedtext",3]],[[]],[[]],[[]],[[]],[[["formattedtext",3],["formattedtext",3]],["bool",0]],[[["jsonformatcomponent",4],["jsonformatcomponent",4]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["callstack",4],["nativefunctionid",6]],["option",4,[["blockid",3]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["llirbuilder",3],["mircontextid",3],["fxhashmap",6]],["result",6,[["llir",3]]]],[[["functionparameter",4]],["classref",6]],[[["functionparameter",4]],["functionparameter",4]],[[["monomorphizedfunction",3]],["monomorphizedfunction",3]],[[["functiongenerics",3]],["functiongenerics",3]],[[["callstack",4]],["callstack",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["callstack",4],["nativefunctionid",6]],["bool",0]],[[],["blockidgenerator",3]],[[],["nativefunctionmap",3]],null,[[["functionparameter",4],["formatter",3]],["result",6]],[[["nativefunctionmap",3],["formatter",3]],["result",6]],[[["monomorphizedfunction",3],["formatter",3]],["result",6]],[[["functiongenerics",3],["formatter",3]],["result",6]],[[["callstack",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["functiongenerics",3]],["option",4]],[[["functiongenerics",3],["usize",0]],["option",4,[["monomorphizedfunction",3]]]],[[["nativefunctionmap",3],["nativefunctionid",6]],["option",4,[["functiongenerics",3]]]],[[["nativefunctionmap",3],["nativefunctionid",6]],["option",4,[["functiongenerics",3]]]],null,[[["nativefunctionmap",3],["functiongenerics",3]],["nativefunctionid",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["compilecontext",3],["fn",8],["fxhashmap",6],["mirnamespace",3],["returnvaluesarena",3]],["result",6,[["llirbuilder",3]]]],[[["typecontext",3],["mirfunction",3],["vec",3,[["functionparameter",4]]],["classref",6]],["functiongenerics",3]],[[["blockidgenerator",3]],["blockid",3]],null,[[["functionparameter",4]],["mirobjectid",3]],null,null,null,[[["mirnamespace",3],["typecontext",3],["fxhashmap",6],["mirobjectid",3],["objectref",3]]],null,[[["functionparameter",4]],["span",3]],[[["callstack",4],["option",4]],["callstack",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["llirfunctionbuilder",3],["mirobjectid",3],["objectref",3]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["llirfunctionbuilder",3],["mircontext",3]],["result",6]],null,[[["llirfunctionbuilder",3],["objfunction",3],["option",4,[["objectref",3]]],["span",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3],["nativefunctionid",6],["vec",3,[["objectref",3]]],["option",4,[["objectref",3]]],["span",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3],["usize",0],["vec",3,[["objectref",3]]],["span",3]],["result",6,[["objectref",3]]]],null,[[["evaluationmode",4]],["evaluationmode",4]],[[["",0],["",0]]],[[["llirfunctionbuilder",3],["mircontextid",3],["option",4,[["nativefunctionid",6]]],["evaluationmode",4]],["result",6]],[[["llirfunctionbuilder",3],["nativefunctionid",6],["span",3]],["result",6,[["usize",0]]]],[[["llirfunctionbuilder",3],["nativefunctionid",6],["span",3]],["result",6,[["blockid",3]]]],null,null,[[["llirfunctionbuilder",3],["objectref",3]],["objectref",3]],null,[[["llirfunctionbuilder",3],["mirobjectid",3],["objectref",3],["span",3]],["result",6]],[[],["buildersharedstate",3]],[[],["functionbuilderruntime",3]],[[["functionbuilderruntime",3],["nativefunctionid",6],["string",3],["span",3]]],null,[[["buildersharedstate",3],["formatter",3]],["result",6]],[[["functionbuilderruntime",3],["formatter",3]],["result",6]],[[["evaluationmode",4],["formatter",3]],["result",6]],[[["parameterpartition",3,[["debug",8]]],["formatter",3]],["result",6]],[[["llirfunctionbuilder",3],["mircontextid",3],["blockid",3],["option",4,[["nativefunctionid",6]]],["evaluationmode",4]],["result",6]],[[]],[[]],[[]],[[]],[[]],null,[[["llirfunctionbuilder",3],["mircontextid",3]],["option",4,[["blockid",3]]]],[[["llirfunctionbuilder",3],["blockid",3]],["option",4,[["function",3]]]],[[["llirfunctionbuilder",3],["nativefunctionid",6]],["ref",3,[["functiongenerics",3]]]],[[["llirfunctionbuilder",3],["mirobjectid",3]],["objectref",3]],[[["llirfunctionbuilder",3],["mirobjectid",3]],["option",4,[["objectref",3]]]],[[["llirfunctionbuilder",3],["branch",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3],["functioncall",3],["objfunction",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3],["branch",3],["objbool",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3]],["result",6]],[[["llirfunctionbuilder",3],["functioncall",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3],["goto",3]],["result",6]],[[["llirfunctionbuilder",3],["mirmodule",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3],["functioncall",3],["objnativefunction",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3],["mirnode",4]],["result",6]],[[["llirfunctionbuilder",3]],["result",6]],[[["llirfunctionbuilder",3],["primitivedeclaration",3]],["result",6]],[[["llirfunctionbuilder",3],["propertyaccess",3]],["result",6]],[[["llirfunctionbuilder",3],["propertyupdate",3]],["result",6]],[[["llirfunctionbuilder",3],["runtimecopy",3]],["result",6]],[[["llirfunctionbuilder",3],["runtimepromotion",3]],["result",6]],[[["llirfunctionbuilder",3],["branch",3],["objstaticbool",3]],["result",6,[["objectref",3]]]],[[["llirfunctionbuilder",3],["variableupdate",3]],["result",6]],[[],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[["parameterpartition",3]]],null,[[["llirfunctionbuilder",3],["nativefunctionid",6]],["result",6,[["monomorphizedfunction",3]]]],[[["llirfunctionbuilder",3],["usize",0]],["result",6]],[[["option",4,[["llirfunctionbuilder",3]]],["callstack",4],["blockid",3],["llirbuilder",3],["fxhashmap",6]],["llirfunctionbuilder",3]],[[["fn",8]],["parameterpartition",3]],null,null,null,null,[[["functioncontext",3]],["option",4,[["result",6,[["objectref",3]]]]]],[[["functionbuilderruntime",3],["nativefunctionid",6],["span",3]]],[[["parameterpartition",3]]],[[["llirfunctionbuilder",3],["mirobjectid",3],["objectref",3],["span",3],["bool",0]],["result",6]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["buildersharedstate",3],["buildersharedstate",3],["evaluationmode",4]]],[[["llirfunctionbuilder",3],["nativefunctionid",6],["span",3]],["result",6]],[[["llirfunctionbuilder",3],["verifypropertyexists",3]],["result",6]],[[["llirfunctionbuilder",3],["verifytuplelength",3]],["result",6]],null,[[["llirfunctionbuilder",3],["verifyvaluecomptime",3]],["result",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["llir",3],["formatter",3]],["result",6]],[[["llir",3],["formatter",3]],["result",6]],[[]],null,[[]],[[["compilecontext",3],["fn",8],["mir",3]],["result",6,[["llir",3]]]],null,null,[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullfunction",3],["blockid",3]],["bool",0]],[[["faststore",3]],["faststore",3]],[[["faststorefromresult",3]],["faststorefromresult",3]],[[["binaryoperation",3]],["binaryoperation",3]],[[["call",3]],["call",3]],[[["condition",4]],["condition",4]],[[["branchkind",4]],["branchkind",4]],[[["branch",3]],["branch",3]],[[["executerawcomponent",4]],["executerawcomponent",4]],[[["executeraw",3]],["executeraw",3]],[[["writemessage",3]],["writemessage",3]],[[["writetarget",4]],["writetarget",4]],[[["node",4]],["node",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["faststore",3],["faststore",3]],["bool",0]],[[["faststorefromresult",3],["faststorefromresult",3]],["bool",0]],[[["binaryoperation",3],["binaryoperation",3]],["bool",0]],[[["call",3],["call",3]],["bool",0]],[[["condition",4],["condition",4]],["bool",0]],[[["branchkind",4],["branchkind",4]],["bool",0]],[[["branch",3],["branch",3]],["bool",0]],[[["executerawcomponent",4],["executerawcomponent",4]],["bool",0]],[[["executeraw",3],["executeraw",3]],["bool",0]],[[["writemessage",3],["writemessage",3]],["bool",0]],[[["writetarget",4],["writetarget",4]],["bool",0]],[[["node",4],["node",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["function",3],["formatter",3]],["result",6]],[[["function",3],["formatter",3]],["result",6]],[[["faststore",3],["formatter",3]],["result",6]],[[["faststorefromresult",3],["formatter",3]],["result",6]],[[["binaryoperation",3],["formatter",3]],["result",6]],[[["call",3],["formatter",3]],["result",6]],[[["condition",4],["formatter",3]],["result",6]],[[["condition",4],["formatter",3]],["result",6]],[[["branchkind",4],["formatter",3]],["result",6]],[[["branch",3],["formatter",3]],["result",6]],[[["executerawcomponent",4],["formatter",3]],["result",6]],[[["executeraw",3],["formatter",3]],["result",6]],[[["writemessage",3],["formatter",3]],["result",6]],[[["writetarget",4],["formatter",3]],["result",6]],[[["writetarget",4],["formatter",3]],["result",6]],[[["node",4],["formatter",3]],["result",6]],[[["node",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["node",4]],["bool",0]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["condition",4]],["bool",0]],[[["node",4],["",0]],["bool",0]],[[["function",3]],["bool",0]],[[["condition",4]],["bool",0]],null,null,null,[[["faststore",3],["faststore",3]],["bool",0]],[[["faststorefromresult",3],["faststorefromresult",3]],["bool",0]],[[["binaryoperation",3],["binaryoperation",3]],["bool",0]],[[["call",3],["call",3]],["bool",0]],[[["condition",4],["condition",4]],["bool",0]],[[["branch",3],["branch",3]],["bool",0]],[[["executerawcomponent",4],["executerawcomponent",4]],["bool",0]],[[["executeraw",3],["executeraw",3]],["bool",0]],[[["writemessage",3],["writemessage",3]],["bool",0]],[[["node",4],["node",4]],["bool",0]],null,[[["function",3]]],null,[[["condition",4]],["condition",4]],null,null,[[["node",4],["itemid",3]],["bool",0]],null,null,[[["node",4],["",0]]],[[["node",4],["",0]]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["condition",4],["",0]]],[[["node",4],["",0]]],[[["condition",4],["",0]]],[[["node",4],["",0]]],[[["condition",4]],["fxhashset",6,[["itemid",3]]]],[[["node",4],["itemid",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["memorylayout",4]],["memorylayout",4]],[[["",0],["",0]]],[[["itemid",3],["itemid",3]],["node",4]],[[["memorylayout",4],["memorylayout",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["memorylayout",4],["formatter",3]],["result",6]],[[]],[[["vec",3,[["itemid",3]]]],["memorylayout",4]],[[["intoiterator",8]],["memorylayout",4]],[[]],[[["memorylayout",4]],["iterator",8]],[[["objectref",3],["objectref",3]]],[[["memorylayout",4]],["usize",0]],[[["memorylayout",4],["memorylayout",4]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["scoreboard",4]],["scoreboard",4]],[[["scoreboardvalue",4]],["scoreboardvalue",4]],[[["scoreboardoperation",4]],["scoreboardoperation",4]],[[["scoreboardcomparison",4]],["scoreboardcomparison",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["scoreboard",4],["scoreboard",4]],["bool",0]],[[["scoreboardvalue",4],["scoreboardvalue",4]],["bool",0]],[[["scoreboardoperation",4],["scoreboardoperation",4]],["bool",0]],[[["scoreboardcomparison",4],["scoreboardcomparison",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["scoreboardoperation",4],["i32",0],["i32",0]],["i32",0]],[[["scoreboardcomparison",4],["i32",0],["i32",0]],["bool",0]],[[["scoreboardcomparison",4]],["scoreboardcomparison",4]],[[["scoreboard",4],["formatter",3]],["result",6]],[[["scoreboard",4],["formatter",3]],["result",6]],[[["scoreboardvalue",4],["formatter",3]],["result",6]],[[["scoreboardvalue",4],["formatter",3]],["result",6]],[[["scoreboardoperation",4],["formatter",3]],["result",6]],[[["scoreboardcomparison",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["scoreboard",4],["",0]]],[[["scoreboardvalue",4]],["option",4,[["itemid",3]]]],[[]],[[]],[[]],[[]],[[["scoreboardcomparison",4]],["scoreboardcomparison",4]],[[["scoreboard",4],["scoreboard",4]],["bool",0]],[[["scoreboardvalue",4],["scoreboardvalue",4]],["bool",0]],[[["scoreboardoperation",4]],["str",0]],[[["scoreboardcomparison",4]],["str",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["itemid",3],["objbool",3],["bool",0]]],[[["objbool",3]],["scoreboardvalue",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["itemid",3],["objbool",3],["scoreboardvalue",4],["scoreboardcomparison",4]]],[[["typecontext",3]],["objectproperties",6]],[[["objbool",3],["objbool",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objbool",3],["formatter",3]],["result",6]],[[["objbool",3],["formatter",3]],["result",6]],[[]],[[["itemid",3]],["objbool",3]],null,[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objbool",3],["vec",3]]],[[["objbool",3]],["memorylayout",4]],null,[[["objbool",3],["objbool",3]],["bool",0]],[[["itemid",3]],["objbool",3]],[[["itemid",3],["objbool",3],["bool",0]]],[[["typecontext",3]],["classref",6]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["objstaticbool",3]],["scoreboardvalue",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["typecontext",3]],["objectproperties",6]],[[["objstaticbool",3],["objstaticbool",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objstaticbool",3],["formatter",3]],["result",6]],[[["objstaticbool",3],["formatter",3]],["result",6]],[[]],[[["bool",0]],["objstaticbool",3]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objstaticbool",3]],["memorylayout",4]],[[["objstaticbool",3],["objstaticbool",3]],["bool",0]],[[["objstaticbool",3],["typecontext",3]],["option",4,[["classref",6]]]],[[["typecontext",3]],["classref",6]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["objclass",3]],["objclass",3]],[[["",0],["",0]]],[[["typecontext",3]],["objectproperties",6]],[[["typecontext",3]],["objectproperties",6]],[[["objclass",3]]],[[["objclass",3],["objclass",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objclass",3],["formatter",3]],["result",6]],[[["objclass",3],["formatter",3]],["result",6]],[[]],[[["classref",6]],["objclass",3]],[[["objclass",3],["typecontext",3],["ident",4]],["option",4,[["objectref",3]]]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objclass",3]],["memorylayout",4]],[[["objclass",3],["objclass",3]],["bool",0]],[[["classref",6]],["objclass",3]],[[["typecontext",3]],["classref",6]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["formatstringcomponent",4]],["formatstringcomponent",4]],[[["objformatstring",3]],["objformatstring",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["typecontext",3]],["objectproperties",6]],[[["formatstringcomponent",4],["formatstringcomponent",4]],["bool",0]],[[["objformatstring",3],["objformatstring",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["formatstringcomponent",4],["formatter",3]],["result",6]],[[["objformatstring",3],["formatter",3]],["result",6]],[[["objformatstring",3],["formatter",3]],["result",6]],[[]],[[["rc",3,[["str",0]]]],["objformatstring",3]],[[]],[[]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objformatstring",3],["vec",3]]],[[["objformatstring",3]],["memorylayout",4]],[[["formatstringcomponent",4],["formatstringcomponent",4]],["bool",0]],[[["objformatstring",3],["objformatstring",3]],["bool",0]],[[["vec",3,[["formatstringcomponent",4]]]],["objformatstring",3]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["functioncontext",3],["objfunction",3],["option",4,[["objectref",3]]]],["langresult",6,[["objectref",3]]]],[[["functioncontext",3],["objfunction",3],["option",4,[["objectref",3]]]],["option",4,[["langresult",6,[["objectref",3]]]]]],null,[[["objfunction",3]],["objfunction",3]],[[["",0],["",0]]],[[["functioncontext",3],["nativefunctionid",6]],["langresult",6,[["blockid",3]]]],[[["typecontext",3]],["objectproperties",6]],[[["functionclass",3]],["bool",0]],[[["functioncontext",3],["node",4]]],[[["objfunction",3],["objfunction",3]],["bool",0]],[[["functionclass",3],["functionclass",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objfunction",3],["formatter",3]],["result",6]],[[["objfunction",3],["formatter",3]],["result",6]],[[["functionclass",3],["formatter",3]],["result",6]],[[["functionclass",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],null,[[["functioncontext",3]],["itemidallocator",3]],null,[[["functionclass",3],["functionclass",3]],["bool",0]],[[["objfunction",3]],["memorylayout",4]],null,[[["functionclass",3],["functionclass",3]],["bool",0]],[[["str",0],["rc",3,[["debrisfunctioninterface",3]]]],["objfunction",3]],null,null,null,[[["functioncontext",3],["objectref",3],["objectref",3]],["option",4,[["langresult",6,[["objectref",3]]]]]],null,[[["functioncontext",3]],["functionbuilderruntime",3]],null,[[["functioncontext",3]],["option",4]],null,[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["functioncontext",3]],["typecontext",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["functioncontext",3],["option",4,[["objectref",3]]],["fnonce",8]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objfunctionref",3]],["objfunctionref",3]],[[["",0],["",0]]],[[["typecontext",3]],["objectproperties",6]],[[["objfunctionref",3],["objfunctionref",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objfunctionref",3],["formatter",3]],["result",6]],[[["objfunctionref",3],["formatter",3]],["result",6]],[[]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objfunctionref",3],["vec",3]]],[[["objfunctionref",3]],["memorylayout",4]],[[["objfunctionref",3],["objfunctionref",3]],["bool",0]],[[["blockid",3]],["objfunctionref",3]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["objint",3]],["scoreboardvalue",4]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objint",3]],["objint",3]],[[["",0],["",0]]],null,[[["typecontext",3]],["objectproperties",6]],[[["objint",3],["objint",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objint",3],["formatter",3]],["result",6]],[[["objint",3],["formatter",3]],["result",6]],[[]],[[["itemid",3]],["objint",3]],null,[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objint",3],["vec",3]]],[[["objint",3]],["memorylayout",4]],null,[[["objint",3],["objint",3]],["bool",0]],[[["itemid",3]],["objint",3]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["objstaticint",3]],["scoreboardvalue",4]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objstaticint",3]],["objstaticint",3]],[[["",0],["",0]]],null,[[["typecontext",3]],["objectproperties",6]],[[["objstaticint",3],["objstaticint",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objstaticint",3],["formatter",3]],["result",6]],[[["objstaticint",3],["formatter",3]],["result",6]],[[["u128",0]],["objstaticint",3]],[[["u32",0]],["objstaticint",3]],[[["u16",0]],["objstaticint",3]],[[["u8",0]],["objstaticint",3]],[[["isize",0]],["objstaticint",3]],[[["i128",0]],["objstaticint",3]],[[["i64",0]],["objstaticint",3]],[[["i32",0]],["objstaticint",3]],[[["i16",0]],["objstaticint",3]],[[["i8",0]],["objstaticint",3]],[[["u64",0]],["objstaticint",3]],[[["usize",0]],["objstaticint",3]],[[]],null,[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objstaticint",3]],["memorylayout",4]],[[["objstaticint",3],["objstaticint",3]],["bool",0]],[[["into",8,[["i32",0]]]],["objstaticint",3]],[[["objstaticint",3],["typecontext",3]],["option",4,[["classref",6]]]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objmodule",3]],["objmodule",3]],[[["",0],["",0]]],[[["typecontext",3]],["objectproperties",6]],[[["objmodule",3],["objmodule",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objmodule",3],["formatter",3]],["result",6]],[[["objmodule",3],["formatter",3]],["result",6]],[[]],[[["objmodule",3],["typecontext",3],["ident",4]],["option",4,[["objectref",3]]]],[[["objmodule",3]],["ident",4]],null,[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objmodule",3]],["iterator",8]],null,[[["objmodule",3]],["memorylayout",4]],[[["objmodule",3],["objmodule",3]],["bool",0]],[[["into",8,[["ident",4]]]],["objmodule",3]],[[["objmodule",3],["into",8,[["ident",4]]],["objectref",3]]],[[["objmodule",3],["typecontext",3],["objfunction",3]]],[[["objmodule",3],["into",8,[["ident",4]]],["objectref",3]],["option",4,[["objectref",3]]]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["ident",4],["objectproperties",6]],["objmodule",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objnativefunction",3],["typecontext",3]],["classref",6]],[[["typecontext",3]],["objectproperties",6]],[[["objnativefunction",3],["objnativefunction",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objnativefunction",3],["formatter",3]],["result",6]],[[["objnativefunction",3],["formatter",3]],["result",6]],[[]],null,[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objnativefunction",3]],["memorylayout",4]],[[["objnativefunction",3],["objnativefunction",3]],["bool",0]],null,[[["typecontext",3]],["classref",6]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objnever",3]],["objnever",3]],[[["",0],["",0]]],[[["typecontext",3]],["objectproperties",6]],[[["objnever",3],["objnever",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objnever",3],["formatter",3]],["result",6]],[[["objnever",3],["formatter",3]],["result",6]],[[]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objnever",3]],["memorylayout",4]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objnull",3]],["objnull",3]],[[["",0],["",0]]],[[["typecontext",3]],["objectproperties",6]],[[["objnull",3],["objnull",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objnull",3],["formatter",3]],["result",6]],[[["objnull",3],["formatter",3]],["result",6]],[[],["objnull",3]],[[]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objnull",3]],["memorylayout",4]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["objstring",3]],["objstring",3]],[[["",0],["",0]]],[[["typecontext",3]],["objectproperties",6]],[[["objstring",3]]],[[["objstring",3],["objstring",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objstring",3],["formatter",3]],["result",6]],[[["objstring",3],["formatter",3]],["result",6]],[[["rc",3,[["str",0]]]],["objstring",3]],[[]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objstring",3],["vec",3]]],[[["objstring",3]],["memorylayout",4]],[[["objstring",3],["objstring",3]],["bool",0]],[[["rc",3,[["str",0]]]],["objstring",3]],[[["typecontext",3]],["classref",6]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["objstring",3]],["rc",3,[["str",0]]]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["struct",3]],["bool",0]],[[["objstruct",3],["typecontext",3]],["classref",6]],[[["typecontext",3]],["objectproperties",6]],[[["objstruct",3]]],[[["struct",3]],["bool",0]],[[["struct",3],["struct",3]],["bool",0]],[[["objstruct",3],["objstruct",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["struct",3],["formatter",3]],["result",6]],[[["struct",3],["formatter",3]],["result",6]],[[["objstruct",3],["formatter",3]],["result",6]],[[["objstruct",3],["formatter",3]],["result",6]],[[]],[[]],[[["objstruct",3],["typecontext",3],["ident",4]],["option",4,[["objectref",3]]]],null,[[]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objstruct",3]],["memorylayout",4]],null,[[["struct",3],["struct",3]],["bool",0]],[[["objstruct",3],["objstruct",3]],["bool",0]],[[["structref",6]],["objstruct",3]],[[["struct",3]],["bool",0]],[[["typecontext",3]],["classref",6]],null,[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["ident",4],["fxhashmap",6],["indexmap",3]],["result",4,[["langerrorkind",4]]]],[[["objstructobject",3],["typecontext",3]],["classref",6]],[[["typecontext",3]],["objectproperties",6]],[[["objstructobject",3],["objstructobject",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["objstructobject",3],["formatter",3]],["result",6]],[[["objstructobject",3],["formatter",3]],["result",6]],[[]],[[["objstructobject",3],["typecontext",3],["ident",4]],["option",4,[["objectref",3]]]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objstructobject",3],["vec",3]]],[[["objstructobject",3]],["memorylayout",4]],null,[[["objstructobject",3],["objstructobject",3]],["bool",0]],[[["structref",6],["fxhashmap",6,[["ident",4],["objectref",3]]]],["result",4,[["objstructobject",3],["langerrorkind",4]]]],null,[[["typecontext",3]],["classref",6]],null,[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["tuple",3]],["bool",0]],[[["objtupleobject",3],["typecontext",3]],["classref",6]],[[["typecontext",3]],["objectproperties",6]],[[["tuple",3]],["bool",0]],[[["tuple",3],["tuple",3]],["bool",0]],[[["objtupleobject",3],["objtupleobject",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["tuple",3],["formatter",3]],["result",6]],[[["tuple",3],["formatter",3]],["result",6]],[[["objtupleobject",3],["formatter",3]],["result",6]],[[["objtupleobject",3],["formatter",3]],["result",6]],[[]],[[["vec",3,[["classref",6]]]],["tuple",3]],[[]],[[["objtupleobject",3],["typecontext",3],["ident",4]],["option",4,[["objectref",3]]]],[[]],[[]],[[["functioncontext",3]],["option",4,[["result",4,[["objectref",3],["langerrorkind",4]]]]]],[[["objtupleobject",3],["vec",3]]],null,[[["objtupleobject",3]],["usize",0]],[[["tuple",3],["tuple",3]],["bool",0]],[[["objtupleobject",3]],["memorylayout",4]],null,[[["tuple",3],["tuple",3]],["bool",0]],[[["objtupleobject",3],["objtupleobject",3]],["bool",0]],[[["vec",3,[["objectref",3]]]],["objtupleobject",3]],[[["tuple",3]],["bool",0]],[[["typecontext",3]],["classref",6]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["infiniteloopdetector",3]],[[["infiniteloopdetector",3],["fxhashmap",6],["blockid",3]],["bool",0]],[[["callgraph",3],["formatter",3]],["result",6]],[[["fxhashmap",6]],["callgraph",3]],[[]],[[]],[[["callgraph",3],["blockid",3]],["iterator",8]],[[["callgraph",3],["iterator",8]],["fxhashset",6,[["blockid",3]]]],null,[[["fxhashmap",6]],["graphmatrix",3,[["nonzerou32",3]]]],[[["callgraph",3],["blockid",3]],["bool",0]],[[]],[[]],[[["callgraph",3],["iterator",8]],["iterator",8]],null,[[["callgraph",3],["blockid",3],["blockid",3],["i32",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["callgraph",3],["fxhashmap",6]]],null,null,null,[[["codestats",3],["node",4]]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["codestats",3],["fxhashset",6]],["bool",0]],[[["codestats",3]]],[[["codestats",3],["formatter",3]],["result",6]],[[]],null,null,[[]],[[["callgraph",3]],["codestats",3]],[[["codestats",3],["node",4]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["codestats",3],["runtime",3],["fxhashmap",6]]],[[["codestats",3],["node",4],["option",4,[["blockid",3]]]]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["functionparameters",3]]],[[["functionparameter",4]],["functionparameter",4]],[[["",0],["",0]]],[[],["functionparameter",4]],[[],["functionparameters",3]],[[["functionparameters",3],["itemid",3]],["iterator",8]],[[["functionparameter",4],["formatter",3]],["result",6]],[[["functionparameters",3],["formatter",3]],["result",6]],[[]],[[]],[[["functionparameters",3],["blockid",3],["itemid",3]],["functionparameter",4]],[[["functionparameters",3],["blockid",3]],["option",4,[["fxhashmap",6]]]],[[]],[[]],[[["functionparameters",3],["itemid",3]],["bool",0]],[[["functionparameter",4]],["bool",0]],[[["functionparameter",4]],["bool",0]],null,[[["functionparameter",4]],["functionparameter",4]],[[["functionparameters",3],["blockid",3],["itemid",3]]],[[["functionparameters",3],["blockid",3],["itemid",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["functionparameter",4]],["functionparameter",4]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["commands",3]]],[[["commands",3],["formatter",3]],["result",6]],[[["globaloptimizer",3],["formatter",3]],["result",6]],[[]],[[]],null,[[["commands",3],["blockid",3]],["usize",0]],[[["globaloptimizer",3],["blockid",3]],["function",3]],[[["globaloptimizer",3],["blockid",3]],["function",3]],[[["commands",3],["itemid",3]],["variableusage",3]],[[["commands",3],["itemid",3]],["usize",0]],null,[[]],[[]],[[["commands",3],["itemid",3]],["bool",0]],[[["globaloptimizer",3]],["iterator",8]],[[["globaloptimizer",3]],["iterator",8]],[[["globaloptimizer",3]],["iterator",8]],[[["globaloptimizer",3],["codestats",3],["optimizecommanddeque",3]],["commands",3]],[[["config",3],["runtime",3],["fxhashmap",6,[["blockid",3],["function",3]]]],["globaloptimizer",3]],[[["",0],["commands",3]]],[[["globaloptimizer",3]],["codestats",3]],null,[[["globaloptimizer",3]],["option",4]],[[["commands",3]]],[[["globaloptimizer",3]]],[[["commands",3],["",0]],["bool",0]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["optimizecommanddeque",3]],[[["optimizecommanddeque",3]]],[[["optimizecommanddeque",3]]],[[["optimizecommandkind",4],["formatter",3]],["result",6]],[[["executerawupdate",4],["formatter",3]],["result",6]],[[["optimizecommand",3],["formatter",3]],["result",6]],[[["optimizecommanddeque",3,[["debug",8]]],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,[[["optimizecommandkind",4]],["optimizecommand",3]],[[["optimizecommanddeque",3]]],[[["optimizecommand",3],["i8",0]]],[[["optimizecommand",3]]],[[["optimizecommand",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["commands",3]]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["fraction",3],["formatter",3]],["result",6]],[[]],[[["i32",0]],["fraction",3]],[[]],[[["fraction",3]],["fraction",3]],[[["fraction",3],["fraction",3]]],null,[[["iterator",8]]],[[["iterator",8]]],[[["commands",3]]],[[["fraction",3]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["commands",3]]],[[["commands",3],["blockid",3],["blockid",3]],["option",4]],[[["commands",3]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["constoptimizer",3]],[[]],[[]],[[["constoptimizer",3],["commands",3]]],[[["constoptimizer",3],["optimizecommanddeque",3],["node",4]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["redundancyoptimizer",3]],[[["bool",0]],["simplifiedcondition",4]],[[]],[[]],[[]],[[]],[[["node",4],["condition",4]],["option",4]],[[["redundancyoptimizer",3],["commands",3]]],[[["condition",4]],["option",4,[["simplifiedcondition",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["globaloptimizer",3],["itemid",3]],["bool",0]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["redundantcopyoptimizer",3]],[[]],[[]],[[["redundantcopyoptimizer",3],["commands",3]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["peepholeoptimizer",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["peepholeoptimizer",3],["intoiterator",8]]],[[["peepholeoptimizer",3],["formatter",3]],["result",6]],[[]],[[["compilecontext",3]],["peepholeoptimizer",3]],[[]],null,null,[[["peepholeoptimizer",3],["node",4]],["node",4]],[[["peepholeoptimizer",3],["node",4]]],[[["peepholeoptimizer",3],["branch",3]],["node",4]],[[["peepholeoptimizer",3],["node",4]]],[[["peepholeoptimizer",3]],["vec",3,[["node",4]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["variableusage",3]]],[[["variableusage",3],["option",4,[["i32",0]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["valuehints",3]]],[[["valuehints",3],["itemid",3]]],[[["hint",4]],["hint",4]],[[["variableusage",3]],["variableusage",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["hint",4]],[[],["valuehints",3]],[[],["variableusage",3]],[[["hint",4]],["option",4,[["i32",0]]]],[[["hint",4],["formatter",3]],["result",6]],[[["valuehints",3],["formatter",3]],["result",6]],[[["variableusage",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["valuehints",3],["itemid",3]],["hint",4]],[[["valuehints",3],["scoreboardvalue",4]],["option",4,[["i32",0]]]],null,[[]],[[]],[[]],null,[[["variableusage",3]]],[[["variableusage",3]]],[[["valuehints",3],["itemid",3],["hint",4]]],[[["valuehints",3],["binaryoperation",3]],["option",4,[["i32",0]]]],[[["valuehints",3],["condition",4]],["option",4,[["bool",0]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["valuehints",3],["node",4],["bool",0]]],[[["variableusage",3]],["bool",0]],null,null,null,[[["runtime",3],["blockid",3],["externitempath",3]]],[[["runtime",3],["blockid",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["runtime",3],["blockid",3]],["bool",0]],[[],["runtime",3]],[[["runtime",3],["runtime",3]]],null,[[["runtime",3],["formatter",3]],["result",6]],[[]],[[]],null,[[["runtime",3]],["iterator",8]],[[["runtime",3],["blockid",3]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[],["typecontext",3]],[[["typecontext",3],["formatter",3]],["result",6]],[[]],[[["typecontext",3]],["option",4,[["classref",6]]]],[[["typecontext",3],["classref",6]]],[[]],[[["typecontext",3]],["objectref",3]],null,[[["typecontext",3]],["objectref",3]],null,[[["typecontext",3]],["objectref",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["type",4]],["type",4]],[[["",0],["",0]]],[[["type",4]],["bool",0]],[[["type",4]],["bool",0]],[[["type",4],["type",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["type",4],["formatter",3]],["result",6]],[[["type",4],["formatter",3]],["result",6]],[[]],[[["type",4],["",0]]],[[]],[[["type",4]],["bool",0]],[[["type",4]],["bool",0]],[[["type",4]],["bool",0]],[[["type",4],["type",4]],["bool",0]],[[["type",4]],["bool",0]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"ObjectRef"],[4,"Type"],[8,"ValidPayload"],[3,"CodeStats"],[3,"DebrisObject"],[3,"Llir"],[3,"Runtime"],[3,"CallGraph"],[8,"ObjectPayload"],[3,"BlockId"],[4,"ClassKind"],[3,"Class"],[13,"Type"],[13,"Struct"],[13,"StructValue"],[13,"Tuple"],[13,"TupleValue"],[13,"Function"],[3,"ExternItemPath"],[4,"ItemPathError"],[13,"InvalidCharacter"],[13,"InvalidDoubleUnderscore"],[3,"DebrisFunctionInterface"],[3,"NormalizedFunction"],[8,"DowncastArray"],[8,"ValidReturnType"],[8,"ToFunctionInterface"],[3,"ItemId"],[3,"ItemIdAllocator"],[4,"JsonFormatComponent"],[3,"FormattedText"],[13,"RawText"],[13,"Score"],[13,"Function"],[4,"FunctionParameter"],[4,"CallStack"],[3,"MonomorphizedFunction"],[3,"LlirBuilder"],[3,"BlockIdGenerator"],[3,"NativeFunctionMap"],[3,"FunctionGenerics"],[13,"Some"],[13,"Parameter"],[13,"Generic"],[4,"EvaluationMode"],[3,"LlirFunctionBuilder"],[3,"BuilderSharedState"],[3,"FunctionBuilderRuntime"],[3,"ParameterPartition"],[3,"ExecuteRaw"],[4,"WriteTarget"],[4,"Condition"],[4,"Node"],[4,"BranchKind"],[4,"ExecuteRawComponent"],[4,"VariableAccess"],[4,"VariableAccessMut"],[3,"Function"],[3,"FastStore"],[3,"FastStoreFromResult"],[3,"BinaryOperation"],[3,"Call"],[3,"Branch"],[3,"WriteMessage"],[13,"And"],[13,"Or"],[13,"Compare"],[13,"String"],[13,"ScoreboardValue"],[13,"Node"],[13,"FastStore"],[13,"FastStoreFromResult"],[13,"BinaryOperation"],[13,"Call"],[13,"Condition"],[13,"Branch"],[13,"Execute"],[13,"Write"],[13,"Read"],[13,"Write"],[13,"ReadWrite"],[13,"Read"],[13,"Write"],[13,"ReadWrite"],[4,"MemoryLayout"],[13,"One"],[13,"Multiple"],[4,"Scoreboard"],[4,"ScoreboardOperation"],[4,"ScoreboardComparison"],[4,"ScoreboardValue"],[13,"Custom"],[13,"Internal"],[13,"Static"],[13,"Scoreboard"],[3,"ObjBool"],[3,"ObjStaticBool"],[3,"ObjClass"],[8,"HasClass"],[4,"FormatStringComponent"],[3,"ObjFormatString"],[13,"String"],[13,"Value"],[3,"FunctionContext"],[3,"ObjFunction"],[3,"FunctionClass"],[3,"ObjFunctionRef"],[3,"ObjInt"],[3,"ObjStaticInt"],[3,"ObjModule"],[3,"ObjNativeFunction"],[3,"ObjNever"],[3,"ObjNull"],[3,"ObjString"],[3,"Struct"],[3,"ObjStruct"],[3,"ObjStructObject"],[3,"Tuple"],[3,"ObjTupleObject"],[3,"InfiniteLoopDetector"],[4,"FunctionParameter"],[3,"FunctionParameters"],[3,"Commands"],[3,"GlobalOptimizer"],[8,"Optimizer"],[3,"OptimizeCommandDeque"],[4,"OptimizeCommandKind"],[4,"ExecuteRawUpdate"],[3,"OptimizeCommand"],[13,"Replace"],[13,"InlineBranch"],[13,"UpdateBranchCondition"],[13,"RemoveAliasFunction"],[13,"ChangeWrite"],[13,"ChangeReads"],[13,"SetCondition"],[13,"Replace"],[13,"InsertAfter"],[13,"UpdateExecuteRaw"],[13,"UpdateBranch"],[3,"Fraction"],[3,"ConstOptimizer"],[4,"SimplifiedCondition"],[3,"RedundancyOptimizer"],[13,"NewCondition"],[3,"RedundantCopyOptimizer"],[3,"PeepholeOptimizer"],[4,"Hint"],[3,"VariableUsage"],[3,"ValueHints"],[13,"Exact"],[3,"TypeContext"]]},\
"debris_mir":{"doc":"","t":[3,3,11,11,11,11,12,12,12,12,11,11,11,11,11,11,0,0,0,0,0,0,12,11,12,12,11,11,11,11,11,11,13,3,3,13,4,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,12,5,12,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,12,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,13,13,13,3,3,3,4,13,13,4,3,3,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,12,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,13,3,13,3,13,4,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,14,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,3,4,3,3,3,4,3,3,13,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Mir","MirExternItem","borrow","borrow","borrow_mut","borrow_mut","contexts","definition_span","entry_context","extern_items","fmt","fmt","from","from","into","into","mir_builder","mir_context","mir_nodes","mir_object","mir_primitives","namespace","namespace","new","object_id","return_values_arena","try_from","try_from","try_into","try_into","type_id","type_id","Loop","MirBuilder","MirSingletons","Normal","ReturnContextBehavior","apply_function_attributes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","compile_context","contains","contexts","copy","create_context","current_context","emit","entry_context","exists_runtime_context","extern_items","fmt","from","from","from","from","get_context","get_context","get_context_mut","get_ident","get_local_namespace","get_object_property","get_return_context","get_variable_opt","handle_block","handle_block_keep_context","handle_branch","handle_context_objects","handle_control_flow","handle_expression","handle_expression_and_base","handle_function","handle_function_call","handle_hir_block","handle_import","handle_infinite_loop","handle_literal_value","handle_module","handle_nested_block","handle_statement","handle_struct","handle_struct_initialization","handle_tuple_initialization","handle_type_pattern","handle_variable_declaration","handle_variable_update","hir","insert_object","into","into","into","namespace","never","new","next_context","next_context_id","next_context_with_return_data","null","promote","register_object_name","resolve_path","resolve_path_without_last","return_value","return_values_arena","singletons","target_context_for","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","variable_get_or_insert","0","0","Block","BlockConditionalComptime","BlockConditionalRuntime","FunctionRuntime","Loop","ManuallyHandled","MirContext","MirContextDebug","MirContextId","MirContextKind","Module","Pass","ReturnContext","ReturnValuesArena","ReturnValuesData","ReturnValuesDataId","Specific","Struct","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","compilation_id","context","debug","default","default_return","default_return_value","eq","eq","eq","equivalent","equivalent","equivalent","explicit_return","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get","get_mut","has_early_returned","hash","hash","id","id","into","into","into","into","into","into","into","into","is_runtime","kind","local_namespace","local_namespace_id","ne","ne","new","new","nodes","partial_cmp","return_context","return_span","return_value","return_values","return_values","return_values","return_values_id","return_values_mut","set_handled_manually","super_context_id","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconditionally_returned","0","0","Branch","Branch","FunctionCall","FunctionCall","Goto","Goto","MirNode","PrimitiveDeclaration","PrimitiveDeclaration","PropertyAccess","PropertyAccess","PropertyUpdate","PropertyUpdate","RuntimeCopy","RuntimeCopy","RuntimePromotion","RuntimePromotion","VariableUpdate","VariableUpdate","VerifyPropertyExists","VerifyPropertyExists","VerifyTupleLength","VerifyTupleLength","VerifyValueComptime","VerifyValueComptime","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","comptime_update_allowed","comptime_update_allowed","condition","condition_span","context_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function","ident","ident","into","into","into","into","into","into","into","into","into","into","into","into","into","is_comptime","length","mir_node_declaration","neg_branch","obj_id","parameters","parent","pos_branch","property_ident","return_value","return_value","self_obj","span","span","span","span","span","span","span","span","span","span","span","span","target","target","target","target","target_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","value","value","value","value_id","value_span","0","0","0","0","0","0","0","0","0","0","0","0","MirObject","MirObjectId","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","compilation_id","defining_context","eq","equivalent","fmt","fmt","from","from","get_property","hash","id","id","into","into","local_namespace_id","ne","new","new_in","partial_cmp","property_get_or_insert","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","Bool","FormatString","Function","FunctionClass","Int","MirFormatString","MirFormatStringComponent","MirFunction","MirFunctionParameter","MirModule","MirPrimitive","MirStruct","MirStructType","Module","Never","Null","String","String","Struct","StructType","Tuple","TupleClass","Value","base_span","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","context_id","context_id","context_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","ident","into","into","into","into","into","into","into","into","last_item_span","name","name","parameters","properties","return_span","return_type","return_type_span","signature_span","span","span","struct_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","0","0","0","0","0","0","0","0","0","0","0","0","0","1","0","LocalNamespaceValue","MirLocalNamespace","MirLocalNamespaceId","MirNamespace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compilation_id","default","eq","equivalent","fmt","fmt","fmt","from","from","from","get_local_namespace","get_local_namespace_mut","get_obj","get_obj_mut","get_obj_namespace","get_obj_namespace_mut","get_property","insert","insert_local_namespace","insert_object","into","into","into","is_empty","iter","local_namespaces","ne","new","objects","properties","property_get_or_insert","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["debris_mir","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_mir::mir_builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_mir::mir_builder::ReturnContextBehavior","debris_mir::mir_context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_mir::mir_context::ReturnContext","","debris_mir::mir_nodesdebris_mir::mir_nodes::MirNode","","","","","","","","","","","","debris_mir::mir_object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_mir::mir_primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_mir::mir_primitives::MirFormatStringComponent","","debris_mir::mir_primitives::MirPrimitive","","","","","","","","","","","","debris_mir::namespace","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Creates a <code>ReturnContext::Specific(..)</code> with the current …","","Holds some singletons objects for easier access","Simple uses the specified return context","Simple enum to specify how to calculate the return context","Treats the function attributes as functions and calls …","","","","","","","","","","","","","","","","","","Returns true if any context, that lies ‘between’ …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calculates the <code>ReturnContext</code> to use for a context with …","","","","","","","","","","","","","","","","Handles a nested block and returns its id","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new context and returns the previous one","","Creates a new context with default return new return …","","","","Returns the object specified by the path","Resolves the path up to the last ident, so that the …","","","","Finds the context to return to using <code>control_flow</code>","","","","","","","","","","","Traverses the namespaces stack until it finds <code>ident</code>. If …","","","","","","","","Don’t jump anywhere, because the jump was handled …","","","","","","Don’t jump anywhere, just return to the caller","Specifies where to jump to when all commands of a context …","","Stores returns values a given context can return Multiple …","","Jump to a specific context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The id of the explicitly returned value and the span where …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the id of the return value This should be the …","","","","","","","The parent context of this context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An if-statement which has a condition, a return value and …","","","","Goes to a specific context","","","Declares a primitive value and assigns it to <code>target</code>","","Binds a required property of an object to an object id so …","","","","Tries to copy a value (Does nothing if the value is …","","Tries to promote a comptime value to a runtime value, but …","","Updates the variable at <code>target</code> to <code>value</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the update may be performed at compile time","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The target to which should be written to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The object with the required ident","","","","","","","","","","","","","","A duck-typed object. A <code>MirObject</code> contains all attributes …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The span of the expression that defined the return type","","The span of the return type definition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A tuple of the actual object and the span where it was …","Stores all the identifiers that are local to a given …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Creates a new object. This object stores the current …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The objects are indexed by <code>MirObjectId.id</code> For this reason, …","All properties of this namespace.","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,1,1,2,1,2,1,2,0,0,0,0,0,0,1,1,2,1,1,2,1,2,1,2,3,0,0,3,0,4,4,5,3,4,5,3,4,3,3,4,5,4,4,4,4,4,4,0,4,5,4,5,3,3,0,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,3,4,5,4,4,4,4,5,4,4,4,4,4,4,4,4,3,4,5,3,4,5,3,4,5,3,4,6,7,8,8,8,8,8,9,0,0,0,0,8,9,0,0,0,0,9,8,10,11,12,8,7,10,13,14,9,11,12,8,7,10,13,14,9,8,7,14,9,8,7,14,9,14,14,12,11,10,13,8,8,7,14,8,7,14,13,12,8,7,10,13,14,9,11,12,8,7,10,13,14,9,10,10,11,7,14,11,14,11,12,8,7,10,13,14,9,8,11,11,11,7,14,11,13,11,14,11,13,13,11,12,10,11,11,9,11,8,7,14,9,11,12,8,7,10,13,14,9,11,12,8,7,10,13,14,9,11,12,8,7,10,13,14,9,13,15,16,0,17,0,17,0,17,0,0,17,0,17,0,17,0,17,0,17,0,17,0,17,0,17,0,17,18,19,20,21,22,23,24,25,26,27,28,29,17,18,19,20,21,22,23,24,25,26,27,28,29,17,27,28,18,18,20,18,19,20,21,22,23,24,25,26,27,28,29,17,18,19,20,21,22,23,24,25,26,27,28,29,17,17,17,17,17,17,17,17,17,17,17,17,17,19,25,28,18,19,20,21,22,23,24,25,26,27,28,29,17,18,24,0,18,25,19,28,18,29,18,19,19,18,19,20,21,22,23,24,25,26,27,28,29,21,22,26,27,29,18,19,20,21,22,23,24,25,26,27,28,29,17,18,19,20,21,22,23,24,25,26,27,28,29,17,18,19,20,21,22,23,24,25,26,27,28,29,17,21,22,23,24,26,27,28,29,19,30,31,32,33,34,35,36,37,38,39,40,41,0,0,42,43,42,43,43,43,43,43,42,43,43,42,43,42,43,43,43,42,43,42,43,42,43,43,42,43,43,43,42,43,42,43,42,43,44,45,45,45,45,45,0,0,0,0,0,0,0,0,45,45,45,45,46,45,45,45,45,46,47,45,44,46,48,49,50,47,51,45,44,46,48,49,50,47,51,49,50,51,45,44,46,49,50,47,51,45,44,44,46,48,49,50,47,51,51,45,44,46,48,49,50,47,51,51,49,50,49,50,49,49,49,49,48,51,47,45,44,46,48,49,50,47,51,45,44,46,48,49,50,47,51,48,45,44,46,48,49,50,47,51,48,47,52,53,54,55,56,57,58,59,60,61,62,63,64,59,65,0,0,0,0,66,65,67,66,65,67,65,67,65,67,66,67,65,65,66,65,67,66,65,67,66,66,66,66,66,66,67,67,66,66,66,65,67,67,67,66,65,66,66,67,67,65,67,66,65,67,66,65,67,66,65,67],"f":[null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,[[["mir",3],["formatter",3]],["result",6]],[[["mirexternitem",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["compilecontext",3],["hir",3]],["result",6,[["mir",3]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["mirbuilder",3],["mirobjectid",3]],["result",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["mirbuilder",3]],["result",6,[["mir",3]]]],[[["returncontextbehavior",4]],["returncontextbehavior",4]],[[["",0],["",0]]],null,[[["mirsingletons",3],["mirobjectid",3]],["bool",0]],null,[[["mirbuilder",3],["mirobjectid",3],["span",3]],["mirobjectid",3]],[[["mirbuilder",3],["mircontextkind",4],["option",4,[["mircontextid",3]]],["mirlocalnamespaceid",3],["returnvaluesdataid",3],["returncontextbehavior",4]],["mircontext",3]],null,[[["mirbuilder",3],["into",8,[["mirnode",4]]]]],null,[[["mircontextid",3],["fxhashmap",6],["mircontext",3]],["bool",0]],null,[[["mirsingletons",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["returncontext",4]],["returncontextbehavior",4]],[[["fxhashmap",6],["mircontext",3],["mircontextid",3]],["mircontext",3]],[[["mirbuilder",3],["mircontextid",3]],["mircontext",3]],[[["fxhashmap",6],["mircontext",3],["mircontextid",3]],["mircontext",3]],[[["mirbuilder",3],["spannedidentifier",3]],["ident",4]],[[["mirbuilder",3],["mircontextid",3]],["mirlocalnamespace",3]],[[["mirbuilder",3],["option",4,[["mirobjectid",3]]],["ident",4],["span",3]],["mirobjectid",3]],[[["mirbuilder",3],["hircontrolkind",4],["mircontextid",3]],["returncontext",4]],[[["mirbuilder",3],["ident",4]],["option",4,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirblock",3],["mircontextkind",4]],["result",6]],[[["mirbuilder",3],["hirblock",3]],["result",6]],[[["mirbuilder",3],["hirconditionalbranch",3]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3]],["result",6]],[[["mirbuilder",3],["hircontrolflow",3]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirexpression",4]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirexpression",4]],["result",6]],[[["mirbuilder",3],["hirfunction",3]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirfunctioncall",3]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirblock",3]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirimport",3]],["result",6]],[[["mirbuilder",3],["hirinfiniteloop",3]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirconstvalue",4]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirmodule",3]],["result",6]],[[["mirbuilder",3],["hirblock",3],["mircontextkind",4],["returncontextbehavior",4],["option",4]],["result",6,[["mircontextid",3]]]],[[["mirbuilder",3],["hirstatement",4]],["result",6]],[[["mirbuilder",3],["hirstruct",3]],["result",6]],[[["mirbuilder",3],["hirstructinitialization",3]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirtupleinitialization",3]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirtypepattern",4]],["result",6,[["mirobjectid",3]]]],[[["mirbuilder",3],["hirvariableinitialization",3]],["result",6]],[[["mirbuilder",3],["hirvariableupdate",3]],["result",6]],null,[[["mirbuilder",3]],["mirobjectid",3]],[[]],[[]],[[]],null,null,[[["compilecontext",3],["hir",3]],["mirbuilder",3]],[[["mirbuilder",3],["mircontextkind",4],["option",4,[["mircontextid",3]]],["mirlocalnamespaceid",3],["returnvaluesdataid",3],["returncontextbehavior",4]],["mircontextid",3]],null,[[["mirbuilder",3],["mircontextkind",4],["option",4,[["mircontextid",3]]],["mirlocalnamespaceid",3],["returncontext",4]],["mircontextid",3]],null,[[["mirbuilder",3],["mirobjectid",3],["span",3]],["mirobjectid",3]],[[["mirbuilder",3],["spannedidentifier",3]],["mirobjectid",3]],[[["mirbuilder",3],["identifierpath",3]],["mirobjectid",3]],[[["mirbuilder",3],["identifierpath",3]]],[[["mirbuilder",3],["mircontextid",3],["mirobjectid",3],["span",3]]],null,null,[[["mirbuilder",3],["hircontrolkind",4]],["option",4,[["mircontext",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["mirbuilder",3],["ident",4],["span",3]],["mirobjectid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["returnvaluesarena",3],["returnvaluesdata",3]],["returnvaluesdataid",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["mircontextkind",4]],["mircontextkind",4]],[[["returnvaluesdataid",3]],["returnvaluesdataid",3]],[[["mircontextid",3]],["mircontextid",3]],[[["returncontext",4]],["returncontext",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["mircontextid",3],["mircontextid",3]],["ordering",4]],null,null,[[["mircontext",3],["returnvaluesarena",3]],["mircontextdebug",3]],[[],["returnvaluesarena",3]],null,[[["mircontextkind",4],["mirsingletons",3]],["mirobjectid",3]],[[["mircontextkind",4],["mircontextkind",4]],["bool",0]],[[["returnvaluesdataid",3],["returnvaluesdataid",3]],["bool",0]],[[["mircontextid",3],["mircontextid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["mircontextdebug",3],["formatter",3]],["result",6]],[[["mircontextkind",4],["formatter",3]],["result",6]],[[["returnvaluesdataid",3],["formatter",3]],["result",6]],[[["returnvaluesarena",3],["formatter",3]],["result",6]],[[["returnvaluesdata",3],["formatter",3]],["result",6]],[[["mircontextid",3],["formatter",3]],["result",6]],[[["returncontext",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["returnvaluesarena",3],["returnvaluesdataid",3]],["returnvaluesdata",3]],[[["returnvaluesarena",3],["returnvaluesdataid",3]],["returnvaluesdata",3]],null,[[["returnvaluesdataid",3],["",0]]],[[["mircontextid",3],["",0]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["mircontextkind",4]],["bool",0]],null,[[["mircontext",3],["mirnamespace",3]],["mirlocalnamespace",3]],null,[[["returnvaluesdataid",3],["returnvaluesdataid",3]],["bool",0]],[[["mircontextid",3],["mircontextid",3]],["bool",0]],[[["mircontextid",3],["option",4,[["mircontextid",3]]],["mirlocalnamespaceid",3],["mircontextkind",4],["returnvaluesdataid",3],["returncontext",4]],["mircontext",3]],[[["mirobjectid",3]],["returnvaluesdata",3]],null,[[["mircontextid",3],["mircontextid",3]],["option",4,[["ordering",4]]]],null,[[["returnvaluesdata",3]],["option",4,[["span",3]]]],[[["returnvaluesdata",3]],["mirobjectid",3]],[[["mircontext",3],["returnvaluesarena",3]],["returnvaluesdata",3]],null,null,null,[[["mircontext",3],["returnvaluesarena",3]],["returnvaluesdata",3]],[[["returncontext",4]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,null,null,[[["branch",3],["formatter",3]],["result",6]],[[["functioncall",3],["formatter",3]],["result",6]],[[["goto",3],["formatter",3]],["result",6]],[[["runtimepromotion",3],["formatter",3]],["result",6]],[[["runtimecopy",3],["formatter",3]],["result",6]],[[["verifyvaluecomptime",3],["formatter",3]],["result",6]],[[["verifytuplelength",3],["formatter",3]],["result",6]],[[["verifypropertyexists",3],["formatter",3]],["result",6]],[[["primitivedeclaration",3],["formatter",3]],["result",6]],[[["variableupdate",3],["formatter",3]],["result",6]],[[["propertyupdate",3],["formatter",3]],["result",6]],[[["propertyaccess",3],["formatter",3]],["result",6]],[[["mirnode",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["verifytuplelength",3]],["mirnode",4]],[[["goto",3]],["mirnode",4]],[[["primitivedeclaration",3]],["mirnode",4]],[[["verifypropertyexists",3]],["mirnode",4]],[[["functioncall",3]],["mirnode",4]],[[["propertyupdate",3]],["mirnode",4]],[[["variableupdate",3]],["mirnode",4]],[[["runtimepromotion",3]],["mirnode",4]],[[]],[[["verifyvaluecomptime",3]],["mirnode",4]],[[["runtimecopy",3]],["mirnode",4]],[[["branch",3]],["mirnode",4]],[[["propertyaccess",3]],["mirnode",4]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["mirobjectid",3]],["mirobjectid",3]],[[["",0],["",0]]],[[["mirobjectid",3],["mirobjectid",3]],["ordering",4]],null,null,[[["mirobjectid",3],["mirobjectid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["mirobject",3],["formatter",3]],["result",6]],[[["mirobjectid",3],["formatter",3]],["result",6]],[[]],[[]],[[["mirobjectid",3],["mirnamespace",3],["ident",4]],["option",4,[["mirobjectid",3]]]],[[["mirobjectid",3],["",0]]],null,null,[[]],[[]],null,[[["mirobjectid",3],["mirobjectid",3]],["bool",0]],[[["compilationid",3],["u32",0]],["mirobjectid",3]],[[["mirnamespace",3],["mircontextid",3],["mirobjectid",3]],["mirobject",3]],[[["mirobjectid",3],["mirobjectid",3]],["option",4,[["ordering",4]]]],[[["mirobjectid",3],["mirnamespace",3],["vec",3],["ident",4],["span",3],["mircontextid",3]],["mirobjectid",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["mirprimitive",4],["formatter",3]],["result",6]],[[["mirformatstring",3],["formatter",3]],["result",6]],[[["mirformatstringcomponent",4],["formatter",3]],["result",6]],[[["mirfunction",3],["formatter",3]],["result",6]],[[["mirstructtype",3],["formatter",3]],["result",6]],[[["mirstruct",3],["formatter",3]],["result",6]],[[["mirmodule",3],["formatter",3]],["result",6]],[[]],[[]],[[["vec",3,[["mirformatstringcomponent",4]]]],["mirformatstring",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["mirlocalnamespaceid",3]],["mirlocalnamespaceid",3]],[[["mirlocalnamespace",3]],["mirlocalnamespace",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["mirlocalnamespace",3]],[[["mirlocalnamespaceid",3],["mirlocalnamespaceid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["mirnamespace",3],["formatter",3]],["result",6]],[[["mirlocalnamespaceid",3],["formatter",3]],["result",6]],[[["mirlocalnamespace",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["mirnamespace",3],["mirlocalnamespaceid",3]],["mirlocalnamespace",3]],[[["mirnamespace",3],["mirlocalnamespaceid",3]],["mirlocalnamespace",3]],[[["mirnamespace",3],["mirobjectid",3]],["mirobject",3]],[[["mirnamespace",3],["mirobjectid",3]],["mirobject",3]],[[["mirnamespace",3],["mirobjectid",3]],["mirlocalnamespace",3]],[[["mirnamespace",3],["mirobjectid",3]],["mirlocalnamespace",3]],[[["mirlocalnamespace",3],["ident",4]],["option",4,[["mirobjectid",3]]]],[[["mirlocalnamespace",3],["mirobjectid",3],["ident",4],["span",3]]],[[["mirnamespace",3]],["mirlocalnamespaceid",3]],[[["mirnamespace",3],["mircontextid",3]],["mirobject",3]],[[]],[[]],[[]],[[["mirlocalnamespace",3]],["bool",0]],[[["mirlocalnamespace",3]],["iterator",8]],null,[[["mirlocalnamespaceid",3],["mirlocalnamespaceid",3]],["bool",0]],[[["compilecontext",3]],["mirnamespace",3]],null,null,[[["mirlocalnamespace",3],["vec",3],["mirnamespace",3],["mirobjectid",3],["ident",4],["span",3],["mircontextid",3]],["mirobjectid",3]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Mir"],[3,"MirExternItem"],[4,"ReturnContextBehavior"],[3,"MirBuilder"],[3,"MirSingletons"],[13,"Normal"],[3,"ReturnValuesDataId"],[4,"MirContextKind"],[4,"ReturnContext"],[3,"ReturnValuesArena"],[3,"MirContext"],[3,"MirContextDebug"],[3,"ReturnValuesData"],[3,"MirContextId"],[13,"ManuallyHandled"],[13,"Specific"],[4,"MirNode"],[3,"Branch"],[3,"FunctionCall"],[3,"Goto"],[3,"RuntimePromotion"],[3,"RuntimeCopy"],[3,"VerifyValueComptime"],[3,"VerifyTupleLength"],[3,"VerifyPropertyExists"],[3,"PrimitiveDeclaration"],[3,"VariableUpdate"],[3,"PropertyUpdate"],[3,"PropertyAccess"],[13,"Branch"],[13,"FunctionCall"],[13,"Goto"],[13,"RuntimePromotion"],[13,"RuntimeCopy"],[13,"VerifyValueComptime"],[13,"VerifyTupleLength"],[13,"VerifyPropertyExists"],[13,"PrimitiveDeclaration"],[13,"VariableUpdate"],[13,"PropertyUpdate"],[13,"PropertyAccess"],[3,"MirObject"],[3,"MirObjectId"],[3,"MirFormatString"],[4,"MirPrimitive"],[4,"MirFormatStringComponent"],[3,"MirStruct"],[3,"MirFunctionParameter"],[3,"MirFunction"],[3,"MirStructType"],[3,"MirModule"],[13,"String"],[13,"Value"],[13,"Int"],[13,"Bool"],[13,"String"],[13,"FormatString"],[13,"Function"],[13,"FunctionClass"],[13,"Module"],[13,"Tuple"],[13,"TupleClass"],[13,"StructType"],[13,"Struct"],[3,"MirLocalNamespaceId"],[3,"MirNamespace"],[3,"MirLocalNamespace"]]},\
"debris_parser":{"doc":"","t":[12,3,0,11,11,11,11,11,11,11,0,11,0,11,11,11,0,0,0,11,0,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,3,3,13,3,8,3,3,4,8,3,3,13,13,13,4,13,3,13,13,13,4,13,13,3,3,13,4,13,13,3,13,4,3,13,13,13,3,3,3,13,3,13,3,13,13,3,13,3,3,13,13,3,13,13,3,3,13,3,3,13,3,13,13,4,3,13,4,3,13,3,3,4,3,13,13,3,13,3,13,3,3,3,13,13,3,13,13,3,3,13,4,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,13,13,3,13,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,5,5,5,12,12,11,11,12,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,4,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,6,3,3,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,12,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,3,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","LocalSpan","ast","borrow","borrow_mut","clone","clone_into","deref","eq","equivalent","error","fmt","format_string_parser","from","into","ne","node","parser","syntax_tree","to_owned","token","try_from","try_into","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AssignMode","AssignOperator","Assignment","Assignment","Ast","AstItem","AstNode","AstNodeInner","AstNodeOrToken","AstToken","AttributeList","Block","Block","Block","Block","Bool","Bool","Branch","Branch","Branch","Branch","BranchElse","Comptime","ControlFlow","ControlFlowOperation","ControlFlowOperator","EscapedChar","Expression","Expression","False","FormatString","FormatString","FormatStringComponent","Function","Function","Function","Function","FunctionPattern","FunctionPatternParams","Ident","Ident","Import","Import","InfLoop","InfLoop","InfLoop","InfixOp","InfixOp","InfixOperator","Int","Int","Let","Module","Module","Node","ParamDecl","ParamList","ParamList","ParamListDecl","ParensValue","ParenthesisValue","Path","Path","Path","Pattern","PostfixOp","PostfixOp","PostfixOperator","PrefixOp","PrefixOp","PrefixOperator","Program","Statement","String","String","StringInner","Struct","Struct","StructLiteral","StructLiteral","StructLiteralItem","StructVar","StructVars","Token","True","Tuple","Tuple","Tuple","TuplePattern","Update","Update","Value","Value","WhileLoop","WhileLoop","WhileLoop","all_children","all_nodes","all_tokens","arguments","assign_mode","attributes","attributes","block","block","block","block","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","components","comptime_token","condition","condition","declarations","deref","else_branch","expr","expr","expr","expr","expr","find_node","find_token","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_node","from_token","from_token","from_token","from_token","from_token","from_token","from_token","from_token","from_token","from_token","ident","ident","ident","ident","ident","ident","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","items","items","items","items","lambda","last_expr","left","lhs","new","new","node","nodes","op","op","op","op","operator","param_declaration_list","parameters","pattern","pattern","program","ret","ret_declaration","rhs","right","segments","span","statements","statements","sub_patterns","syntax","syntax_node","syntax_tree","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_item","to_owned","to_token","to_token","to_token","to_token","to_token","to_token","to_token","to_token","to_token","to_token","token","tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","variables","vars","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ControlFlowOperator","ExpectedItem","FormatString","LeftOverInput","ParseErrorKind","Statement","TokenKind","UnexpectedComma","UnexpectedFunctionIdent","UnexpectedPath","UnexpectedToken","Value","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","fmt","fmt","from","from","from","into","into","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","expected","got","Dollar","Dot","EndOfInput","Error","EscapedChar","FormatStringParser","Ident","String","Tick","Token","TokenKind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","expect","fmt","fmt","from","from","from","insert","into","into","into","kind","lex","new","next","offset","parse_format_string","parse_format_string_inner","parse_path","parser","span","to_owned","to_owned","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","Assignment","AttributeList","Block","Branch","BranchElse","ControlFlow","Error","FormatString","Function","FunctionPattern","FunctionPatternParams","Import","InfLoop","InfixOp","Module","Node","Node","NodeChild","NodeDisplay","NodeId","NodeKind","ParamDeclaration","ParamList","ParamListDeclaration","ParensValue","Path","Pattern","PostfixOp","PrefixOp","Root","Statement","StructDef","StructLiteral","StructLiteralItem","StructVar","StructVariables","Token","Tuple","Update","Value","WhileLoop","ast","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","indent","into","into","into","into","into","kind","ne","ne","ne","node_id","source","span","span","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write_indented","writeln","0","0","ExpressionConfig","ParseResult","Parser","RecoveryOptions","_next_token","allow_complex","allow_defer","begin","begin_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bump","clone","clone","clone_into","clone_into","consume","consume_first_of","consume_first_with","consume_safety_token","consume_whitespace","create_error","create_neg_int_literal_maybe","current","current_stripped","default","default","end","end_inline","end_root","end_to_new","expect","fmt","fmt","fmt","from","from","from","input","insert","insert_full_node","into","into","into","lookahead_update","new","nth_next","nth_non_whitespace","parse","parse_assignment","parse_attribute_list_maybe","parse_block","parse_branch","parse_comma_separated","parse_comma_separated_inner","parse_control_flow","parse_expr","parse_expr_inner","parse_expr_maybe","parse_format_string","parse_function","parse_function_pattern","parse_import","parse_loop","parse_module","parse_param_declaration","parse_param_list","parse_param_list_declaration","parse_parenthesis_or_tuple","parse_path","parse_pattern","parse_postfix_maybe","parse_prefix","parse_prefix_maybe","parse_ret_maybe","parse_root","parse_statement","parse_struct_def","parse_struct_literal","parse_struct_literal_item","parse_struct_vars","parse_update","parse_value_maybe","parse_while","parse_with","peeked_tokens","recover","recover_with","replace_stack","skip","st","stack","to_owned","to_owned","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","SyntaxTree","borrow","borrow_mut","combine_errors","debug_fmt","default","errors","fmt","from","get","get_mut","index","index_mut","insert","into","nodes","root","to_string","try_from","try_into","type_id","write_string","And","Assign","Assign","AssignDivide","AssignDivide","AssignMinus","AssignMinus","AssignModulo","AssignModulo","AssignOperator","AssignPlus","AssignPlus","AssignTimes","AssignTimes","BoolFalse","BoolTrue","BraceClose","BraceOpen","BracketClose","BracketOpen","Break","Call","Colon","Comma","Comment","Continue","ControlFlowOperator","Divide","Dollar","Dot","Dot","EndOfInput","Equal","Error","EscapedChar","FormatString","FormatStringVariable","Greater","GreaterOrEqual","Ident","InfixOperator","Int","KwBreak","KwComptime","KwContinue","KwElse","KwFunction","KwIf","KwImport","KwLet","KwLoop","KwMod","KwReturn","KwStruct","KwWhile","Less","LessOrEqual","Minus","Minus","Modulo","Not","NotEqual","OpAnd","OpDivide","OpEqual","OpGreater","OpGreaterOrEqual","OpLess","OpLessOrEqual","OpMinus","OpModulo","OpNot","OpNotEqual","OpOr","OpPlus","OpTimes","Or","ParenthesisClose","ParenthesisOpen","Plus","PostfixOperator","PrefixOperator","Return","Semicolon","String","StringInner","StructLiteral","ThinArrow","Tick","Times","Token","TokenKind","UnexpectedToken","Whitespace","assign_operator","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","control_flow_operator","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","infix_operator","into","into","into","into","into","into","into","is_whitespace","kind","lex","ne","postfix_operator","precedence","precedence","precedence","prefix_operator","span","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["debris_parser","","","","","","","","","","","","","","","","","","","","","","","","debris_parser::astdebris_parser::ast::AssignMode","","debris_parser::ast::AstNodeOrToken","","debris_parser::ast::Bool","","debris_parser::ast::BranchElse","","debris_parser::ast::Expression","","","","debris_parser::ast::FormatStringComponent","","","debris_parser::ast::Pattern","","","debris_parser::ast::PostfixOperator","","debris_parser::ast::Statement","","","","","","","","","","","debris_parser::ast::Value","","","","","","","","","","","","","debris_parser::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_parser::error::ExpectedItem","debris_parser::error::ParseErrorKind","","","","","","debris_parser::format_string_parser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_parser::node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_parser::node::NodeChild","","debris_parser::parser","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","debris_parser::syntax_tree","","","","","","","","","","","","","","","","","","","","","","debris_parser::tokend":["","Wrapper over normal spans, to ensure that parser spans are …","","","","","","","","","This file contains the error type that is used for …","","","Returns the argument unchanged.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Options passed to the parsers recover function","Should only be used by <code>nth_next</code> and <code>skip</code>","","Whether the recovery may be deferred, in case a better …","Begins a node","","","","","","","","Consumes the current token","","","","","Consume all consecutive whitespace and then consumes the …","Consumes the first matching token of <code>options</code> Returns <code>Err</code> …","","Whether to consume the first encountered safety token","Consumes a single whitespace token or does nothing","Whether to automatically create an unexpected token error","This function implements a hack that combines a minus …","","","","","Ends a node","Discards the current stack kind and appends the elements …","Ends the root node and sets <code>ast.root_node</code> accordingly","Creates a new node of kind <code>node_kind</code> and ends the current …","Consumes all consecutive whitespace and expects that the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Adds a <code>NodeChild</code> to the current node","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Looks forward and checks if the current item can be an …","","","","","","","","","Parses a comma separated list of items Returns a tuple of (…","","","","","","","","","","","","","","","","","","","Parses a single prefix","Parses leading prefix operators and control flow operators …","","","Parses a statement","","","","","","","","","","Tries to advance the parser to a known safe state, so that …","","","Skips the current token and goes to the next. The skipped …","","","","","","","","","","","","","","","","","","Combines similar errors to avoid some visual noise","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manually created in format strings,","","","","","","Manually created in format strings Always consists of two …","","Manually created in format strings Always starts with a ‘…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Postfix operator with infinite precedence","","","","","Created manually","","","Created manually","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tokens that have no semantic meaning attached are …","","","","","","","Returns the precedence of this <code>InfixOperator</code>. The higher …","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,0,1,0,1,1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,0,0,40,0,0,0,0,0,0,0,0,40,41,42,0,42,0,40,41,42,0,43,42,0,0,44,0,40,45,0,42,0,0,40,46,42,0,0,0,42,0,40,0,40,42,0,47,0,0,42,43,0,40,48,0,0,49,0,0,42,0,44,46,0,0,47,0,0,47,0,0,0,0,42,44,0,40,0,49,0,0,0,48,45,0,46,42,0,0,40,0,47,0,40,42,2,2,2,28,17,4,8,8,11,14,15,16,50,44,51,2,48,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,43,18,19,46,20,21,22,23,47,24,25,49,26,27,28,42,29,30,31,32,33,34,35,36,37,38,45,39,50,44,51,2,48,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,43,18,19,46,20,21,22,23,47,24,25,49,26,27,28,42,29,30,31,32,33,34,35,36,37,38,45,39,2,2,38,14,14,16,9,2,14,18,26,30,31,33,2,2,50,51,2,48,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,43,18,19,46,20,21,22,23,47,24,25,49,26,27,28,42,29,30,31,32,33,34,35,36,37,38,45,39,50,44,51,51,2,48,48,48,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,43,18,19,46,20,21,22,23,47,24,25,49,26,27,28,42,29,30,31,32,33,34,35,36,37,38,45,39,52,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,18,46,20,21,22,23,47,24,25,49,26,28,42,29,30,31,33,34,38,53,43,19,27,32,35,36,37,45,39,5,7,8,11,12,30,50,44,51,2,48,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,43,18,19,46,20,21,22,23,47,24,25,49,26,27,28,42,29,30,31,32,33,34,35,36,37,38,45,39,5,22,29,34,28,13,24,10,44,2,48,2,18,25,26,31,24,8,21,17,18,51,21,8,10,24,23,48,3,13,20,50,50,50,52,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,18,46,20,21,22,23,47,24,25,49,26,28,42,29,30,31,33,34,38,2,53,43,19,27,32,35,36,37,45,39,48,2,50,44,51,2,48,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,43,18,19,46,20,21,22,23,47,24,25,49,26,27,28,42,29,30,31,32,33,34,35,36,37,38,45,39,50,44,51,2,48,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,43,18,19,46,20,21,22,23,47,24,25,49,26,27,28,42,29,30,31,32,33,34,35,36,37,38,45,39,7,50,44,51,2,48,3,4,5,6,7,8,9,10,11,12,13,40,14,41,15,16,17,43,18,19,46,20,21,22,23,47,24,25,49,26,27,28,42,29,30,31,32,33,34,35,36,37,38,45,39,17,25,5,6,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,0,98,99,0,98,98,99,99,99,99,98,99,98,99,98,99,98,99,98,98,98,99,98,99,98,98,99,98,98,99,98,99,98,99,98,99,98,100,101,102,103,104,105,105,106,106,106,106,106,0,106,106,106,0,0,107,106,108,107,106,108,106,108,106,108,106,106,107,106,108,107,106,108,107,107,106,108,108,106,107,107,107,0,0,0,107,108,106,108,107,107,106,108,107,106,108,107,106,108,109,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,111,0,0,0,0,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,111,110,110,110,110,112,112,109,113,111,110,112,109,113,111,110,113,109,111,110,109,111,110,109,113,111,110,109,113,111,110,112,109,113,111,110,110,112,109,113,111,111,111,110,112,112,109,113,111,110,113,109,113,111,112,112,111,113,109,111,110,112,110,112,109,113,111,110,112,109,113,111,110,112,109,113,111,110,112,112,114,115,0,0,0,0,116,117,118,116,116,116,118,117,116,118,117,116,118,117,118,117,116,116,116,118,116,118,0,116,116,118,117,116,116,116,116,116,116,118,117,116,118,117,116,116,116,116,118,117,0,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,116,116,116,116,118,117,116,116,118,117,116,118,117,116,118,117,0,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,120,121,122,121,122,121,122,121,122,0,121,122,121,122,122,122,122,122,122,122,123,124,122,122,122,123,0,120,122,120,122,122,120,122,122,122,122,120,120,122,0,122,122,122,122,122,122,122,122,122,122,122,122,122,122,120,120,125,120,120,125,120,122,122,122,122,122,122,122,122,122,122,122,122,122,122,120,122,122,120,0,0,123,122,122,122,124,122,122,120,0,0,122,122,122,121,124,125,120,123,126,122,121,124,125,120,123,126,122,126,122,126,122,122,126,122,126,122,126,126,122,122,121,124,125,120,123,126,122,122,121,124,125,120,123,126,122,122,126,122,126,122,124,125,120,122,126,126,122,126,122,121,124,125,120,123,126,126,122,122,121,124,125,120,123,126,122,121,124,125,120,123,126,122],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["localspan",3]],["localspan",3]],[[["",0],["",0]]],[[["localspan",3]]],[[["localspan",3],["localspan",3]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["localspan",3],["formatter",3]],["result",6]],null,[[]],[[]],[[["localspan",3],["localspan",3]],["bool",0]],null,null,null,[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["astnode",3]],["iterator",8]],[[["astnode",3]],["iterator",8]],[[["astnode",3]],["iterator",8]],[[["paramlist",3]],["iterator",8]],[[["assignment",3]],["assignmode",4]],[[["attributelist",3]],["iterator",8]],[[["function",3]],["option",4,[["attributelist",3]]]],[[["function",3]],["block",3]],[[["module",3]],["block",3]],[[["branch",3]],["block",3]],[[["infloop",3]],["block",3]],[[["whileloop",3]],["blockastnode",3]],["astnode",3]],[[["",0],["",0]]],[[["formatstring",3]],["iterator",8]],[[["branch",3]],["option",4,[["token",3]]]],[[["branch",3]],["expression",4]],[[["whileloop",3]],["expression",4]],[[["paramlistdecl",3]],["iterator",8]],[[["astnode",3]]],[[["branch",3]],["option",4,[["branchelse",4]]]],[[["update",3]],["expression",4]],[[["prefixop",3]],["expression",4]],[[["structliteralitem",3]],["expression",4]],[[["controlflowoperation",3]],["option",4,[["expression",4]]]],[[["parensvalue",3]],["expression",4]],[[["astnode",3]],["option",4,[["astitem",8]]]],[[["astnode",3]],["option",4,[["asttoken",8]]]],[[["astnodeinner",3],["formatter",3]],["result",6]],[[["ast",3],["formatter",3]],["result",6]],[[["astnode",3],["formatter",3]],["result",6]],[[["astnodeortoken",4],["formatter",3]],["result",6]],[[["program",3],["formatter",3]],["result",6]],[[["attributelist",3],["formatter",3]],["result",6]],[[["struct",3],["formatter",3]],["result",6]],[[["structvars",3],["formatter",3]],["result",6]],[[["structvar",3],["formatter",3]],["result",6]],[[["function",3],["formatter",3]],["result",6]],[[["paramlistdecl",3],["formatter",3]],["result",6]],[[["paramdecl",3],["formatter",3]],["result",6]],[[["module",3],["formatter",3]],["result",6]],[[["import",3],["formatter",3]],["result",6]],[[["block",3],["formatter",3]],["result",6]],[[["statement",4],["formatter",3]],["result",6]],[[["branch",3],["formatter",3]],["result",6]],[[["branchelse",4],["formatter",3]],["result",6]],[[["infloop",3],["formatter",3]],["result",6]],[[["whileloop",3],["formatter",3]],["result",6]],[[["assignment",3],["formatter",3]],["result",6]],[[["assignmode",4],["formatter",3]],["result",6]],[[["update",3],["formatter",3]],["result",6]],[[["assignoperator",3],["formatter",3]],["result",6]],[[["pattern",4],["formatter",3]],["result",6]],[[["tuplepattern",3],["formatter",3]],["result",6]],[[["functionpattern",3],["formatter",3]],["result",6]],[[["functionpatternparams",3],["formatter",3]],["result",6]],[[["path",3],["formatter",3]],["result",6]],[[["expression",4],["formatter",3]],["result",6]],[[["infixop",3],["formatter",3]],["result",6]],[[["postfixop",3],["formatter",3]],["result",6]],[[["postfixoperator",4],["formatter",3]],["result",6]],[[["prefixop",3],["formatter",3]],["result",6]],[[["prefixoperator",3],["formatter",3]],["result",6]],[[["paramlist",3],["formatter",3]],["result",6]],[[["value",4],["formatter",3]],["result",6]],[[["structliteral",3],["formatter",3]],["result",6]],[[["structliteralitem",3],["formatter",3]],["result",6]],[[["controlflowoperation",3],["formatter",3]],["result",6]],[[["controlflowoperator",3],["formatter",3]],["result",6]],[[["parensvalue",3],["formatter",3]],["result",6]],[[["tuple",3],["formatter",3]],["result",6]],[[["int",3],["formatter",3]],["result",6]],[[["ident",3],["formatter",3]],["result",6]],[[["string",3],["formatter",3]],["result",6]],[[["formatstring",3],["formatter",3]],["result",6]],[[["bool",4],["formatter",3]],["result",6]],[[["infixoperator",3],["formatter",3]],["result",6]],[[]],[[]],[[["rc",3,[["syntaxtree",3]]]],["ast",3]],[[]],[[]],[[]],[[["token",3]],["astnodeortoken",4]],[[["astnode",3]],["astnodeortoken",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["astnode",3]],["option",4]],[[["astnode",3]],["option",4,[["program",3]]]],[[["astnode",3]],["option",4,[["attributelist",3]]]],[[["astnode",3]],["option",4,[["struct",3]]]],[[["astnode",3]],["option",4,[["structvars",3]]]],[[["astnode",3]],["option",4,[["structvar",3]]]],[[["astnode",3]],["option",4,[["function",3]]]],[[["astnode",3]],["option",4,[["paramlistdecl",3]]]],[[["astnode",3]],["option",4,[["paramdecl",3]]]],[[["astnode",3]],["option",4,[["module",3]]]],[[["astnode",3]],["option",4,[["import",3]]]],[[["astnode",3]],["option",4,[["block",3]]]],[[["astnode",3]],["option",4,[["statement",4]]]],[[["astnode",3]],["option",4,[["branch",3]]]],[[["astnode",3]],["option",4,[["branchelse",4]]]],[[["astnode",3]],["option",4,[["infloop",3]]]],[[["astnode",3]],["option",4,[["whileloop",3]]]],[[["astnode",3]],["option",4,[["assignment",3]]]],[[["astnode",3]],["option",4,[["update",3]]]],[[["astnode",3]],["option",4,[["pattern",4]]]],[[["astnode",3]],["option",4,[["tuplepattern",3]]]],[[["astnode",3]],["option",4,[["functionpattern",3]]]],[[["astnode",3]],["option",4,[["functionpatternparams",3]]]],[[["astnode",3]],["option",4,[["path",3]]]],[[["astnode",3]],["option",4,[["expression",4]]]],[[["astnode",3]],["option",4,[["infixop",3]]]],[[["astnode",3]],["option",4,[["postfixop",3]]]],[[["astnode",3]],["option",4,[["postfixoperator",4]]]],[[["astnode",3]],["option",4,[["prefixop",3]]]],[[["astnode",3]],["option",4,[["paramlist",3]]]],[[["astnode",3]],["option",4,[["value",4]]]],[[["astnode",3]],["option",4,[["structliteral",3]]]],[[["astnode",3]],["option",4,[["structliteralitem",3]]]],[[["astnode",3]],["option",4,[["controlflowoperation",3]]]],[[["astnode",3]],["option",4,[["parensvalue",3]]]],[[["astnode",3]],["option",4,[["tuple",3]]]],[[["astnode",3]],["option",4,[["formatstring",3]]]],[[["token",3]],["option",4]],[[["token",3]],["option",4,[["assignmode",4]]]],[[["token",3]],["option",4,[["assignoperator",3]]]],[[["token",3]],["option",4,[["prefixoperator",3]]]],[[["token",3]],["option",4,[["controlflowoperator",3]]]],[[["token",3]],["option",4,[["int",3]]]],[[["token",3]],["option",4,[["ident",3]]]],[[["token",3]],["option",4,[["string",3]]]],[[["token",3]],["option",4,[["bool",4]]]],[[["token",3]],["option",4,[["infixoperator",3]]]],[[["struct",3]],["option",4,[["ident",3]]]],[[["structvar",3]],["ident",3]],[[["function",3]],["option",4,[["ident",3]]]],[[["module",3]],["ident",3]],[[["import",3]],["path",3]],[[["structliteralitem",3]],["ident",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["struct",3]],["iterator",8]],[[["functionpatternparams",3]],["iterator",8]],[[["structliteral",3]],["iterator",8]],[[["tuple",3]],["iterator",8]],[[["paramlist",3]],["option",4,[["block",3]]]],[[["block",3]],["option",4,[["expression",4]]]],[[["infixop",3]],["expression",4]],[[["paramdecl",3]],["pattern",4]],[[["astnodeortoken",4]],["option",4,[["formatstringcomponent",4]]]],[[["rc",3,[["syntaxtree",3]]],["nodeid",3]],["astnode",3]],[[["astnodeortoken",4]],["option",4,[["astnode",3]]]],[[["astnode",3]],["iterator",8]],[[["update",3]],["assignoperator",3]],[[["postfixop",3]],["postfixoperator",4]],[[["prefixop",3]],["prefixoperator",3]],[[["controlflowoperation",3]],["controlflowoperator",3]],[[["infixop",3]],["option",4,[["infixoperator",3]]]],[[["function",3]],["paramlistdecl",3]],[[["functionpattern",3]],["functionpatternparams",3]],[[["assignment",3]],["pattern",4]],[[["update",3]],["pattern",4]],null,[[["functionpattern",3]],["option",4,[["pattern",4]]]],[[["function",3]],["option",4,[["pattern",4]]]],[[["paramdecl",3]],["pattern",4]],[[["infixop",3]],["option",4,[["expression",4]]]],[[["path",3]],["iterator",8]],[[["astnodeortoken",4]],["localspan",3]],[[["program",3]],["iterator",8]],[[["block",3]],["iterator",8]],[[["tuplepattern",3]],["iterator",8]],[[["astnodeinner",3]],["node",3]],null,null,[[["",0]],["astnodeortoken",4]],[[["program",3]],["astnodeortoken",4]],[[["attributelist",3]],["astnodeortoken",4]],[[["struct",3]],["astnodeortoken",4]],[[["structvars",3]],["astnodeortoken",4]],[[["structvar",3]],["astnodeortoken",4]],[[["function",3]],["astnodeortoken",4]],[[["paramlistdecl",3]],["astnodeortoken",4]],[[["paramdecl",3]],["astnodeortoken",4]],[[["module",3]],["astnodeortoken",4]],[[["import",3]],["astnodeortoken",4]],[[["block",3]],["astnodeortoken",4]],[[["statement",4]],["astnodeortoken",4]],[[["branch",3]],["astnodeortoken",4]],[[["branchelse",4]],["astnodeortoken",4]],[[["infloop",3]],["astnodeortoken",4]],[[["whileloop",3]],["astnodeortoken",4]],[[["assignment",3]],["astnodeortoken",4]],[[["update",3]],["astnodeortoken",4]],[[["pattern",4]],["astnodeortoken",4]],[[["tuplepattern",3]],["astnodeortoken",4]],[[["functionpattern",3]],["astnodeortoken",4]],[[["functionpatternparams",3]],["astnodeortoken",4]],[[["path",3]],["astnodeortoken",4]],[[["expression",4]],["astnodeortoken",4]],[[["infixop",3]],["astnodeortoken",4]],[[["postfixop",3]],["astnodeortoken",4]],[[["postfixoperator",4]],["astnodeortoken",4]],[[["prefixop",3]],["astnodeortoken",4]],[[["paramlist",3]],["astnodeortoken",4]],[[["value",4]],["astnodeortoken",4]],[[["structliteral",3]],["astnodeortoken",4]],[[["structliteralitem",3]],["astnodeortoken",4]],[[["controlflowoperation",3]],["astnodeortoken",4]],[[["parensvalue",3]],["astnodeortoken",4]],[[["tuple",3]],["astnodeortoken",4]],[[["formatstring",3]],["astnodeortoken",4]],[[["",0]]],[[["",0]],["token",3]],[[["assignmode",4]],["token",3]],[[["assignoperator",3]],["token",3]],[[["prefixoperator",3]],["token",3]],[[["controlflowoperator",3]],["token",3]],[[["int",3]],["token",3]],[[["ident",3]],["token",3]],[[["string",3]],["token",3]],[[["bool",4]],["token",3]],[[["infixoperator",3]],["token",3]],[[["astnodeortoken",4]],["option",4,[["token",3]]]],[[["astnode",3]],["iterator",8]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["structvar",3]],["path",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["assignment",3]],["expression",4]],[[["postfixop",3]],["expression",4]],[[["struct",3]],["option",4,[["structvars",3]]]],[[["structvars",3]],["iterator",8]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parseerrorkind",4]],["parseerrorkind",4]],[[["expecteditem",4]],["expecteditem",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["expecteditem",4],["expecteditem",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["parseerrorkind",4],["formatter",3]],["result",6]],[[["expecteditem",4],["formatter",3]],["result",6]],[[]],[[["tokenkind",4]],["expecteditem",4]],[[]],[[]],[[]],[[["expecteditem",4],["expecteditem",4]],["bool",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["tokenkind",4]],["tokenkind",4]],[[["token",3]],["token",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["tokenkind",4],["tokenkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["formatstringparser",3],["tokenkind",4]],["result",4,[["token",3]]]],[[["tokenkind",4],["formatter",3]],["result",6]],[[["token",3],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["formatstringparser",3],["token",3]]],[[]],[[]],[[]],null,[[["lexer",3]]],[[["parser",3],["localspan",3]],["formatstringparser",3]],[[["formatstringparser",3]],["token",3]],null,[[["formatstringparser",3]]],[[["formatstringparser",3]],["result",4,[["token",3]]]],[[["formatstringparser",3],["token",3]],["result",4,[["token",3],["token",3]]]],null,null,[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["nodeid",3]],["nodeid",3]],[[["nodechild",4]],["nodechild",4]],[[["nodekind",4]],["nodekind",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["nodeid",3],["nodeid",3]],["bool",0]],[[["node",3],["node",3]],["bool",0]],[[["nodechild",4],["nodechild",4]],["bool",0]],[[["nodekind",4],["nodekind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["nodedisplay",3],["formatter",3]],["result",6]],[[["nodeid",3],["formatter",3]],["result",6]],[[["node",3],["formatter",3]],["result",6]],[[["nodechild",4],["formatter",3]],["result",6]],[[["nodekind",4],["formatter",3]],["result",6]],[[["nodekind",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["nodeid",3]],["nodechild",4]],[[["token",3]],["nodechild",4]],[[]],null,[[]],[[]],[[]],[[]],[[]],null,[[["nodeid",3],["nodeid",3]],["bool",0]],[[["node",3],["node",3]],["bool",0]],[[["nodechild",4],["nodechild",4]],["bool",0]],null,null,[[["nodechild",4],["syntaxtree",3]],["localspan",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["formatter",3],["display",8],["usize",0]],["result",6]],[[["nodedisplay",3],["formatter",3],["display",8]],["result",6]],null,null,null,null,null,null,[[["parser",3]],["token",3]],null,null,[[["parser",3],["nodekind",4]],["usize",0]],[[["parser",3],["nodekind",4],["usize",0]],["usize",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["parser",3]],["token",3]],[[["recoveryoptions",3]],["recoveryoptions",3]],[[["expressionconfig",3]],["expressionconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["parser",3],["tokenkind",4]],["parseresult",6,[["token",3]]]],[[["parser",3]],["parseresult",6,[["token",3]]]],[[["parser",3],["fn",8]],["option",4,[["token",3]]]],null,[[["parser",3]]],null,[[["parser",3]]],null,[[["parser",3]],["token",3]],[[],["recoveryoptions",3]],[[],["expressionconfig",3]],[[["parser",3]]],[[["parser",3]]],[[["parser",3]]],[[["parser",3],["nodekind",4],["usize",0]]],[[["parser",3],["tokenkind",4]],["parseresult",6,[["token",3]]]],[[["parser",3],["formatter",3]],["result",6]],[[["recoveryoptions",3],["formatter",3]],["result",6]],[[["expressionconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[["parser",3],["into",8,[["nodechild",4]]]]],[[["parser",3],["usize",0],["nodekind",4],["box",3]]],[[]],[[]],[[]],[[["parser",3]],["bool",0]],[[["str",0]],["parser",3]],[[["parser",3],["usize",0]],["token",3]],[[["parser",3],["usize",0]],["token",3]],[[["str",0]],["syntaxtree",3]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3],["bool",0]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3],["fnmut",8]],["parseresult",6]],[[["parser",3],["fnmut",8],["usize",0],["usize",0]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3],["u8",0],["expressionconfig",3]],["parseresult",6]],[[["parser",3],["u8",0],["expressionconfig",3]],["parseresult",6]],[[["parser",3],["u8",0],["expressionconfig",3]],["parseresult",6,[["option",4,[["parseerrorkind",4]]]]]],[[["parser",3]]],[[["parser",3],["bool",0]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3],["expressionconfig",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3],["bool",0]],["parseresult",6]],[[["parser",3],["bool",0]],["parseresult",6]],[[["parser",3],["u8",0],["expressionconfig",3]],["parseresult",6]],[[["parser",3],["expressionconfig",3]],["parseresult",6]],[[["parser",3],["expressionconfig",3]],["parseresult",6,[["bool",0]]]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3],["bool",0]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3]],["parseresult",6]],[[["parser",3],["expressionconfig",3]],["parseresult",6,[["option",4,[["parseerrorkind",4]]]]]],[[["parser",3]],["parseresult",6]],[[["str",0],["fn",8]],["syntaxtree",3]],null,[[["parser",3],["usize",0]],["parseresult",6]],[[["parser",3],["usize",0],["recoveryoptions",3]],["parseresult",6]],[[["parser",3],["nodekind",4]]],[[["parser",3]]],null,null,[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["syntaxtree",3]]],[[["syntaxtree",3],["str",0]],["display",8]],[[],["syntaxtree",3]],null,[[["syntaxtree",3],["formatter",3]],["result",6]],[[]],[[["syntaxtree",3],["nodeid",3]],["node",3]],[[["syntaxtree",3],["nodeid",3]],["node",3]],[[["syntaxtree",3],["nodeid",3]]],[[["syntaxtree",3],["nodeid",3]]],[[["syntaxtree",3],["nodekind",4],["box",3]],["nodeid",3]],[[]],null,null,[[["syntaxtree",3],["str",0]],["box",3,[["str",0]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["syntaxtree",3],["string",3],["str",0],["nodeid",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tokenkind",4]],["option",4,[["assignoperator",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["token",3]],["token",3]],[[["tokenkind",4]],["tokenkind",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["tokenkind",4]],["option",4,[["controlflowoperator",4]]]],[[["token",3],["token",3]],["bool",0]],[[["tokenkind",4],["tokenkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["token",3],["formatter",3]],["result",6]],[[["token",3],["formatter",3]],["result",6]],[[["tokenkind",4],["formatter",3]],["result",6]],[[["tokenkind",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenkind",4]],["option",4,[["infixoperator",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["tokenkind",4]],["bool",0]],null,[[["lexer",3]]],[[["token",3],["token",3]],["bool",0]],[[["tokenkind",4]],["option",4,[["postfixoperator",4]]]],[[["postfixoperator",4]],["u8",0]],[[["prefixoperator",4]],["u8",0]],[[["infixoperator",4]],["u8",0]],[[["tokenkind",4]],["option",4,[["prefixoperator",4]]]],null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["token",3]],["result",4,[["token",3]]]],[[],["result",4]],[[["tokenkind",4]],["result",4,[["tokenkind",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"LocalSpan"],[3,"AstNode"],[3,"Program"],[3,"AttributeList"],[3,"Struct"],[3,"StructVars"],[3,"StructVar"],[3,"Function"],[3,"ParamListDecl"],[3,"ParamDecl"],[3,"Module"],[3,"Import"],[3,"Block"],[3,"Branch"],[3,"InfLoop"],[3,"WhileLoop"],[3,"Assignment"],[3,"Update"],[3,"AssignOperator"],[3,"TuplePattern"],[3,"FunctionPattern"],[3,"FunctionPatternParams"],[3,"Path"],[3,"InfixOp"],[3,"PostfixOp"],[3,"PrefixOp"],[3,"PrefixOperator"],[3,"ParamList"],[3,"StructLiteral"],[3,"StructLiteralItem"],[3,"ControlFlowOperation"],[3,"ControlFlowOperator"],[3,"ParensValue"],[3,"Tuple"],[3,"Int"],[3,"Ident"],[3,"String"],[3,"FormatString"],[3,"InfixOperator"],[4,"Statement"],[4,"BranchElse"],[4,"Value"],[4,"AssignMode"],[4,"FormatStringComponent"],[4,"Bool"],[4,"Pattern"],[4,"Expression"],[4,"AstNodeOrToken"],[4,"PostfixOperator"],[3,"AstNodeInner"],[3,"Ast"],[8,"AstItem"],[8,"AstToken"],[13,"Let"],[13,"Comptime"],[13,"Token"],[13,"Node"],[13,"True"],[13,"False"],[13,"Block"],[13,"Branch"],[13,"InfixOp"],[13,"PrefixOp"],[13,"PostfixOp"],[13,"Value"],[13,"EscapedChar"],[13,"Path"],[13,"StringInner"],[13,"Function"],[13,"Path"],[13,"Tuple"],[13,"ParamList"],[13,"StructLiteral"],[13,"Assignment"],[13,"Block"],[13,"Branch"],[13,"Expression"],[13,"Function"],[13,"Import"],[13,"InfLoop"],[13,"Module"],[13,"Update"],[13,"Struct"],[13,"WhileLoop"],[13,"Block"],[13,"Bool"],[13,"Branch"],[13,"ControlFlow"],[13,"FormatString"],[13,"Function"],[13,"Ident"],[13,"Int"],[13,"InfLoop"],[13,"ParenthesisValue"],[13,"String"],[13,"Tuple"],[13,"WhileLoop"],[4,"ExpectedItem"],[4,"ParseErrorKind"],[13,"TokenKind"],[13,"LeftOverInput"],[13,"UnexpectedComma"],[13,"UnexpectedFunctionIdent"],[13,"UnexpectedPath"],[13,"UnexpectedToken"],[4,"TokenKind"],[3,"FormatStringParser"],[3,"Token"],[3,"NodeId"],[4,"NodeKind"],[4,"NodeChild"],[3,"NodeDisplay"],[3,"Node"],[13,"Token"],[13,"Node"],[3,"Parser"],[3,"ExpressionConfig"],[3,"RecoveryOptions"],[3,"SyntaxTree"],[4,"InfixOperator"],[4,"AssignOperator"],[4,"TokenKind"],[4,"ControlFlowOperator"],[4,"PostfixOperator"],[4,"PrefixOperator"],[3,"Token"]]},\
"debris_std":{"doc":"The standard library implementation for the debris language","t":[5,5,5,5,5,5,5,5,5,5,5,5,14,5,5,5,14,5,5],"n":["bool_to_int","dbg","dyn_int","execute","execute_format_string","execute_string","export","export_impl","function_for","int_to_int","load","load_all","match_parameters","on_tick","print","register_primitives","register_primitives","static_bool_to_int","static_int_to_int"],"q":["debris_std","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Executes a string as a command and returns the result","Exports a function to a specific path","","","","Loads the standard library module","","","Registers a function to run on load","","Registers all primitive types","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[["objbool",3]],["objint",3]],[[["functioncontext",3]]],[[["functioncontext",3]],["langresult",6,[["objint",3]]]],[[["functioncontext",3]],["langresult",6,[["objint",3]]]],[[["functioncontext",3],["objformatstring",3]],["objint",3]],[[["functioncontext",3],["objstring",3]],["objint",3]],[[["functioncontext",3]],["langresult",6,[["objectref",3]]]],[[["functioncontext",3],["rc",3,[["str",0]]]],["objectref",3]],[[["str",0]],["objfunction",3]],[[["objint",3]],["objint",3]],[[["typecontext",3]],["objmodule",3]],[[["typecontext",3]],["hashmap",3,[["ident",4],["objectref",3]]]],null,[[["functioncontext",3],["objnativefunction",3]]],[[["functioncontext",3]]],[[["typecontext",3],["objmodule",3]]],null,[[["functioncontext",3],["objstaticbool",3]],["objint",3]],[[["functioncontext",3],["objstaticint",3]],["objint",3]]],"p":[]},\
"language_server":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
