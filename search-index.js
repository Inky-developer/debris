var searchIndex = JSON.parse('{\
"debris_backends":{"doc":"Backend implementations for the debris compiler","i":[[3,"DatapackBackend","debris_backends","The Datapack Backend implementation",null,null],[0,"common","","Defines common items that are specific to the latest…",null,null],[3,"FunctionIdent","debris_backends::common","A unique minecraft function identifier",null,null],[12,"namespace","","The namespace of this function, for example `debris`",0,null],[12,"path","","The path of this function, for example `foo/bar/baz`",0,null],[12,"is_collection","","Whether this function is a collection, marked by a `#`",0,null],[4,"MinecraftCommand","","Enumerates all minecraft commands that are used by any…",null,null],[13,"ScoreboardSet","","Sets the scoreboard value to a specific integer",1,null],[12,"player","debris_backends::common::MinecraftCommand","",2,null],[12,"scoreboard","","",2,null],[12,"value","","",2,null],[13,"ScoreboardSetEqual","debris_backends::common","Sets the scoreboard value to another scorboard value",1,null],[12,"player1","debris_backends::common::MinecraftCommand","",3,null],[12,"scoreboard1","","",3,null],[12,"player2","","",3,null],[12,"scoreboard2","","",3,null],[13,"ScoreboardSetFromResult","debris_backends::common","Sets the scoreboard value equal to the result of the other…",1,null],[12,"player","debris_backends::common::MinecraftCommand","",4,null],[12,"scoreboard","","",4,null],[12,"command","","",4,null],[13,"ScoreboardOperation","debris_backends::common","",1,null],[12,"player1","debris_backends::common::MinecraftCommand","",5,null],[12,"scoreboard1","","",5,null],[12,"player2","","",5,null],[12,"scoreboard2","","",5,null],[12,"operation","","",5,null],[13,"Function","debris_backends::common","Calls another function",1,null],[12,"function","debris_backends::common::MinecraftCommand","",6,null],[13,"ScoreboardAdd","debris_backends::common","",1,null],[12,"name","debris_backends::common::MinecraftCommand","",7,null],[12,"criterion","","",7,null],[12,"json_name","","",7,null],[13,"ScoreboardRemove","debris_backends::common","",1,null],[12,"name","debris_backends::common::MinecraftCommand","",8,null],[13,"RawCommand","debris_backends::common","",1,null],[12,"command","debris_backends::common::MinecraftCommand","",9,null],[4,"ObjectiveCriterion","debris_backends::common","Any objective criterion",null,null],[13,"Dummy","","Mostly used by debris",10,null],[13,"Other","","potentially generate an enum of all possibilities from…",10,null],[8,"Backend","debris_backends","A Backend for debris, which has to convert `LLIR` into a…",null,null],[10,"handle_llir","","Converts the llir into a directory",11,[[["llir",3]],["directory",3]]],[10,"new","","Creates a new backend",11,[[["config",3],["rc",3]]]],[11,"generate","","Simplifies the api of backends, so that the backend will…",11,[[["llir",3]],["directory",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","debris_backends::common","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"new","debris_backends","",12,[[["config",3],["rc",3]]]],[11,"handle_llir","","",12,[[["llir",3]],["directory",3]]],[11,"default","","",12,[[],["datapackbackend",3]]],[11,"fmt","debris_backends::common","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","debris_backends","",12,[[["formatter",3]],["result",6]]],[11,"fmt","debris_backends::common","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"FunctionIdent"],[4,"MinecraftCommand"],[13,"ScoreboardSet"],[13,"ScoreboardSetEqual"],[13,"ScoreboardSetFromResult"],[13,"ScoreboardOperation"],[13,"Function"],[13,"ScoreboardAdd"],[13,"ScoreboardRemove"],[13,"RawCommand"],[4,"ObjectiveCriterion"],[8,"Backend"],[3,"DatapackBackend"]]},\
"debris_common":{"doc":"Common items used by the compiler","i":[[3,"Code","debris_common","A code object contains the source code and optionally a…",null,null],[12,"source","","",0,null],[12,"path","","",0,null],[3,"LocalSpan","","A Span which specifies a unique span of characters in a…",null,null],[3,"Span","","A span which uniquely specifies a span of characters in…",null,null],[12,"local_span","","",1,null],[12,"code","","",1,null],[4,"Ident","","identifier for a value",null,null],[13,"Value","","",2,null],[13,"Special","","",2,null],[4,"SpecialIdent","","Every special identifier",null,null],[13,"Add","","",3,null],[13,"Sub","","",3,null],[13,"Mul","","",3,null],[13,"Div","","",3,null],[13,"Modu","","",3,null],[13,"UnaryMinus","","",3,null],[13,"And","","",3,null],[13,"Or","","",3,null],[13,"Not","","",3,null],[13,"CmpEq","","",3,null],[13,"CmpNe","","",3,null],[13,"CmpGt","","",3,null],[13,"CmpGe","","",3,null],[13,"CmpLt","","",3,null],[13,"CmpLe","","",3,null],[13,"Clone","","",3,null],[4,"Accessor","","An accessor. Currently a mess",null,null],[13,"Path","","A path like a.b.c",4,null],[13,"Internal","","An accessor that is generated and used internally, which…",4,null],[13,"Main","","a special accessor for the main resource of the current…",4,null],[4,"InputFile","","Marks any Input file. Will change or be deleted",null,null],[13,"Main","","The main file",5,null],[13,"Imported","","Any imported file",5,null],[11,"new","","Creates a new identifier",2,[[["asref",8]]]],[11,"new","","Creates a new `LocalSpan` from the starting character and…",6,[[]]],[11,"start","","Returns the start of this span",6,[[]]],[11,"end","","Returns the end of this span",6,[[]]],[11,"len","","Returns the length of this span",6,[[]]],[11,"is_empty","","Returns, whether this span is empty",6,[[]]],[11,"until","","Constructs a new span which ranges from the start of this…",6,[[["localspan",3]]]],[11,"as_tuple","","Returns a tuple of the format (start_index, end_index)",6,[[]]],[11,"as_str","","Slices `text` and returns the corresponding string slice",6,[[]]],[11,"line_start","","Returns the line number of the line where this span begins",1,[[]]],[6,"CodeRef","","A reference to a code object",null,null],[14,"accessor","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",2,[[["specialident",4]]]],[11,"from","","",2,[[]]],[11,"from","","",4,[[["ident",4]]]],[11,"clone","","",2,[[],["ident",4]]],[11,"clone","","",3,[[],["specialident",4]]],[11,"clone","","",4,[[],["accessor",4]]],[11,"clone","","",5,[[],["inputfile",4]]],[11,"clone","","",6,[[],["localspan",3]]],[11,"clone","","",1,[[],["span",3]]],[11,"eq","","",2,[[["ident",4]]]],[11,"ne","","",2,[[["ident",4]]]],[11,"eq","","",3,[[["specialident",4]]]],[11,"eq","","",4,[[["accessor",4]]]],[11,"ne","","",4,[[["accessor",4]]]],[11,"eq","","",5,[[["inputfile",4]]]],[11,"ne","","",5,[[["inputfile",4]]]],[11,"eq","","",0,[[["code",3]]]],[11,"ne","","",0,[[["code",3]]]],[11,"eq","","",6,[[["localspan",3]]]],[11,"ne","","",6,[[["localspan",3]]]],[11,"eq","","",1,[[["span",3]]]],[11,"ne","","",1,[[["span",3]]]],[11,"deref","","",1,[[]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",1,[[]]]],"p":[[3,"Code"],[3,"Span"],[4,"Ident"],[4,"SpecialIdent"],[4,"Accessor"],[4,"InputFile"],[3,"LocalSpan"]]},\
"debris_core":{"doc":"Core implementation of the debris compiler","i":[[3,"CompileContext","debris_core","The Compilation context stores various information about…",null,null],[12,"type_ctx","","Contains all types",0,null],[12,"config","","The current config which specifies how to compile",0,null],[3,"DatabaseStruct","","",null,null],[3,"InputsStorage","","Representative struct for the query group.",null,null],[3,"DebrisObject","","Objects are a central type for the compiler. Basically…",null,null],[12,"typ","","The type of the object",1,null],[12,"template","","The template (or super class)",1,null],[12,"payload","","The actual value",1,null],[3,"ObjectRef","","This struct is used to pass objects arround",null,null],[3,"Config","","Holds data about the user specified configuration",null,null],[12,"project_name","","",2,null],[12,"project_description","","",2,null],[12,"default_scoreboard_name","","",2,null],[12,"build_mode","","",2,null],[4,"BuildMode","","The build mode for this compilation",null,null],[13,"Debug","","Debug build: produces slower code, but contains various…",3,null],[13,"Release","","Release build: optimized the code, drops most safety checks",3,null],[0,"hir","","High-level intermediate representation",null,null],[3,"IdentifierPath","debris_core::hir","A list of [SpannedIdentifier]s, can be a dotted path",null,null],[12,"idents","","",4,null],[3,"SpannedIdentifier","","Identifies a variable or value based on its span",null,null],[12,"span","","",5,null],[3,"Hir","","A high level intermediate representation",null,null],[12,"main_function","","",6,null],[12,"code","","",6,null],[3,"ArithmeticParser","","The pest parser which can parse the grammar file",null,null],[3,"HirParserStorage","","Representative struct for the query group.",null,null],[3,"ParseQuery","","",null,null],[3,"HirParserGroupStorage__","","",null,null],[12,"parse","","",7,null],[4,"Rule","","",null,null],[13,"EOI","","",8,null],[13,"program","","",8,null],[13,"statement","","",8,null],[13,"assignment","","",8,null],[13,"expression","","",8,null],[13,"exp_prefix","","",8,null],[13,"prefix_value","","",8,null],[13,"exp_infix","","",8,null],[13,"exp_primary","","",8,null],[13,"exp_parens","","",8,null],[13,"value","","",8,null],[13,"function_call","","",8,null],[13,"parameter_list","","",8,null],[13,"execute","","",8,null],[13,"accessor","","",8,null],[13,"fixed","","",8,null],[13,"integer","","",8,null],[13,"ident","","",8,null],[13,"string","","",8,null],[13,"string_inner","","",8,null],[13,"char","","",8,null],[13,"prefix_minus","","",8,null],[13,"prefix_not","","",8,null],[13,"infix_times","","",8,null],[13,"infix_divide","","",8,null],[13,"infix_modulo","","",8,null],[13,"infix_plus","","",8,null],[13,"infix_minus","","",8,null],[13,"infix_and","","",8,null],[13,"infix_or","","",8,null],[13,"infix_comparison","","",8,null],[13,"compare_eq","","",8,null],[13,"compare_ne","","",8,null],[13,"compare_gt","","",8,null],[13,"compare_ge","","",8,null],[13,"compare_lt","","",8,null],[13,"compare_le","","",8,null],[13,"WHITESPACE","","",8,null],[13,"COMMENT","","",8,null],[5,"get_span","","",null,[[["span",3]],["localspan",3]]],[11,"from_code","","Creates a `Hir` from code",6,[[["rc",3],["code",3]],["result",6]]],[0,"hir_nodes","","",null,null],[3,"HirInfix","debris_core::hir::hir_nodes","Holds an infix operator combined with its span",null,null],[12,"span","","",9,null],[12,"operator","","",9,null],[3,"HirPrefix","","Holds a prefix operator combined with its span",null,null],[12,"span","","",10,null],[12,"operator","","",10,null],[3,"HirPropertyDeclaration","","Declaration of a property in a struct definition",null,null],[12,"span","","The span of the declaration",11,null],[12,"identifier","","The identifier inside of the struct",11,null],[12,"datatype","","The type of the property",11,null],[3,"HirFunctionCall","","Any function call, can be dotted",null,null],[12,"span","","",12,null],[12,"accessor","","",12,null],[12,"parameters","","",12,null],[3,"HirFunction","","A function, which contains other statements",null,null],[12,"span","","",13,null],[12,"statements","","The inner statements of the function",13,null],[12,"inner_objects","","All objects that were defined inside this function",13,null],[3,"HirStruct","","A struct definition",null,null],[12,"span","","",14,null],[12,"properties","","All declaraed properties of this struct",14,null],[12,"inner_objects","","Objects that were defined inside this struct, for example…",14,null],[4,"HirConstValue","","A constant literal, already parsed",null,null],[13,"Integer","","",15,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",16,null],[12,"value","","",16,null],[13,"Fixed","debris_core::hir::hir_nodes","",15,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",17,null],[12,"value","","",17,null],[13,"String","debris_core::hir::hir_nodes","",15,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",18,null],[12,"value","","",18,null],[4,"HirComparisonOperator","debris_core::hir::hir_nodes","Any supported comparison operator",null,null],[13,"Eq","","",19,null],[13,"Ne","","",19,null],[13,"Gt","","",19,null],[13,"Ge","","",19,null],[13,"Lt","","",19,null],[13,"Le","","",19,null],[4,"HirInfixOperator","","Any operator that can be used as an infix",null,null],[13,"Comparison","","Any comparison like <, >, <=, >=, ==, !=",20,null],[13,"And","","Logical and",20,null],[13,"Or","","Logical or",20,null],[13,"Plus","","Mathematical addition",20,null],[13,"Minus","","Mathematical substraction",20,null],[13,"Times","","Mathematical multiplication",20,null],[13,"Divide","","Mathematical division",20,null],[13,"Modulo","","Mathematical modulo",20,null],[4,"HirPrefixOperator","","Any prefix operator",null,null],[13,"Minus","","Mathematical minus",21,null],[13,"Not","","Logical negation",21,null],[4,"HirExpression","","Any expression",null,null],[13,"Variable","","A variable, for example `a`",22,null],[13,"Path","","A path to a variable, for example `for.bar.a`",22,null],[13,"Value","","A literal value, for example `2.0` or `\\\"Hello World\\\"`",22,null],[13,"UnaryOperation","","A unary operation, for example `-a`",22,null],[12,"operation","debris_core::hir::hir_nodes::HirExpression","",23,null],[12,"value","","",23,null],[13,"BinaryOperation","debris_core::hir::hir_nodes","A binary operation, for example `a + b`",22,null],[12,"operation","debris_core::hir::hir_nodes::HirExpression","",24,null],[12,"lhs","","",24,null],[12,"rhs","","",24,null],[13,"FunctionCall","debris_core::hir::hir_nodes","A function call, for example `foo()` or `path.to.foo()`",22,null],[13,"Execute","","An execute statement which compiles to its argument, for…",22,null],[4,"HirStatement","","Any statement, the difference to an expression is that a…",null,null],[13,"VariableDecl","","A variable declaration, for example `let foo = 1`",25,null],[12,"span","debris_core::hir::hir_nodes::HirStatement","",26,null],[12,"ident","","",26,null],[12,"value","","",26,null],[13,"FunctionCall","debris_core::hir::hir_nodes","A function call, which can be both an expression and…",25,null],[4,"HirObject","","Any Object",null,null],[13,"Function","","",27,null],[13,"Struct","","",27,null],[11,"span","","",15,[[],["localspan",3]]],[11,"get_raw_special_ident","","Returns the associated [SpecialIdent]",19,[[],["specialident",4]]],[11,"get_special_ident","","Returns the associated [SpecialIdent]",20,[[],["specialident",4]]],[11,"get_ident","","Returns the associated [Ident]",21,[[],["ident",4]]],[11,"span","","",22,[[],["localspan",3]]],[11,"new","debris_core::hir","Creates a new `SpannedIdentifier` from the [LocalSpan]",5,[[["localspan",3]]]],[11,"new","","Creates a new IdentifierPath from the vec of identifiers",4,[[["vec",3],["spannedidentifier",3]]]],[11,"span","","",4,[[],["localspan",3]]],[8,"HirParser","","",null,null],[10,"parse","","",28,[[["inputfile",4]],[["rc",3],["result",6]]]],[11,"in_db","","Get access to extra methods pertaining to this query. For…",29,[[["hirparser",8]],["querytable",3]]],[11,"in_db_mut","","Like `in_db`, but gives access to methods for setting the…",29,[[["hirparser",8]],["querytablemut",3]]],[11,"new","","",7,[[]]],[11,"fmt_index","","",7,[[["hirparser",8],["databasekeyindex",3],["formatter",3]],["result",6]]],[11,"maybe_changed_since","","",7,[[["hirparser",8],["revision",3],["databasekeyindex",3]]]],[11,"for_each_query","","",7,[[["runtime",3],["fnmut",8]]]],[0,"llir","debris_core","Low-level intermediate representation",null,null],[3,"LLIR","debris_core::llir","The low-level intermediate representation struct",null,null],[12,"functions","","The functions which were created",30,null],[12,"config","","The compilation config",30,null],[3,"LLIRParserStorage","","Representative struct for the query group.",null,null],[3,"ParseMirQuery","","",null,null],[3,"LLIRParserGroupStorage__","","",null,null],[12,"parse_mir","","",31,null],[11,"from_mir","","Compiles the mir into a llir",30,[[["config",3],["mir",3],["rc",3]],[["llir",3],["result",6]]]],[0,"llir_nodes","","",null,null],[3,"Function","debris_core::llir::llir_nodes","A function nodes, contains other nodes",null,null],[12,"id","","The id of this specifc function",32,null],[12,"nodes","","The nodes which this function contains",32,null],[3,"FastStore","","Stores a \'fast\' variable",null,null],[12,"scoreboard","","The scoreboard of the target var",33,null],[12,"id","","The id of the target var",33,null],[12,"value","","The value to store into the target var",33,null],[3,"FastStoreFromResult","","Stores a \'fast\' variable from the result of another node",null,null],[12,"scoreboard","","The scoreboard of the target var",34,null],[12,"id","","The id of the target vat",34,null],[12,"command","","The command to use",34,null],[3,"BinaryOperation","","Operates on two scoreboard values and stores the result…",null,null],[12,"scoreboard","","The scoreboard of the resulting value",35,null],[12,"id","","The id of the resulting value",35,null],[12,"lhs","","The left value",35,null],[12,"rhs","","The right value",35,null],[12,"operation","","The kind of operation",35,null],[3,"Call","","Calls a function",null,null],[12,"id","","The id of that function",36,null],[3,"Branch","","Branches based on a condition",null,null],[12,"conditions","","The condition to test",37,null],[12,"pos_branch","","The node to execute if that condition is true",37,null],[12,"neg_branch","","The node to execute if that condition is false",37,null],[3,"Execute","","Executes a literal string",null,null],[12,"command","","The command to execute",38,null],[4,"Condition","","Evaluates a condition and returns either true or false",null,null],[4,"Node","","Any node",null,null],[13,"Function","","",39,null],[13,"FastStore","","",39,null],[13,"FastStoreFromResult","","",39,null],[13,"BinaryOperation","","",39,null],[13,"Call","","",39,null],[13,"Branch","","",39,null],[13,"Execute","","",39,null],[0,"utils","debris_core::llir","",null,null],[3,"ItemId","debris_core::llir::utils","A unique identifier for a scoreboard item",null,null],[12,"id","","",40,null],[12,"context_id","","",40,null],[4,"Scoreboard","","Identifies a specific scoreboard",null,null],[13,"Main","","The Main scoreboard, where all operations are per default",41,null],[13,"Custom","","Custom scoreboards, each with a unique identifier",41,null],[4,"ScoreboardValue","","A Value that can be stored on a scoreboard",null,null],[13,"Static","","",42,null],[13,"Scoreboard","","",42,null],[4,"ScoreboardOperation","","Any operation that can be executed on a scoreboard",null,null],[13,"Plus","","",43,null],[13,"Minus","","",43,null],[13,"Times","","",43,null],[13,"Divide","","",43,null],[13,"Modulo","","",43,null],[13,"Copy","","Copy the second value onto the first value",43,null],[13,"Min","","Set the first value to min(first, last)",43,null],[13,"Max","","Set the second value to max(first, last)",43,null],[8,"LLIRParser","debris_core::llir","",null,null],[10,"parse_mir","","",44,[[["inputfile",4]],[["rc",3],["result",6]]]],[11,"in_db","","Get access to extra methods pertaining to this query. For…",45,[[["llirparser",8]],["querytable",3]]],[11,"in_db_mut","","Like `in_db`, but gives access to methods for setting the…",45,[[["llirparser",8]],["querytablemut",3]]],[11,"new","","",31,[[]]],[11,"fmt_index","","",31,[[["llirparser",8],["databasekeyindex",3],["formatter",3]],["result",6]]],[11,"maybe_changed_since","","",31,[[["revision",3],["llirparser",8],["databasekeyindex",3]]]],[11,"for_each_query","","",31,[[["runtime",3],["fnmut",8]]]],[0,"mir","debris_core","Mid-level intermediate representation",null,null],[3,"ItemIdentifier","debris_core::mir","Identifies a unique template",null,null],[12,"context_id","","",46,null],[12,"item_id","","",46,null],[3,"MirContext","","Keeps track of all important data during mir compilation",null,null],[12,"code","","The source code which contains this context",47,null],[12,"compile_context","","A ref to the global compile context",47,null],[12,"id","","The context id",47,null],[12,"nodes","","All mir nodes that are emitted",47,null],[12,"values","","All variables found as either object or template",47,null],[3,"Mir","","A Mid-level intermediate representation",null,null],[12,"contexts","","All contexts",48,null],[3,"MirParserStorage","","Representative struct for the query group.",null,null],[3,"ParseHirGlobalQuery","","",null,null],[3,"ParseHirQuery","","",null,null],[3,"MirParserGroupStorage__","","",null,null],[12,"parse_hir_global","","",49,null],[12,"parse_hir","","",49,null],[4,"MirNode","","Any node that can be part of the mir representation",null,null],[13,"Call","","A function call",50,null],[12,"span","debris_core::mir::MirNode","",51,null],[12,"value","","",51,null],[12,"parameters","","",51,null],[12,"return_value","","",51,null],[13,"RawCommand","debris_core::mir","A raw command which will be evaluated into a string",50,null],[12,"value","debris_core::mir::MirNode","",52,null],[12,"var_id","","",52,null],[4,"MirValue","debris_core::mir","Any value that is used in the mir compilation and also in…",null,null],[13,"Concrete","","A concrete object",53,null],[13,"Template","","A template which marks a future object",53,null],[12,"id","debris_core::mir::MirValue","",54,null],[12,"template","","",54,null],[11,"new","debris_core::mir","Creates a new item identifier",46,[[]]],[11,"get_property","","Gets a property from the value",53,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"typ","","The type of this value",53,[[],["type",4]]],[11,"new","","Creates a new context",47,[[["compilecontext",3],["rc",3],["coderef",6]]]],[11,"register","","Loads the contents of this `module` into the scope",47,[[["objectmodule",3]]]],[11,"is_module_loaded","","Returns whether a module is loaded",47,[[["objectmodule",3]]]],[11,"next_id","","Returns the id for the next object",47,[[]]],[11,"add_value","","Adds a value that corresponds to `ident`",47,[[["mirvalue",4],["ident",4],["localspan",3]],["result",6]]],[11,"add_anonymous_object","","Adds an anonymous object and returns a ref MirValue",47,[[["objectref",3]],["mirvalue",4]]],[11,"add_anonymous_template","","Adds an anonymous value that is usually used temporarily",47,[[["typeref",6]],["mirvalue",4]]],[11,"add_anonymous_template_with_type","","",47,[[["type",4]],["mirvalue",4]]],[11,"get_from_spanned_ident","","Looks up the value that corresponds to this ident",47,[[["spannedidentifier",3]],[["result",6],["mirvalue",4]]]],[11,"get_span_str","","Returns the string the corresponds to that `span`",47,[[["localspan",3]]]],[11,"as_span","","Converts a `LocalSpan` to a `Span` which has access to the…",47,[[["localspan",3]],["span",3]]],[11,"get_ident","","Returns an ident from a span",47,[[["spannedidentifier",3]],["ident",4]]],[11,"resolve_path","","Resolves the accessor and returns the accessed element",47,[[["identifierpath",3]],[["mirvalue",4],["result",6]]]],[11,"from_hir","","Converts the hir into a mir",48,[[["compilecontext",3],["hir",3],["rc",3]],[["result",6],["mir",3]]]],[8,"MirParser","","",null,null],[10,"parse_hir_global","","Converts the hir into mir and imports the global extern…",55,[[["inputfile",4]],[["result",6],["rc",3]]]],[10,"parse_hir","","Converts the hir into mir without importing the global…",55,[[["inputfile",4]],[["result",6],["rc",3]]]],[11,"in_db","","Get access to extra methods pertaining to this query. For…",56,[[["mirparser",8]],["querytable",3]]],[11,"in_db_mut","","Like `in_db`, but gives access to methods for setting the…",56,[[["mirparser",8]],["querytablemut",3]]],[11,"in_db","","Get access to extra methods pertaining to this query. For…",57,[[["mirparser",8]],["querytable",3]]],[11,"in_db_mut","","Like `in_db`, but gives access to methods for setting the…",57,[[["mirparser",8]],["querytablemut",3]]],[11,"new","","",49,[[]]],[11,"fmt_index","","",49,[[["formatter",3],["mirparser",8],["databasekeyindex",3]],["result",6]]],[11,"maybe_changed_since","","",49,[[["revision",3],["mirparser",8],["databasekeyindex",3]]]],[11,"for_each_query","","",49,[[["runtime",3],["fnmut",8]]]],[11,"new_ref","debris_core","Creates a new Object and returns a reference to it",1,[[["typeref",6],["objectpayload",8]],["objectref",3]]],[11,"get_property","","Tries to get a property that belongs to this object",1,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"downcast_payload","","Converts the payload into its original type",1,[[],["option",4]]],[11,"is_instance","","Returns whether the payload is of type `T`",1,[[]]],[0,"objects","","Contains all objects which can be used in a debris program.",null,null],[3,"CallbackFunction","debris_core::objects","Wrapper, so traits like `Eq` can be implemented",null,null],[12,"0","","",58,null],[3,"FunctionContext","","The context which gets passed to a function",null,null],[12,"compile_context","","",59,null],[12,"nodes","","A vec of emitted nodes",59,null],[12,"item_id","","The id for the returned value",59,null],[3,"FunctionSignature","","A signature describing a single overload of a function",null,null],[3,"FunctionSignatureMap","","A collection of overloads for the same function",null,null],[3,"ObjectFunction","","A function object",null,null],[12,"signatures","","",60,null],[3,"StaticInt","","A static integer object",null,null],[12,"value","","",61,null],[3,"DynInt","","A dynamic Integer",null,null],[12,"id","","The id of the item",62,null],[3,"ModuleFactory","","A wrapper function for functions that return modules",null,null],[3,"ObjectModule","","A module object",null,null],[3,"ObjectString","","A static string object",null,null],[3,"ObjectType","","The type of an object",null,null],[11,"new","","",60,[[["into",8],["functionsignaturemap",3]]]],[11,"without_overload","","Creates a function without overload",60,[[["vec",3],["type",4],["callbackfunction",3]]]],[11,"template","","",60,[[],["typeref",6]]],[11,"init_template","","",60,[[["typeref",6],["compilecontext",3]]]],[11,"call","","",58,[[["vec",3],["itemid",3],["objectref",3],["compilecontext",3],["span",3]],["result",6]]],[11,"new","","",63,[[["vec",3]]]],[11,"function_for_args","","Finds the function that matches all of the args",63,[[],["option",4]]],[11,"new","","",64,[[["vec",3],["type",4]]]],[11,"matches","","Returns whether the args iterator matches all of the…",64,[[]]],[11,"parameters","","",64,[[]]],[11,"return_type","","",64,[[],["type",4]]],[11,"emit","","Adds a node to the previously emitted nodes",59,[[["node",4]]]],[11,"new","","Creates a new static integers with this value",61,[[["into",8]]]],[11,"as_scoreboard_value","","Returns a `ScoreboardValue` which matches this int",61,[[],["scoreboardvalue",4]]],[11,"template","","",61,[[],["typeref",6]]],[11,"init_template","","",61,[[["typeref",6],["compilecontext",3]]]],[11,"new","","Creates a new dynamic integer with this id",62,[[["itemid",3]]]],[11,"as_scoreboard_value","","Returns a `ScoreboardValue` which identifies a specific…",62,[[],["scoreboardvalue",4]]],[11,"template","","",62,[[],["typeref",6]]],[11,"init_template","","",62,[[["typeref",6],["compilecontext",3]]]],[11,"new","","Creates a new empty module with this name",65,[[["into",8],["ident",4]]]],[11,"template","","",65,[[],["typeref",6]]],[11,"ident","","Returns the ident of this module",65,[[],["ident",4]]],[11,"set_property","","Sets a property",65,[[["objectref",3],["into",8],["ident",4]],[["option",4],["objectref",3]]]],[11,"register","","Registers a value for the first time",65,[[["objectref",3],["into",8],["ident",4]]]],[11,"init_template","","",65,[[["typeref",6],["compilecontext",3]]]],[11,"call","","",66,[[["compilecontext",3]],["objectmodule",3]]],[11,"template","","",67,[[],["typeref",6]]],[11,"init_template","","",67,[[["typeref",6],["compilecontext",3]]]],[11,"get_property","","Returns a property",68,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"set_property","","Sets a property",68,[[["objectref",3],["ident",4]]]],[11,"new_ref","","Creates a new reference to a ObjectType",68,[[["type",4],["option",4],["objectproperties",6],["typeref",6]],["typeref",6]]],[11,"template","","",68,[[],["typeref",6]]],[11,"value_typ","","",68,[[],["type",4]]],[11,"init_template","","",68,[[["typeref",6],["compilecontext",3]]]],[6,"TypeRef","","",null,null],[11,"is_release","debris_core","Whether the current build mode is release",3,[[]]],[11,"is_debug","","Whether the current build mode is debug",3,[[]]],[0,"error","","Compilation error handling",null,null],[3,"ParseError","debris_core::error","Thrown when parsing bad input",null,null],[12,"span","","The span where this error occured",69,null],[12,"expected","","Symbols which were expected instead",69,null],[3,"LangError","","A generic error which gets thrown when compiling",null,null],[4,"CompileError","","A Compile Error",null,null],[13,"ParseError","","An error which happens when parsing the input",70,null],[13,"LangError","","An error which happens when compiling the input",70,null],[4,"LangErrorKind","","Specifies a specific error reason",null,null],[13,"VariableAlreadyDefined","","",71,null],[12,"name","debris_core::error::LangErrorKind","",72,null],[12,"previous_definition","","",72,null],[13,"UnexpectedType","debris_core::error","",71,null],[12,"expected","debris_core::error::LangErrorKind","",73,null],[12,"got","","",73,null],[13,"UnexpectedOverload","debris_core::error","",71,null],[12,"parameters","debris_core::error::LangErrorKind","",74,null],[13,"MissingVariable","debris_core::error","",71,null],[12,"var_name","debris_core::error::LangErrorKind","",75,null],[12,"similar","","",75,null],[13,"MissingProperty","debris_core::error","",71,null],[12,"property","debris_core::error::LangErrorKind","",76,null],[12,"parent","","",76,null],[12,"similar","","",76,null],[13,"UnexpectedOperator","debris_core::error","",71,null],[12,"operator","debris_core::error::LangErrorKind","",77,null],[12,"lhs","","",77,null],[12,"rhs","","",77,null],[13,"NotYetImplemented","debris_core::error","",71,null],[12,"msg","debris_core::error::LangErrorKind","",78,null],[6,"Result","debris_core::error","The result type used by most of the core functions",null,null],[6,"LangResult","","A result type which allows quick error throwing since no…",null,null],[11,"with_display_list","","Creates a display list which can be printed",70,[[["fnonce",8]]]],[11,"with_display_list","","",69,[[["fnonce",8]]]],[11,"new","","",79,[[["langerrorkind",4],["span",3]]]],[11,"with_display_list","","",79,[[["fnonce",8]]]],[11,"annotations","","",71,[[["span",3]],[["sourceannotation",3],["vec",3]]]],[6,"ObjectProperties","debris_core","",null,null],[8,"Inputs","","",null,null],[10,"input_file","","",80,[[["inputfile",4]],["string",3]]],[10,"set_input_file","","Set the value of the `input_file` input.",80,[[["inputfile",4],["string",3]]]],[10,"set_input_file_with_durability","","Set the value of the `input_file` input and promise that…",80,[[["inputfile",4],["string",3],["durability",3]]]],[10,"extern_modules","","",80,[[],["rc",3]]],[10,"set_extern_modules","","Set the value of the `extern_modules` input.",80,[[["rc",3]]]],[10,"set_extern_modules_with_durability","","Set the value of the `extern_modules` input and promise…",80,[[["rc",3],["durability",3]]]],[10,"compile_context","","",80,[[],[["compilecontext",3],["rc",3]]]],[10,"set_compile_context","","Set the value of the `compile_context` input.",80,[[["compilecontext",3],["rc",3]]]],[10,"set_compile_context_with_durability","","Set the value of the `compile_context` input and promise…",80,[[["compilecontext",3],["rc",3],["durability",3]]]],[10,"input_text","","",80,[[["inputfile",4]],["coderef",6]]],[10,"config","","",80,[[["inputfile",4]],[["config",3],["rc",3]]]],[8,"ObjectPayload","","A trait for values that can be used as debris object payload",null,null],[10,"typ","","The type of the value",81,[[],["type",4]]],[10,"into_object","","Converts this payload into an object. ToDo: Auto implement…",81,[[["compilecontext",3]],["objectref",3]]],[10,"eq","","Tests whether this object is equal to another object",81,[[["objectref",3]]]],[11,"get_property","","May be overwritten by distinct payloads which carry…",81,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"parse","","",82,[[["inputfile",4]],[["rc",3],["result",4]]]],[11,"parse_mir","","",82,[[["inputfile",4]],[["result",4],["rc",3]]]],[11,"parse_hir_global","","",82,[[["inputfile",4]],[["rc",3],["result",4]]]],[11,"parse_hir","","",82,[[["inputfile",4]],[["rc",3],["result",4]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"equivalent","","",84,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"equivalent","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[]]],[11,"from","debris_core::hir","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"from","debris_core::hir::hir_nodes","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"equivalent","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"from","debris_core::llir","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","debris_core::llir::llir_nodes","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"equivalent","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"equivalent","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"equivalent","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"equivalent","","",38,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"equivalent","","",88,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"equivalent","","",39,[[]]],[11,"from","debris_core::llir::utils","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"equivalent","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"equivalent","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"equivalent","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"equivalent","","",43,[[]]],[11,"from","debris_core::mir","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"equivalent","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"equivalent","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"equivalent","","",48,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"equivalent","","",50,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"equivalent","","",53,[[]]],[11,"from","debris_core::objects","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"equivalent","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"equivalent","","",64,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"equivalent","","",63,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"equivalent","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"equivalent","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"equivalent","","",62,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"equivalent","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"equivalent","","",68,[[]]],[11,"from","debris_core::error","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"equivalent","","",69,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"equivalent","","",79,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"equivalent","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"to_string","","",71,[[],["string",3]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"equivalent","","",71,[[]]],[11,"typ","debris_core::objects","",60,[[],["type",4]]],[11,"into_object","","",60,[[["compilecontext",3]],["objectref",3]]],[11,"eq","","",60,[[["objectref",3]]]],[11,"typ","","",61,[[],["type",4]]],[11,"into_object","","",61,[[["compilecontext",3]],["objectref",3]]],[11,"eq","","",61,[[["objectref",3]]]],[11,"typ","","",62,[[],["type",4]]],[11,"into_object","","",62,[[["compilecontext",3]],["objectref",3]]],[11,"eq","","",62,[[["objectref",3]]]],[11,"typ","","",65,[[],["type",4]]],[11,"into_object","","",65,[[["compilecontext",3]],["objectref",3]]],[11,"eq","","",65,[[["objectref",3]]]],[11,"get_property","","",65,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"typ","","",67,[[],["type",4]]],[11,"eq","","",67,[[["objectref",3]]]],[11,"into_object","","",67,[[["compilecontext",3]],["objectref",3]]],[11,"typ","","",68,[[],["type",4]]],[11,"into_object","","",68,[[["compilecontext",3]],["objectref",3]]],[11,"eq","","",68,[[["objectref",3]]]],[11,"from","debris_core::hir","",5,[[["localspan",3]]]],[11,"from","","",5,[[["span",3]]]],[11,"from","","",4,[[["spannedidentifier",3]]]],[11,"from","debris_core::mir","",53,[[["objectref",3]]]],[11,"from","debris_core","",84,[[["debrisobject",3]]]],[11,"from","debris_core::objects","",58,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",61,[[]]],[11,"from","","",62,[[["itemid",3]]]],[11,"from","","",66,[[]]],[11,"from","","",67,[[["string",3]]]],[11,"from","debris_core::error","",70,[[["parseerror",3]]]],[11,"from","","",70,[[["langerror",3]]]],[11,"clone","debris_core::hir","",8,[[],["rule",4]]],[11,"clone","debris_core::llir::utils","",41,[[],["scoreboard",4]]],[11,"clone","","",42,[[],["scoreboardvalue",4]]],[11,"clone","","",43,[[],["scoreboardoperation",4]]],[11,"clone","","",40,[[],["itemid",3]]],[11,"clone","debris_core::mir","",46,[[],["itemidentifier",3]]],[11,"clone","","",53,[[],["mirvalue",4]]],[11,"clone","debris_core","",84,[[],["objectref",3]]],[11,"clone","debris_core::error","",70,[[],["compileerror",4]]],[11,"clone","","",69,[[],["parseerror",3]]],[11,"clone","","",79,[[],["langerror",3]]],[11,"clone","","",71,[[],["langerrorkind",4]]],[11,"default","debris_core::hir","",29,[[],["parsequery",3]]],[11,"default","debris_core::llir","",45,[[],["parsemirquery",3]]],[11,"default","debris_core::mir","",56,[[],["parsehirglobalquery",3]]],[11,"default","","",57,[[],["parsehirquery",3]]],[11,"default","debris_core","",0,[[]]],[11,"default","","",82,[[],["databasestruct",3]]],[11,"default","","",2,[[]]],[11,"cmp","debris_core::hir","",8,[[["rule",4]],["ordering",4]]],[11,"eq","","",6,[[["hir",3]]]],[11,"ne","","",6,[[["hir",3]]]],[11,"eq","debris_core::hir::hir_nodes","",15,[[["hirconstvalue",4]]]],[11,"ne","","",15,[[["hirconstvalue",4]]]],[11,"eq","","",19,[[["hircomparisonoperator",4]]]],[11,"eq","","",20,[[["hirinfixoperator",4]]]],[11,"ne","","",20,[[["hirinfixoperator",4]]]],[11,"eq","","",9,[[["hirinfix",3]]]],[11,"ne","","",9,[[["hirinfix",3]]]],[11,"eq","","",21,[[["hirprefixoperator",4]]]],[11,"eq","","",10,[[["hirprefix",3]]]],[11,"ne","","",10,[[["hirprefix",3]]]],[11,"eq","","",11,[[["hirpropertydeclaration",3]]]],[11,"ne","","",11,[[["hirpropertydeclaration",3]]]],[11,"eq","","",12,[[["hirfunctioncall",3]]]],[11,"ne","","",12,[[["hirfunctioncall",3]]]],[11,"eq","","",22,[[["hirexpression",4]]]],[11,"ne","","",22,[[["hirexpression",4]]]],[11,"eq","","",25,[[["hirstatement",4]]]],[11,"ne","","",25,[[["hirstatement",4]]]],[11,"eq","","",13,[[["hirfunction",3]]]],[11,"ne","","",13,[[["hirfunction",3]]]],[11,"eq","","",14,[[["hirstruct",3]]]],[11,"ne","","",14,[[["hirstruct",3]]]],[11,"eq","","",27,[[["hirobject",4]]]],[11,"ne","","",27,[[["hirobject",4]]]],[11,"eq","debris_core::hir","",5,[[["spannedidentifier",3]]]],[11,"ne","","",5,[[["spannedidentifier",3]]]],[11,"eq","","",4,[[["identifierpath",3]]]],[11,"ne","","",4,[[["identifierpath",3]]]],[11,"eq","","",8,[[["rule",4]]]],[11,"eq","debris_core::llir","",30,[[["llir",3]]]],[11,"ne","","",30,[[["llir",3]]]],[11,"eq","debris_core::llir::llir_nodes","",32,[[["function",3]]]],[11,"ne","","",32,[[["function",3]]]],[11,"eq","","",33,[[["faststore",3]]]],[11,"ne","","",33,[[["faststore",3]]]],[11,"eq","","",34,[[["faststorefromresult",3]]]],[11,"ne","","",34,[[["faststorefromresult",3]]]],[11,"eq","","",35,[[["binaryoperation",3]]]],[11,"ne","","",35,[[["binaryoperation",3]]]],[11,"eq","","",36,[[["call",3]]]],[11,"ne","","",36,[[["call",3]]]],[11,"eq","","",88,[[["condition",4]]]],[11,"eq","","",37,[[["branch",3]]]],[11,"ne","","",37,[[["branch",3]]]],[11,"eq","","",38,[[["execute",3]]]],[11,"ne","","",38,[[["execute",3]]]],[11,"eq","","",39,[[["node",4]]]],[11,"ne","","",39,[[["node",4]]]],[11,"eq","debris_core::llir::utils","",41,[[["scoreboard",4]]]],[11,"ne","","",41,[[["scoreboard",4]]]],[11,"eq","","",42,[[["scoreboardvalue",4]]]],[11,"ne","","",42,[[["scoreboardvalue",4]]]],[11,"eq","","",43,[[["scoreboardoperation",4]]]],[11,"eq","","",40,[[["itemid",3]]]],[11,"ne","","",40,[[["itemid",3]]]],[11,"eq","debris_core::mir","",46,[[["itemidentifier",3]]]],[11,"ne","","",46,[[["itemidentifier",3]]]],[11,"eq","","",53,[[["mirvalue",4]]]],[11,"ne","","",53,[[["mirvalue",4]]]],[11,"eq","","",50,[[["mirnode",4]]]],[11,"ne","","",50,[[["mirnode",4]]]],[11,"eq","","",47,[[["mircontext",3]]]],[11,"ne","","",47,[[["mircontext",3]]]],[11,"eq","","",48,[[["mir",3]]]],[11,"ne","","",48,[[["mir",3]]]],[11,"eq","debris_core","",0,[[["compilecontext",3]]]],[11,"ne","","",0,[[["compilecontext",3]]]],[11,"eq","","",84,[[["objectref",3]]]],[11,"eq","debris_core::objects","",60,[[["objectfunction",3]]]],[11,"ne","","",60,[[["objectfunction",3]]]],[11,"eq","","",63,[[["functionsignaturemap",3]]]],[11,"ne","","",63,[[["functionsignaturemap",3]]]],[11,"eq","","",64,[[["functionsignature",3]]]],[11,"ne","","",64,[[["functionsignature",3]]]],[11,"eq","","",58,[[["callbackfunction",3]]]],[11,"eq","","",61,[[["staticint",3]]]],[11,"ne","","",61,[[["staticint",3]]]],[11,"eq","","",62,[[["dynint",3]]]],[11,"ne","","",62,[[["dynint",3]]]],[11,"eq","","",67,[[["objectstring",3]]]],[11,"ne","","",67,[[["objectstring",3]]]],[11,"eq","","",68,[[["objecttype",3]]]],[11,"ne","","",68,[[["objecttype",3]]]],[11,"eq","debris_core","",3,[[["buildmode",4]]]],[11,"eq","","",2,[[["config",3]]]],[11,"ne","","",2,[[["config",3]]]],[11,"eq","debris_core::error","",70,[[["compileerror",4]]]],[11,"ne","","",70,[[["compileerror",4]]]],[11,"eq","","",69,[[["parseerror",3]]]],[11,"ne","","",69,[[["parseerror",3]]]],[11,"eq","","",79,[[["langerror",3]]]],[11,"ne","","",79,[[["langerror",3]]]],[11,"eq","","",71,[[["langerrorkind",4]]]],[11,"ne","","",71,[[["langerrorkind",4]]]],[11,"partial_cmp","debris_core::hir","",8,[[["rule",4]],[["option",4],["ordering",4]]]],[11,"deref","debris_core","",84,[[]]],[11,"deref","debris_core::objects","",67,[[]]],[11,"fmt","debris_core::hir","",6,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::hir::hir_nodes","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::hir","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir","",30,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir::llir_nodes","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir::utils","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir","",45,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::mir","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::error","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects","",64,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::error","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"hash","debris_core::hir","",6,[[]]],[11,"hash","debris_core::hir::hir_nodes","",15,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",27,[[]]],[11,"hash","debris_core::hir","",5,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",8,[[]]],[11,"hash","debris_core::llir::utils","",41,[[]]],[11,"hash","","",40,[[]]],[11,"source","debris_core::error","",70,[[],[["error",8],["option",4]]]],[11,"parse","debris_core::hir","",85,[[["rule",4]],[["pairs",3],["error",3],["result",4]]]],[11,"ops_database","debris_core","",82,[[],["database",8]]],[11,"ops_salsa_runtime","","",82,[[],["runtime",3]]],[11,"ops_salsa_runtime_mut","","",82,[[],["runtime",3]]],[11,"fmt_index","","",82,[[["databasekeyindex",3],["formatter",3]],["result",6]]],[11,"maybe_changed_since","","",82,[[["revision",3],["databasekeyindex",3]]]],[11,"for_each_query","","",82,[[["fnmut",8]]]],[11,"execute","debris_core::hir","",29,[[]]],[11,"execute","debris_core::llir","",45,[[]]],[11,"execute","debris_core::mir","",56,[[]]],[11,"execute","","",57,[[]]],[11,"query_storage","debris_core::hir","",29,[[],["arc",3]]],[11,"query_storage","debris_core::llir","",45,[[],["arc",3]]],[11,"query_storage","debris_core::mir","",56,[[],["arc",3]]],[11,"query_storage","","",57,[[],["arc",3]]],[11,"group_storage","debris_core","",82,[[]]],[11,"group_storage","","",82,[[]]],[11,"group_storage","","",82,[[]]],[11,"group_storage","","",82,[[]]],[11,"get_property","","May be overwritten by distinct payloads which carry…",81,[[["ident",4]],[["option",4],["objectref",3]]]]],"p":[[3,"CompileContext"],[3,"DebrisObject"],[3,"Config"],[4,"BuildMode"],[3,"IdentifierPath"],[3,"SpannedIdentifier"],[3,"Hir"],[3,"HirParserGroupStorage__"],[4,"Rule"],[3,"HirInfix"],[3,"HirPrefix"],[3,"HirPropertyDeclaration"],[3,"HirFunctionCall"],[3,"HirFunction"],[3,"HirStruct"],[4,"HirConstValue"],[13,"Integer"],[13,"Fixed"],[13,"String"],[4,"HirComparisonOperator"],[4,"HirInfixOperator"],[4,"HirPrefixOperator"],[4,"HirExpression"],[13,"UnaryOperation"],[13,"BinaryOperation"],[4,"HirStatement"],[13,"VariableDecl"],[4,"HirObject"],[8,"HirParser"],[3,"ParseQuery"],[3,"LLIR"],[3,"LLIRParserGroupStorage__"],[3,"Function"],[3,"FastStore"],[3,"FastStoreFromResult"],[3,"BinaryOperation"],[3,"Call"],[3,"Branch"],[3,"Execute"],[4,"Node"],[3,"ItemId"],[4,"Scoreboard"],[4,"ScoreboardValue"],[4,"ScoreboardOperation"],[8,"LLIRParser"],[3,"ParseMirQuery"],[3,"ItemIdentifier"],[3,"MirContext"],[3,"Mir"],[3,"MirParserGroupStorage__"],[4,"MirNode"],[13,"Call"],[13,"RawCommand"],[4,"MirValue"],[13,"Template"],[8,"MirParser"],[3,"ParseHirGlobalQuery"],[3,"ParseHirQuery"],[3,"CallbackFunction"],[3,"FunctionContext"],[3,"ObjectFunction"],[3,"StaticInt"],[3,"DynInt"],[3,"FunctionSignatureMap"],[3,"FunctionSignature"],[3,"ObjectModule"],[3,"ModuleFactory"],[3,"ObjectString"],[3,"ObjectType"],[3,"ParseError"],[4,"CompileError"],[4,"LangErrorKind"],[13,"VariableAlreadyDefined"],[13,"UnexpectedType"],[13,"UnexpectedOverload"],[13,"MissingVariable"],[13,"MissingProperty"],[13,"UnexpectedOperator"],[13,"NotYetImplemented"],[3,"LangError"],[8,"Inputs"],[8,"ObjectPayload"],[3,"DatabaseStruct"],[3,"InputsStorage"],[3,"ObjectRef"],[3,"ArithmeticParser"],[3,"HirParserStorage"],[3,"LLIRParserStorage"],[4,"Condition"],[3,"MirParserStorage"]]},\
"debris_derive":{"doc":"","i":[[23,"template","debris_derive","Used to simplify the declaration for attributes of debris…",null,null]],"p":[]},\
"debris_lang":{"doc":"The Debris compiler.","i":[[5,"get_extern_modules","debris_lang","Loads the extern modules (for now only std)",null,[[]]],[5,"debug_run","","Compiles the file `test.txt` into llir",null,[[],[["result",6],["rc",3]]]],[5,"main","","",null,[[]]]],"p":[]},\
"debris_std":{"doc":"The standard library implementation for the debris language","i":[[5,"load","debris_std","Loads the standard library module",null,[[["compilecontext",3]],["objectmodule",3]]]],"p":[]},\
"debris_type":{"doc":"Types used by `debris_core`","i":[[4,"Type","debris_type","A type. Any debris value has a specific, compile-time…",null,null],[13,"Bool","","",0,null],[13,"Fixed","","",0,null],[13,"Function","","",0,null],[13,"StaticInt","","",0,null],[13,"DynamicInt","","",0,null],[13,"Module","","",0,null],[13,"String","","",0,null],[13,"Type","","",0,null],[13,"Template","","The template for a type, basically the parent class",0,null],[11,"matches","","Returns whether the other type can match on this one…",0,[[["type",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["type",4]]],[11,"eq","","",0,[[["type",4]]]],[11,"ne","","",0,[[["type",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]]],"p":[[4,"Type"]]},\
"vfs":{"doc":"Virstual in-memory file system. might switch to a more…","i":[[3,"File","vfs","",null,null],[3,"Directory","","",null,null],[4,"FsElement","","",null,null],[13,"File","","",0,null],[13,"Directoy","","",0,null],[11,"persist","","",0,[[["path",3]],["result",6]]],[11,"new","","",1,[[]]],[11,"with_data","","",1,[[]]],[11,"push_string","","",1,[[]]],[11,"persist","","",1,[[["path",3]],["result",6]]],[11,"new","","",2,[[]]],[11,"with_contents","","",2,[[["string",3],["file",3],["directory",3],["hashmap",3],["hashmap",3]]]],[11,"file","","returns a new file with this name or returns an existing…",2,[[["string",3]],["file",3]]],[11,"dir","","Returns a new directory with this name or returns an…",2,[[["string",3]],["directory",3]]],[11,"resolve_path","","",2,[[],[["fselement",4],["result",4]]]],[11,"persist","","",2,[[["path",3]],["result",6]]],[14,"directories","","Custom macro to easily generate predefined file structures…",null,null],[14,"directories_inner","","",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"default","","",1,[[],["file",3]]],[11,"default","","",2,[[],["directory",3]]],[11,"eq","","",0,[[["fselement",4]]]],[11,"ne","","",0,[[["fselement",4]]]],[11,"eq","","",1,[[["file",3]]]],[11,"ne","","",1,[[["file",3]]]],[11,"eq","","",2,[[["directory",3]]]],[11,"ne","","",2,[[["directory",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[4,"FsElement"],[3,"File"],[3,"Directory"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);