var searchIndex = JSON.parse('{\
"debris_backends":{"doc":"Backend implementations for the debris compiler","i":[[0,"common","debris_backends","Defines common items that are specific to the latest …",null,null],[4,"ExecuteComponent","debris_backends::common","A component in an execute command",null,null],[13,"IfScoreRelation","","Tests for a relation between to scores",0,null],[12,"player1","debris_backends::common::ExecuteComponent","",1,null],[12,"player2","","",1,null],[12,"comparison","","",1,null],[13,"IfScoreRange","debris_backends::common","Tests for a relation between a score and a static value",0,null],[12,"player","debris_backends::common::ExecuteComponent","",2,null],[12,"range","","",2,null],[3,"FunctionIdent","debris_backends::common","A unique minecraft function identifier",null,null],[12,"namespace","","The namespace of this function, for example <code>debris</code>",3,null],[12,"path","","The path of this function, for example <code>foo/bar/baz</code>",3,null],[12,"is_collection","","Whether this function is a collection, marked by a <code>#</code>",3,null],[4,"MinecraftCommand","","Enumerates all minecraft commands that are used by any …",null,null],[13,"ScoreboardSet","","Sets the scoreboard value to a specific integer",4,null],[12,"player","debris_backends::common::MinecraftCommand","",5,null],[12,"value","","",5,null],[13,"ScoreboardSetEqual","debris_backends::common","Sets the scoreboard value to another scorboard value",4,null],[12,"player1","debris_backends::common::MinecraftCommand","",6,null],[12,"player2","","",6,null],[13,"ScoreboardSetFromResult","debris_backends::common","Sets the scoreboard value equal to the result of the …",4,null],[12,"player","debris_backends::common::MinecraftCommand","",7,null],[12,"command","","",7,null],[13,"ScoreboardOperation","debris_backends::common","",4,null],[12,"player1","debris_backends::common::MinecraftCommand","",8,null],[12,"player2","","",8,null],[12,"operation","","",8,null],[13,"ScoreboardOperationAdd","debris_backends::common","Quick operation which adds or removes a static value",4,null],[12,"player","debris_backends::common::MinecraftCommand","",9,null],[12,"value","","",9,null],[13,"Execute","debris_backends::common","Any used execute command",4,null],[12,"parts","debris_backends::common::MinecraftCommand","",10,null],[12,"and_then","","",10,null],[13,"Function","debris_backends::common","Calls another function",4,null],[12,"function","debris_backends::common::MinecraftCommand","",11,null],[13,"ScoreboardAdd","debris_backends::common","",4,null],[12,"name","debris_backends::common::MinecraftCommand","",12,null],[12,"criterion","","",12,null],[12,"json_name","","",12,null],[13,"ScoreboardRemove","debris_backends::common","",4,null],[12,"name","debris_backends::common::MinecraftCommand","",13,null],[13,"RawCommand","debris_backends::common","",4,null],[12,"command","debris_backends::common::MinecraftCommand","",14,null],[13,"JsonMessage","debris_backends::common","",4,null],[12,"target","debris_backends::common::MinecraftCommand","",15,null],[12,"message","","",15,null],[4,"MinecraftRange","debris_backends::common","Any valid minecraft range",null,null],[13,"Range","","A full range, eg. 1..99",16,null],[12,"from","debris_backends::common::MinecraftRange","",17,null],[12,"to","","",17,null],[13,"Minimum","debris_backends::common","A range with a lower bound, eg. 0..",16,null],[13,"Maximum","","A range with an upper bound, eg. ..50",16,null],[13,"Equal","","A range that only contains one value",16,null],[13,"NotEqual","","A range that contains every value except one",16,null],[4,"ObjectiveCriterion","","Any objective criterion",null,null],[13,"Dummy","","Mostly used by debris",18,null],[3,"ScoreboardPlayer","","A combination of scoreboard and player",null,null],[12,"player","","",19,null],[12,"scoreboard","","",19,null],[3,"DatapackBackend","debris_backends","The Datapack Backend implementation",null,null],[8,"Backend","","A Backend for debris, which has to convert <code>LLIR</code> into a …",null,null],[10,"handle_llir","","Converts the llir into a directory",20,[[["llir",3]],["directory",3]]],[10,"new","","Creates a new backend",20,[[["compilecontext",3]]]],[11,"generate","","Simplifies the api of backends, so that the backend will …",20,[[["compilecontext",3],["llir",3]],["directory",3]]],[11,"from","debris_backends::common","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","debris_backends","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"new","","",21,[[["compilecontext",3]]]],[11,"handle_llir","","",21,[[["llir",3]],["directory",3]]],[11,"clone","debris_backends::common","",4,[[],["minecraftcommand",4]]],[11,"clone","","",0,[[],["executecomponent",4]]],[11,"clone","","",16,[[],["minecraftrange",4]]],[11,"clone","","",19,[[],["scoreboardplayer",3]]],[11,"clone","","",18,[[],["objectivecriterion",4]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","debris_backends","",21,[[["formatter",3]],["result",6]]],[11,"fmt","debris_backends::common","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"from_operator","","",16,[[["scoreboardcomparison",4]]]]],"p":[[4,"ExecuteComponent"],[13,"IfScoreRelation"],[13,"IfScoreRange"],[3,"FunctionIdent"],[4,"MinecraftCommand"],[13,"ScoreboardSet"],[13,"ScoreboardSetEqual"],[13,"ScoreboardSetFromResult"],[13,"ScoreboardOperation"],[13,"ScoreboardOperationAdd"],[13,"Execute"],[13,"Function"],[13,"ScoreboardAdd"],[13,"ScoreboardRemove"],[13,"RawCommand"],[13,"JsonMessage"],[4,"MinecraftRange"],[13,"Range"],[4,"ObjectiveCriterion"],[3,"ScoreboardPlayer"],[8,"Backend"],[3,"DatapackBackend"]]},\
"debris_common":{"doc":"Common items used by the compiler","i":[[4,"Ident","debris_common","identifier for a value",null,null],[13,"Value","","",0,null],[13,"Special","","",0,null],[4,"SpecialIdent","","Every special identifier",null,null],[13,"Add","","",1,null],[13,"Sub","","",1,null],[13,"Mul","","",1,null],[13,"Div","","",1,null],[13,"Modu","","",1,null],[13,"UnaryMinus","","",1,null],[13,"And","","",1,null],[13,"Or","","",1,null],[13,"Not","","",1,null],[13,"CmpEq","","",1,null],[13,"CmpNe","","",1,null],[13,"CmpGt","","",1,null],[13,"CmpGe","","",1,null],[13,"CmpLt","","",1,null],[13,"CmpLe","","",1,null],[13,"Clone","","",1,null],[13,"PromoteRuntime","","",1,null],[4,"Accessor","","An accessor. Currently a mess",null,null],[13,"Path","","A path like a.b.c",2,null],[13,"Internal","","An accessor that is generated and used internally, which …",2,null],[13,"Main","","a special accessor for the main resource of the current …",2,null],[3,"Code","","A code object contains the source code and optionally a …",null,null],[12,"source","","",3,null],[12,"path","","",3,null],[6,"CodeId","","The type of a code if",null,null],[3,"CodeRef","","A handy object to work in a specific input file",null,null],[12,"file","","",4,null],[3,"InputFiles","","Keeps track of all input files and allows to make cheap …",null,null],[3,"Span","","A span which uniquely specifies a span of characters in …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[["specialident",4]]]],[11,"from","","",0,[[]]],[11,"from","","",2,[[["ident",4]]]],[11,"clone","","",0,[[],["ident",4]]],[11,"clone","","",1,[[],["specialident",4]]],[11,"clone","","",2,[[],["accessor",4]]],[11,"clone","","",4,[[],["coderef",3]]],[11,"clone","","",6,[[],["span",3]]],[11,"default","","",5,[[],["inputfiles",3]]],[11,"eq","","",0,[[["ident",4]]]],[11,"ne","","",0,[[["ident",4]]]],[11,"eq","","",1,[[["specialident",4]]]],[11,"eq","","",2,[[["accessor",4]]]],[11,"ne","","",2,[[["accessor",4]]]],[11,"eq","","",3,[[["code",3]]]],[11,"ne","","",3,[[["code",3]]]],[11,"eq","","",6,[[["span",3]]]],[11,"ne","","",6,[[["span",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",6,[[]]],[11,"new","","Creates a new identifier",0,[[["asref",8]]]],[11,"get_code","","",4,[[],["code",3]]],[11,"get_offset","","",4,[[]]],[11,"get_span","","",4,[[],["span",3]]],[11,"get_relative_span","","Returns a span that is relative to the start of this code …",4,[[["span",3]],["span",3]]],[11,"new","","",5,[[]]],[11,"add_input","","Adds a code unit and returns its ID",5,[[["code",3]],["codeid",6]]],[11,"get_code_ref","","",5,[[["codeid",6]],["coderef",3]]],[11,"get_input","","Gets the input file with this id",5,[[["codeid",6]],["code",3]]],[11,"get_input_offset","","Gets the offset of the file with this id",5,[[["codeid",6]]]],[11,"get_input_span","","",5,[[["codeid",6]],["span",3]]],[11,"get_total_offset","","Calculates the total byte offset",5,[[]]],[11,"get_span_code","","",5,[[["span",3]],["coderef",3]]],[11,"get_span_str","","Returns the str that corresponds to a span",5,[[["span",3]]]],[11,"get_span_start_line","","Returns the line in a file at which this span begins",5,[[["span",3]]]],[11,"new","","Creates a new <code>Span</code> from the starting character and its …",6,[[]]],[11,"empty","","Creates an empty Span",6,[[]]],[11,"start","","Returns the start of this span",6,[[]]],[11,"end","","Returns the end of this span",6,[[]]],[11,"len","","Returns the length of this span",6,[[]]],[11,"is_empty","","Returns, whether this span is empty",6,[[]]],[11,"until","","Constructs a new span which ranges from the start of this …",6,[[["span",3]]]],[11,"as_tuple","","Returns a tuple of the format (start_index, end_index)",6,[[]]]],"p":[[4,"Ident"],[4,"SpecialIdent"],[4,"Accessor"],[3,"Code"],[3,"CodeRef"],[3,"InputFiles"],[3,"Span"]]},\
"debris_core":{"doc":"Core implementation of the debris compiler","i":[[0,"hir","debris_core","High-level intermediate representation",null,null],[0,"hir_nodes","debris_core::hir","",null,null],[4,"HirConstValue","debris_core::hir::hir_nodes","A constant literal, already parsed",null,null],[13,"Integer","","",0,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",1,null],[12,"value","","",1,null],[13,"Fixed","debris_core::hir::hir_nodes","",0,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",2,null],[12,"value","","",2,null],[13,"String","debris_core::hir::hir_nodes","",0,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",3,null],[12,"value","","",3,null],[4,"HirComparisonOperator","debris_core::hir::hir_nodes","Any supported comparison operator",null,null],[13,"Eq","","",4,null],[13,"Ne","","",4,null],[13,"Gt","","",4,null],[13,"Ge","","",4,null],[13,"Lt","","",4,null],[13,"Le","","",4,null],[4,"HirInfixOperator","","Any operator that can be used as an infix",null,null],[13,"Comparison","","Any comparison like <, >, <=, >=, ==, !=",5,null],[13,"And","","Logical and",5,null],[13,"Or","","Logical or",5,null],[13,"Plus","","Mathematical addition",5,null],[13,"Minus","","Mathematical substraction",5,null],[13,"Times","","Mathematical multiplication",5,null],[13,"Divide","","Mathematical division",5,null],[13,"Modulo","","Mathematical modulo",5,null],[3,"HirInfix","","Holds an infix operator combined with its span",null,null],[12,"span","","",6,null],[12,"operator","","",6,null],[4,"HirPrefixOperator","","Any prefix operator",null,null],[13,"Minus","","Mathematical minus",7,null],[13,"Not","","Logical negation",7,null],[3,"HirPrefix","","Holds a prefix operator combined with its span",null,null],[12,"span","","",8,null],[12,"operator","","",8,null],[3,"HirImport","","",null,null],[12,"span","","",9,null],[12,"ident_span","","",9,null],[12,"id","","",9,null],[3,"HirVariableDeclaration","","Holds a variable type declaration like <code>foo: String</code>",null,null],[12,"span","","",10,null],[12,"ident","","",10,null],[12,"typ","","",10,null],[3,"HirVariableInitialization","","",null,null],[12,"span","","",11,null],[12,"ident","","",11,null],[12,"value","","",11,null],[3,"HirPropertyDeclaration","","Declaration of a property in a struct definition",null,null],[12,"span","","The span of the declaration",12,null],[12,"identifier","","The identifier inside of the struct",12,null],[12,"datatype","","The type of the property",12,null],[3,"HirFunctionCall","","Any function call, can be dotted",null,null],[12,"span","","",13,null],[12,"accessor","","",13,null],[12,"parameters_span","","",13,null],[12,"parameters","","",13,null],[3,"HirConditionalBranch","","",null,null],[12,"span","","",14,null],[12,"condition","","",14,null],[12,"block_positive","","",14,null],[12,"block_negative","","",14,null],[4,"HirExpression","","Any expression",null,null],[13,"Variable","","A variable, for example <code>a</code>",15,null],[13,"Path","","A path to a variable, for example <code>for.bar.a</code>",15,null],[13,"Value","","A literal value, for example <code>2.0</code> or <code>\\\"Hello World\\\"</code>",15,null],[13,"UnaryOperation","","A unary operation, for example <code>-a</code>",15,null],[12,"operation","debris_core::hir::hir_nodes::HirExpression","",16,null],[12,"value","","",16,null],[13,"BinaryOperation","debris_core::hir::hir_nodes","A binary operation, for example <code>a + b</code>",15,null],[12,"operation","debris_core::hir::hir_nodes::HirExpression","",17,null],[12,"lhs","","",17,null],[12,"rhs","","",17,null],[13,"Block","debris_core::hir::hir_nodes","A block which returns something",15,null],[13,"FunctionCall","","A function call, for example <code>foo()</code> or <code>path.to.foo()</code>",15,null],[13,"ConditionalBranch","","",15,null],[4,"HirStatement","","Any statement, the difference to an expression is that a …",null,null],[13,"VariableDecl","","A variable declaration, for example <code>let foo = 1</code>",18,null],[13,"FunctionCall","","A function call, which can be both an expression and …",18,null],[13,"Import","","Imports another debris file",18,null],[4,"HirTypePattern","","Any pattern that is allowed to specify a function …",null,null],[13,"Path","","",19,null],[13,"Function","","",19,null],[12,"parameters","debris_core::hir::hir_nodes::HirTypePattern","",20,null],[12,"return_type","","",20,null],[12,"span","","",20,null],[3,"HirBlock","debris_core::hir::hir_nodes","",null,null],[12,"span","","",21,null],[12,"statements","","The statements of this block",21,null],[12,"return_value","","The returned value:",21,null],[12,"objects","","The objects that got declared within this block",21,null],[3,"Attribute","","",null,null],[12,"accessor","","",22,null],[3,"HirFunction","","A function, which contains other statements",null,null],[12,"span","","",23,null],[12,"attributes","","",23,null],[12,"ident","","",23,null],[12,"block","","The block containing all statements of the function",23,null],[12,"parameters","","",23,null],[12,"parameter_span","","",23,null],[12,"return_type","","",23,null],[3,"HirStruct","","A struct definition",null,null],[12,"span","","",24,null],[12,"attributes","","",24,null],[12,"properties","","All declaraed properties of this struct",24,null],[3,"HirModule","","A module with an associated name",null,null],[12,"span","","",25,null],[12,"attributes","","",25,null],[12,"ident","","",25,null],[12,"block","","",25,null],[4,"HirObject","","",null,null],[13,"Function","","",26,null],[13,"Struct","","",26,null],[13,"Module","","",26,null],[4,"HirItem","","Any Item",null,null],[13,"Object","","",27,null],[13,"Statement","","",27,null],[11,"span","","",0,[[],["span",3]]],[11,"get_raw_special_ident","","Returns the associated [SpecialIdent]",4,[[],["specialident",4]]],[11,"get_special_ident","","Returns the associated [SpecialIdent]",5,[[],["specialident",4]]],[11,"get_ident","","Returns the associated [Ident]",7,[[],["ident",4]]],[11,"last_item_span","","Returns the span of the item in the block which is …",21,[[],["span",3]]],[11,"span","","",15,[[],["span",3]]],[11,"span","","",18,[[],["span",3]]],[11,"span","","",19,[[],["span",3]]],[11,"span","","",22,[[],["span",3]]],[11,"return_type_span","","",23,[[],["span",3]]],[3,"HirContext","debris_core::hir","Contains state data that are used during the hir …",null,null],[12,"input_file","","",28,null],[12,"compile_context","","",28,null],[12,"file_offset","","",28,null],[12,"dependencies","","",28,null],[8,"HirVisitor","","Trait which defines methods that a visitor has to …",null,null],[16,"Output","","",29,null],[10,"visit_item","","",29,[[["hiritem",4]]]],[10,"visit_object","","",29,[[["hirobject",4]]]],[10,"visit_struct","","",29,[[["hirstruct",3]]]],[10,"visit_module","","",29,[[["hirmodule",3]]]],[10,"visit_block","","",29,[[["hirblock",3]]]],[10,"visit_import","","",29,[[["hirimport",3]]]],[10,"visit_function","","",29,[[["hirfunction",3]]]],[10,"visit_conditional_branch","","",29,[[["hirconditionalbranch",3]]]],[10,"visit_statement","","",29,[[["hirstatement",4]]]],[10,"visit_expression","","",29,[[["hirexpression",4]]]],[10,"visit_function_call","","",29,[[["hirfunctioncall",3]]]],[10,"visit_variable_declaration","","",29,[[["hirvariableinitialization",3]]]],[10,"visit_property_declaration","","",29,[[["hirpropertydeclaration",3]]]],[10,"visit_const_value","","",29,[[["hirconstvalue",4]]]],[3,"IdentifierPath","","A list of [SpannedIdentifier]s, can be a dotted path",null,null],[12,"idents","","",30,null],[3,"SpannedIdentifier","","Identifies a variable or value based on its span",null,null],[12,"span","","",31,null],[3,"HirFile","","This struct stores the high-level intermediate …",null,null],[12,"main_function","","",32,null],[12,"code_id","","",32,null],[3,"DebrisParser","","The pest parser which can parse the grammar file",null,null],[4,"Rule","","",null,null],[13,"EOI","","",33,null],[13,"program","","",33,null],[13,"item","","",33,null],[13,"statement","","",33,null],[13,"block","","",33,null],[13,"object_def","","",33,null],[13,"attribute_list","","",33,null],[13,"object","","",33,null],[13,"function_def","","",33,null],[13,"function_signature","","",33,null],[13,"param_list","","",33,null],[13,"type_def","","",33,null],[13,"type_pattern","","",33,null],[13,"fn_pattern","","",33,null],[13,"type_pattern_list","","",33,null],[13,"module","","",33,null],[13,"assignment","","",33,null],[13,"import","","",33,null],[13,"expression","","",33,null],[13,"exp_prefix","","",33,null],[13,"prefix_value","","",33,null],[13,"exp_infix","","",33,null],[13,"exp_primary","","",33,null],[13,"exp_parens","","",33,null],[13,"value","","",33,null],[13,"function_call","","",33,null],[13,"parameter_list","","",33,null],[13,"if_branch","","",33,null],[13,"accessor","","",33,null],[13,"fixed","","",33,null],[13,"integer","","",33,null],[13,"ident","","",33,null],[13,"string","","",33,null],[13,"string_inner","","",33,null],[13,"char","","",33,null],[13,"prefix_minus","","",33,null],[13,"prefix_not","","",33,null],[13,"infix_times","","",33,null],[13,"infix_divide","","",33,null],[13,"infix_modulo","","",33,null],[13,"infix_plus","","",33,null],[13,"infix_minus","","",33,null],[13,"infix_and","","",33,null],[13,"infix_or","","",33,null],[13,"infix_comparison","","",33,null],[13,"compare_eq","","",33,null],[13,"compare_ne","","",33,null],[13,"compare_ge","","",33,null],[13,"compare_gt","","",33,null],[13,"compare_le","","",33,null],[13,"compare_lt","","",33,null],[13,"WHITESPACE","","",33,null],[13,"COMMENT","","",33,null],[3,"Hir","","The hir representation of an input file and all of its …",null,null],[12,"main_function","","",34,null],[12,"code_id","","",34,null],[12,"imported_modules","","",34,null],[3,"ImportDependencies","","Keeps track of all imported modules, uses indexes as keys",null,null],[11,"insert","","Inserts a dependency and the code span and returns its …",35,[[["ident",4],["span",3]]]],[11,"len","","",35,[[]]],[11,"is_empty","","",35,[[]]],[11,"get","","",35,[[]]],[11,"iter","","",35,[[]]],[0,"llir","debris_core","Low-level intermediate representation",null,null],[0,"llir_nodes","debris_core::llir","Contains every node that can be produced in the llir step.",null,null],[3,"Function","debris_core::llir::llir_nodes","A function node, contains other nodes",null,null],[12,"id","","The id of the context that created this function The …",36,null],[12,"returned_value","","The value that this function returns",36,null],[3,"FastStore","","Stores a \'fast\' variable",null,null],[12,"scoreboard","","The scoreboard of the target var",37,null],[12,"id","","The id of the target var",37,null],[12,"value","","The value to store into the target var",37,null],[3,"FastStoreFromResult","","Stores a \'fast\' variable from the result of another node",null,null],[12,"scoreboard","","The scoreboard of the target var",38,null],[12,"id","","The id of the target var",38,null],[12,"command","","The command to use",38,null],[3,"BinaryOperation","","Operates on two scoreboard values and stores the result …",null,null],[12,"scoreboard","","The scoreboard of the resulting value",39,null],[12,"id","","The id of the resulting value",39,null],[12,"lhs","","The left value",39,null],[12,"rhs","","The right value",39,null],[12,"operation","","The kind of operation",39,null],[3,"Call","","Calls a function",null,null],[12,"id","","The id of that function",40,null],[4,"Condition","","Evaluates a condition and returns either true or false",null,null],[13,"Compare","","Comparison between two values, eg. val1 <= val2",41,null],[12,"lhs","debris_core::llir::llir_nodes::Condition","",42,null],[12,"rhs","","",42,null],[12,"comparison","","",42,null],[13,"And","debris_core::llir::llir_nodes","",41,null],[13,"Or","","",41,null],[3,"Branch","","Branches based on a condition",null,null],[12,"condition","","The condition to test",43,null],[12,"pos_branch","","The node to execute if that condition is true",43,null],[12,"neg_branch","","The node to execute if that condition is false",43,null],[3,"Execute","","Executes a literal string",null,null],[12,"command","","The command to execute",44,null],[3,"Write","","Writes a formatted message",null,null],[12,"target","","",45,null],[12,"message","","",45,null],[4,"WriteTarget","","The buffer to write to",null,null],[13,"Chat","","",46,null],[13,"Actionbar","","",46,null],[13,"Title","","",46,null],[13,"Subtitle","","",46,null],[4,"Node","","Any node",null,null],[13,"Function","","",47,null],[13,"FastStore","","",47,null],[13,"FastStoreFromResult","","",47,null],[13,"BinaryOperation","","",47,null],[13,"Call","","",47,null],[13,"Condition","","",47,null],[13,"Branch","","",47,null],[13,"Execute","","",47,null],[13,"Write","","",47,null],[11,"nodes","","",36,[[]]],[11,"calls_itself","","Checks if this function contains a node that calls this …",36,[[]]],[11,"not","","Returns a condition that is true, when this condition is …",41,[[],["condition",4]]],[11,"is_simple","","Checks whether this condition is \\\"simple\\\", which means …",41,[[]]],[11,"accessed_variables","","Recursively yields all variables that this condition …",41,[[]]],[11,"iter","","Iterates over this node and all other nodes that this …",47,[[]]],[11,"is_effect_free","","Returns whether this command has no side effect",47,[[]]],[11,"get_write","","If this node writes to a value, returns Some",47,[[],[["option",4],["itemid",3]]]],[11,"set_write_to","","Modifies this so, so that it writes to <code>target_id</code>",47,[[["itemid",3]]]],[0,"utils","debris_core::llir","",null,null],[4,"Scoreboard","debris_core::llir::utils","Identifies a specific scoreboard",null,null],[13,"Main","","The Main scoreboard, where all operations are per default",48,null],[13,"Custom","","Custom scoreboards, each with a unique identifier",48,null],[13,"Internal","","Special scorbeoards used for internal tracking",48,null],[4,"ScoreboardValue","","A Value that can be stored on a scoreboard",null,null],[13,"Static","","",49,null],[13,"Scoreboard","","",49,null],[11,"id","","",49,[[],[["option",4],["itemid",3]]]],[4,"ScoreboardOperation","","Any operation that can be executed on a scoreboard",null,null],[13,"Plus","","",50,null],[13,"Minus","","",50,null],[13,"Times","","",50,null],[13,"Divide","","",50,null],[13,"Modulo","","",50,null],[13,"Copy","","Copy the second value onto the first value",50,null],[13,"Min","","Set the first value to min(first, last)",50,null],[13,"Max","","Set the second value to max(first, last)",50,null],[4,"ScoreboardComparison","","Any comparison that can be executed on two scoreboard …",null,null],[13,"Equal","","",51,null],[13,"NotEqual","","",51,null],[13,"Greater","","",51,null],[13,"GreaterOrEqual","","",51,null],[13,"Less","","",51,null],[13,"LessOrEqual","","",51,null],[11,"flip_sides","","Flips the comparison (converts OP such that …",51,[[],["scoreboardcomparison",4]]],[11,"invert","","Inverts the comparison, such that it is exactly and only …",51,[[],["scoreboardcomparison",4]]],[3,"ItemId","","A unique identifier for an item",null,null],[12,"id","","",52,null],[12,"context","","",52,null],[0,"json_format","debris_core::llir","",null,null],[3,"FormattedText","debris_core::llir::json_format","",null,null],[12,"components","","",53,null],[4,"JsonFormatComponent","","",null,null],[13,"RawText","","",54,null],[13,"Score","","",54,null],[3,"Llir","debris_core::llir","The low-level intermediate representation struct",null,null],[12,"main_function","","The entry point of the program",55,null],[12,"functions","","The functions which were created, excluding the main …",55,null],[0,"mir","debris_core","Mid-level intermediate representation",null,null],[3,"MirBranchIf","debris_core::mir","Acts like <code>MirGotoContext</code>, if the condition is equal to …",null,null],[12,"span","","",56,null],[12,"pos_branch","","",56,null],[12,"neg_branch","","",56,null],[12,"pos_value","","The values returned by positive and negative branch",56,null],[12,"neg_value","","",56,null],[12,"condition","","The condition, has to be a boolean (right now)",56,null],[3,"MirCall","","A function call to api functions",null,null],[12,"span","","",57,null],[12,"function","","",57,null],[12,"value","","",57,null],[12,"parameters","","",57,null],[12,"return_value","","",57,null],[3,"MirGotoContext","","Calls a specific context",null,null],[12,"span","","",58,null],[12,"context_id","","",58,null],[4,"MirNode","","Any node that can be part of the mir representation",null,null],[13,"Call","","",59,null],[13,"GotoContext","","",59,null],[13,"BranchIf","","",59,null],[4,"MirValue","","Any value that is used in the mir compilation and also in …",null,null],[13,"Concrete","","A concrete object",60,null],[13,"Template","","A template which marks a future object",60,null],[12,"id","debris_core::mir::MirValue","",61,null],[12,"class","","",61,null],[8,"MirVisitor","debris_core::mir","",null,null],[16,"Output","","",62,null],[11,"visit_node","","",62,[[["mirnode",4]]]],[10,"visit_call","","",62,[[["mircall",3]]]],[10,"visit_goto_context","","",62,[[["mirgotocontext",3]]]],[10,"visit_branch_if","","",62,[[["mirbranchif",3]]]],[3,"ContextId","","",null,null],[3,"MirContext","","Keeps track of single context, which can be a function, a …",null,null],[12,"code","","The code of this context",63,null],[12,"compile_context","","A ref to the global compile context",63,null],[12,"id","","The context id and the id of the corresponding namespace",63,null],[12,"nodes","","All mir nodes that are emitted",63,null],[3,"MirContextInfo","","Helper struct which can hold mutable references to the …",null,null],[12,"context","","",64,null],[12,"arena","","",64,null],[3,"MirInfo","","Struct that is passed around when working with the mir …",null,null],[12,"mir","","",65,null],[12,"current_context","","",65,null],[3,"NamespaceArena","","",null,null],[3,"CachedFunctionSignature","","",null,null],[12,"parameters","","",66,null],[12,"return_type","","",66,null],[3,"MirBuilder","","Visits the hir and creates a mir from it",null,null],[3,"Mir","","A Mid-level intermediate representation",null,null],[12,"contexts","","All contexts",67,null],[12,"namespaces","","",67,null],[3,"MirContextMap","","",null,null],[11,"get_main_context","","",68,[[],["mircontext",3]]],[11,"get","","",68,[[["contextid",3]],["mircontext",3]]],[11,"get_mut","","",68,[[["contextid",3]],["mircontext",3]]],[0,"objects","debris_core","Contains all objects which can be used in a debris …",null,null],[0,"obj_bool","debris_core::objects","",null,null],[5,"or_static","debris_core::objects::obj_bool","Returns the boolean or-ed with the static value",null,[[["objbool",3],["itemid",3]]]],[5,"and_static","","",null,[[["objbool",3],["itemid",3]]]],[3,"ObjBool","","A boolean value that is stored on a scoreboard",null,null],[12,"id","","",69,null],[11,"new","","",69,[[["itemid",3]]]],[11,"as_scoreboard_value","","",69,[[],["scoreboardvalue",4]]],[0,"obj_bool_static","debris_core::objects","",null,null],[3,"ObjStaticBool","debris_core::objects::obj_bool_static","",null,null],[12,"value","","",70,null],[0,"obj_class","debris_core::objects","",null,null],[6,"ClassRef","debris_core::objects::obj_class","A reference to a class",null,null],[8,"HasClass","","Marks objects that have a class",null,null],[10,"class","","Returns the class of this object",71,[[["compilecontext",3]],["classref",6]]],[3,"ObjClass","","The class of a value.",null,null],[11,"new","","Constructs a new class with a <code>typ</code> and class properties",72,[[["objectproperties",6],["type",4]]]],[11,"as_generic_ref","","",72,[[["rc",3]],["genericclassref",6]]],[11,"get_property","","Retrieves a property of this class",72,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"set_property","","Changes a property of this class",72,[[["ident",4],["objectref",3]]]],[11,"get_properties","","",72,[[],[["objectproperties",6],["ref",3]]]],[11,"new_empty","","Constructs a new class with a <code>typ</code>",72,[[["type",4]]]],[11,"is","","Returns whether this class is the same class as <code>other</code>",72,[[["objclass",3]]]],[11,"typ","","",72,[[],["type",4]]],[6,"GenericClassRef","","",null,null],[3,"GenericClass","","",null,null],[11,"new","","",73,[[["classref",6]]]],[11,"into_class_ref","","",73,[[],["rc",3]]],[11,"class","","",73,[[],["classref",6]]],[11,"get_property","","",73,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"typ","","",73,[[],["type",4]]],[11,"matches","","Whether this class matches the other class",73,[[["typepattern",4]]]],[11,"set_generics","","",73,[[["typepattern",4],["string",3],["vec",3]]]],[11,"get_generics","","",73,[[],["option",4]]],[0,"obj_function","debris_core::objects","",null,null],[3,"ObjFunction","debris_core::objects::obj_function","A function object",null,null],[11,"new","","",74,[[["vec",3],["compilecontext",3],["functionoverload",3]]]],[11,"new_single","","",74,[[["compilecontext",3]]]],[11,"overload","","",74,[[],[["option",4],["functionoverload",3]]]],[11,"expected_signatures","","Returns every possible signature as (params, return) …",74,[[]]],[4,"FunctionParameters","","Decides which arguments a function can accepts",null,null],[13,"Any","","",75,null],[13,"Specific","","",75,null],[3,"FunctionContext","","The context which gets passed to a function",null,null],[12,"compile_context","","",76,null],[12,"namespaces","","",76,null],[12,"parent","","",76,null],[12,"item_id","","The id for the returned value",76,null],[12,"span","","The current span",76,null],[12,"mir_contexts","","All generated mir contexts mir contexts",76,null],[6,"FunctionSignatureRef","","",null,null],[3,"FunctionSignature","","A signature containing expected parameters and return type",null,null],[11,"new","","",77,[[["functionparameters",4],["genericclassref",6]]]],[11,"matches","","Returns whether the args iterator matches all of the …",77,[[]]],[11,"parameters","","",77,[[],["functionparameters",4]]],[11,"return_type","","",77,[[],["genericclassref",6]]],[3,"FunctionOverload","","A signature describing a single overload of a function",null,null],[11,"new","","",78,[[["debrisfunctioninterface",3],["functionsignatureref",6]]]],[11,"signature","","",78,[[],["functionsignature",3]]],[11,"function","","",78,[[],[["rc",3],["debrisfunctioninterface",3]]]],[11,"emit","","Adds a node to the previously emitted nodes",76,[[["node",4]]]],[11,"null","","Shortcut for returning <code>ObjNull</code>",76,[[],["objectref",3]]],[11,"make_context","","Creates a new namespace context which can be used to …",76,[[],["index",3]]],[11,"get_object","","Tries to get a property starting at the <code>start</code> namespace …",76,[[["ident",4],["contextid",3]],[["option",4],["objectref",3]]]],[11,"set_object","","Sets an object in this namespace",76,[[["index",3],["ident",4],["objectref",3]]]],[0,"obj_int","debris_core::objects","",null,null],[3,"ObjInt","debris_core::objects::obj_int","A dynamic Integer",null,null],[12,"id","","The id of the item",79,null],[11,"new","","Creates a new dynamic integer with this id",79,[[["itemid",3]]]],[11,"as_scoreboard_value","","Returns a <code>ScoreboardValue</code> which identifies a specific …",79,[[],["scoreboardvalue",4]]],[0,"obj_int_static","debris_core::objects","",null,null],[3,"ObjStaticInt","debris_core::objects::obj_int_static","A static integer object",null,null],[12,"value","","",80,null],[11,"new","","Creates a new static integers with this value",80,[[]]],[11,"as_scoreboard_value","","Returns a <code>ScoreboardValue</code> which matches this int",80,[[],["scoreboardvalue",4]]],[0,"obj_module","debris_core::objects","",null,null],[3,"ObjModule","debris_core::objects::obj_module","A module object",null,null],[11,"new","","Creates a new empty module with this name",81,[[]]],[11,"with_members","","",81,[[["ident",4],["objectproperties",6]]]],[11,"ident","","Returns the ident of this module",81,[[],["ident",4]]],[11,"members","","",81,[[]]],[11,"set_property","","Sets a property",81,[[["ident",4],["into",8],["objectref",3]],[["option",4],["objectref",3]]]],[11,"register","","Registers a value for the first time",81,[[["ident",4],["into",8],["objectref",3]]]],[11,"register_typed_function","","Registers a simple api-function whose signature specifies …",81,[[["compilecontext",3]]]],[3,"ModuleFactory","","A wrapper function for functions that return modules",null,null],[11,"new","","",82,[[["fn",8]]]],[11,"call","","",82,[[["compilecontext",3]],["objmodule",3]]],[11,"import_members","","",82,[[]]],[0,"obj_native_function","debris_core::objects","",null,null],[5,"match_parameters","debris_core::objects::obj_native_function","",null,[[]]],[3,"FunctionParameterDefinition","","",null,null],[12,"name","","",83,null],[12,"expected_type","","",83,null],[12,"span","","",83,null],[3,"ObjNativeFunction","","A callable function object for functions declared in …",null,null],[11,"new","","",84,[[["contextid",3],["rc",3],["cachedfunctionsignature",3],["compilecontext",3],["genericclassref",6]]]],[3,"ObjNativeFunctionSignature","","Created when the mir comes across a function definition, …",null,null],[12,"native_function_id","","",85,null],[12,"function_span","","",85,null],[12,"attributes","","",85,null],[12,"return_type_span","","",85,null],[12,"definition_scope","","",85,null],[11,"new","","",85,[[["span",3],["typepattern",4],["accessor",4],["contextid",3],["vec",3],["compilecontext",3]]]],[0,"obj_null","debris_core::objects","",null,null],[3,"ObjNull","debris_core::objects::obj_null","",null,null],[11,"instance","","",86,[[["compilecontext",3]],["objectref",3]]],[0,"obj_string","debris_core::objects","",null,null],[3,"ObjString","debris_core::objects::obj_string","A static string object",null,null],[11,"new","","",87,[[["string",3]]]],[11,"as_str","","",87,[[]]],[0,"error","debris_core","Compilation error handling",null,null],[3,"SliceOwned","debris_core::error","An owned counterpart to the <code>annotate_snippets::Slice</code> …",null,null],[12,"source","","",88,null],[12,"origin","","",88,null],[12,"annotations","","",88,null],[12,"fold","","",88,null],[3,"SnippetOwned","","An owned counterpart to the <code>annotate_snippets::Snippet</code> …",null,null],[12,"title","","",89,null],[12,"id","","",89,null],[12,"annotation_type","","",89,null],[12,"slices","","",89,null],[12,"footer","","",89,null],[3,"SourceAnnotationOwned","","An owned counterpart to the …",null,null],[12,"annotation_type","","",90,null],[12,"range","","",90,null],[12,"label","","",90,null],[3,"ParseError","","Thrown when parsing bad input",null,null],[12,"span","","The span where this error occured",91,null],[12,"expected","","Symbols which were expected instead",91,null],[3,"LangError","","A generic error which gets thrown when compiling",null,null],[12,"kind","","The specific error",92,null],[12,"span","","",92,null],[4,"LangErrorKind","","Specifies a specific error reason",null,null],[13,"VariableAlreadyDefined","","",93,null],[12,"name","debris_core::error::LangErrorKind","",94,null],[12,"previous_definition","","",94,null],[13,"UnexpectedType","debris_core::error","",93,null],[12,"expected","debris_core::error::LangErrorKind","",95,null],[12,"got","","",95,null],[12,"declared","","",95,null],[13,"UnexpectedPattern","debris_core::error","",93,null],[12,"got","debris_core::error::LangErrorKind","",96,null],[13,"UnexpectedConversion","debris_core::error","",93,null],[12,"got","debris_core::error::LangErrorKind","",97,null],[12,"target","","",97,null],[12,"note","","",97,null],[13,"UnexpectedOverload","debris_core::error","",93,null],[12,"parameters","debris_core::error::LangErrorKind","",98,null],[12,"expected","","",98,null],[13,"MissingVariable","debris_core::error","",93,null],[12,"var_name","debris_core::error::LangErrorKind","",99,null],[12,"similar","","",99,null],[13,"MissingProperty","debris_core::error","",93,null],[12,"property","debris_core::error::LangErrorKind","",100,null],[12,"parent","","",100,null],[12,"similar","","",100,null],[13,"UnexpectedOperator","debris_core::error","",93,null],[12,"operator","debris_core::error::LangErrorKind","",101,null],[12,"lhs","","",101,null],[12,"rhs","","",101,null],[13,"UnpromotableType","debris_core::error","",93,null],[12,"got","debris_core::error::LangErrorKind","",102,null],[13,"MissingModule","debris_core::error","",93,null],[12,"path","debris_core::error::LangErrorKind","",103,null],[12,"error","","",103,null],[13,"CircularImport","debris_core::error","",93,null],[12,"module","debris_core::error::LangErrorKind","",104,null],[13,"NotYetImplemented","debris_core::error","",93,null],[12,"msg","debris_core::error::LangErrorKind","",105,null],[6,"Result","debris_core::error","The result type used by most of the core functions",null,null],[6,"LangResult","","A result type which allows quick error throwing since no …",null,null],[8,"AsAnnotationSnippet","","",null,null],[10,"as_annotation_snippet","","",106,[[["compilecontext",3]],["snippetowned",3]]],[11,"to_string","","",106,[[["compilecontext",3]],["string",3]]],[4,"CompileError","","A Compile Error",null,null],[13,"ParseError","","An error which happens when parsing the input",107,null],[13,"LangError","","An error which happens when compiling the input",107,null],[11,"format","","",107,[[["compilecontext",3]],["string",3]]],[0,"function_interface","debris_core","This module contains a trait <code>ToFunctionInterface</code> which …",null,null],[3,"DebrisFunctionInterface","debris_core::function_interface","The common type for working with callbacks",null,null],[8,"NormalizedFunctionInterface","","Any function that can be called as a normal function …",null,null],[10,"call","","",108,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[8,"ValidReturnType","","Trait used for converting any valid return value into a …",null,null],[10,"to_result","","",109,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[10,"get_class","","If possible, returns the type of the return value",109,[[["compilecontext",3]],[["option",4],["genericclassref",6]]]],[8,"ToFunctionInterface","","This trait can convert functions into compatible …",null,null],[10,"to_function_interface","","",110,[[],[["normalizedfunctioninterface",8],["box",3]]]],[10,"query_parameters","","Static method for querying the accepted parameters",110,[[["compilecontext",3]],["functionparameters",4]]],[11,"query_return","","Static method for querying the return type, may be None",110,[[["compilecontext",3]],[["option",4],["genericclassref",6]]]],[0,"memory","debris_core","",null,null],[5,"copy","debris_core::memory","Copies a scoreboard value from source to destination",null,[[["itemid",3]],["node",4]]],[5,"mem_move","","Copies all items from source over to destination",null,[[["objectref",3]]]],[4,"MemoryLayout","","Specifies how a specific object lays out its runtime …",null,null],[13,"Zero","","This type has no runtime memory",111,null],[13,"One","","This type has exactly one field",111,null],[13,"Multiple","","This type is spread across multiple fields",111,null],[3,"MemoryCounter","","Counter that can give out unique <code>ItemId</code>\'s",null,null],[11,"new","","",112,[[["contextid",3]]]],[11,"next_item","","",112,[[],["itemid",3]]],[11,"next_id","","",112,[[]]],[3,"CompileContext","debris_core","The Compilation context stores various information about …",null,null],[12,"config","","The current config which specifies how to compile",113,null],[12,"input_files","","The code files",113,null],[3,"Namespace","","",null,null],[12,"id_counter","","The current id counter for items that get added to this …",114,null],[3,"DebrisObject","","Objects are a central type for the compiler. Basically …",null,null],[12,"class","","The class of the object",115,null],[12,"layout","","The runtime memory layout of this object",115,null],[12,"payload","","The actual value",115,null],[8,"ObjectPayload","","A trait for values that can be used as debris object …",null,null],[10,"memory_layout","","Returns the memory layout of this specific object This …",116,[[["compilecontext",3]],["memorylayout",4]]],[11,"generic_class","","The class specific to this object. Contains additionally …",116,[[["compilecontext",3]],["genericclassref",6]]],[11,"get_property","","May be overwritten by distinct payloads which carry …",116,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"as_function","","Interface any object can implement to be treated as a …",116,[[],[["objfunction",3],["option",4]]]],[6,"ObjectProperties","","",null,null],[3,"ObjectRef","","This struct is used to pass objects arround",null,null],[8,"ValidPayload","","",null,null],[10,"as_any","","",117,[[],["any",8]]],[10,"eq","","Tests whether this object is equal to another object",117,[[["objectref",3]]]],[10,"into_object","","",117,[[["compilecontext",3]],["objectref",3]]],[10,"get_class","","",117,[[["compilecontext",3]],["classref",6]]],[4,"BuildMode","","The build mode for this compilation",null,null],[13,"Debug","","Debug build: produces slower code, but contains various …",118,null],[13,"Release","","Release build: optimized the code, drops most safety …",118,null],[3,"Config","","Holds data about the user specified configuration",null,null],[12,"project_name","","",119,null],[12,"project_description","","",119,null],[12,"default_scoreboard_name","","",119,null],[12,"build_mode","","",119,null],[4,"Type","","The type of a class object",null,null],[13,"Null","","The null type, implicitely return by function which don\'t …",120,null],[13,"StaticInt","","Compile time known 32-bit signed integer",120,null],[13,"DynamicInt","","32-bit signed integer known at runtime",120,null],[13,"StaticBool","","A boolean value known at compile time",120,null],[13,"DynamicBool","","Runtime boolean",120,null],[13,"String","","A compile time known string",120,null],[13,"Function","","Any function, native or api",120,null],[13,"Class","","The type of a class",120,null],[13,"Module","","Module type",120,null],[4,"TypePattern","","The enumeration of patterns allowed as function arguments",null,null],[13,"Any","","The Any pattern matches every type",121,null],[13,"Int","","The Int pattern matches every integer",121,null],[13,"Bool","","The Boolean pattern matches every boolean",121,null],[13,"Class","","A type pattern can also take any normal type",121,null],[11,"from","debris_core::hir","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","debris_core::hir::hir_nodes","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"equivalent","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"equivalent","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[]]],[11,"from","debris_core::hir","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"equivalent","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","debris_core::llir","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","debris_core::llir::llir_nodes","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"equivalent","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"equivalent","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"equivalent","","",41,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"equivalent","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","debris_core::llir::utils","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"equivalent","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"equivalent","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"equivalent","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"equivalent","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"equivalent","","",52,[[]]],[11,"from","debris_core::llir::json_format","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","debris_core::mir","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"equivalent","","",60,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"equivalent","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"equivalent","","",58,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"equivalent","","",56,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"equivalent","","",59,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"equivalent","","",124,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","debris_core","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"equivalent","","",114,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"equivalent","","",126,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"to_result","debris_core::objects::obj_bool","",69,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",69,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"equivalent","","",69,[[]]],[11,"to_result","debris_core::objects::obj_bool_static","",70,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",70,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"equivalent","","",70,[[]]],[11,"to_result","debris_core::objects::obj_class","",72,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",72,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"equivalent","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"equivalent","","",73,[[]]],[11,"to_result","debris_core::objects::obj_function","",74,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",74,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"equivalent","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"equivalent","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"to_result","debris_core::objects::obj_int","",79,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",79,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"equivalent","","",79,[[]]],[11,"to_result","debris_core::objects::obj_int_static","",80,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",80,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"equivalent","","",80,[[]]],[11,"to_result","debris_core::objects::obj_module","",81,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",81,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"equivalent","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","debris_core::objects::obj_native_function","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"to_result","","",84,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",84,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"equivalent","","",84,[[]]],[11,"to_result","","",85,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",85,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"equivalent","","",85,[[]]],[11,"to_result","debris_core::objects::obj_null","",86,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",86,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"equivalent","","",86,[[]]],[11,"to_result","debris_core::objects::obj_string","",87,[[["functioncontext",3]],[["langerrorkind",4],["result",4],["objectref",3]]]],[11,"get_class","","",87,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"equivalent","","",87,[[]]],[11,"from","debris_core","",118,[[]]],[11,"into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"equivalent","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"equivalent","","",119,[[]]],[11,"from","debris_core::error","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"to_string","","",91,[[],["string",3]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"equivalent","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"to_string","","",92,[[],["string",3]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"equivalent","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"equivalent","","",93,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"equivalent","","",107,[[]]],[11,"from","debris_core","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"to_string","","",121,[[],["string",3]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"equivalent","","",121,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"to_string","","",120,[[],["string",3]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"equivalent","","",120,[[]]],[11,"from","debris_core::function_interface","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","debris_core::memory","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"equivalent","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"equivalent","","",112,[[]]],[11,"visit_item","debris_core::mir","",125,[[["hiritem",4]]]],[11,"visit_object","","",125,[[["hirobject",4]]]],[11,"visit_struct","","",125,[[["hirstruct",3]]]],[11,"visit_module","","",125,[[["hirmodule",3]]]],[11,"visit_block","","",125,[[["hirblock",3]]]],[11,"visit_import","","",125,[[["hirimport",3]]]],[11,"visit_function","","",125,[[["hirfunction",3]]]],[11,"visit_conditional_branch","","",125,[[["hirconditionalbranch",3]]]],[11,"visit_statement","","",125,[[["hirstatement",4]]]],[11,"visit_expression","","",125,[[["hirexpression",4]]]],[11,"visit_function_call","","",125,[[["hirfunctioncall",3]]]],[11,"visit_variable_declaration","","",125,[[["hirvariableinitialization",3]]]],[11,"visit_property_declaration","","",125,[[["hirpropertydeclaration",3]]]],[11,"visit_const_value","","",125,[[["hirconstvalue",4]]]],[11,"memory_layout","debris_core::objects::obj_bool","",69,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_bool_static","",70,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_class","",72,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_function","",74,[[["compilecontext",3]],["memorylayout",4]]],[11,"as_function","","",74,[[],[["objfunction",3],["option",4]]]],[11,"memory_layout","debris_core::objects::obj_int","",79,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_int_static","",80,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_module","",81,[[["compilecontext",3]],["memorylayout",4]]],[11,"get_property","","",81,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"memory_layout","debris_core::objects::obj_native_function","",84,[[["compilecontext",3]],["memorylayout",4]]],[11,"as_function","","",84,[[],[["objfunction",3],["option",4]]]],[11,"memory_layout","","",85,[[["compilecontext",3]],["memorylayout",4]]],[11,"generic_class","","",85,[[["compilecontext",3]],["genericclassref",6]]],[11,"memory_layout","debris_core::objects::obj_null","",86,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_string","",87,[[["compilecontext",3]],["memorylayout",4]]],[11,"class","debris_core::objects::obj_bool","",69,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_bool_static","",70,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_class","",72,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_function","",74,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_int","",79,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_int_static","",80,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_module","",81,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_native_function","",84,[[["compilecontext",3]],["classref",6]]],[11,"class","","",85,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_null","",86,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_string","",87,[[["compilecontext",3]],["classref",6]]],[11,"as_annotation_snippet","debris_core::error","",91,[[["compilecontext",3]],["snippetowned",3]]],[11,"as_annotation_snippet","","",92,[[["compilecontext",3]],["snippetowned",3]]],[11,"as_annotation_snippet","","",107,[[["compilecontext",3]],["snippetowned",3]]],[11,"to_result","debris_core","",128,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[11,"get_class","","",128,[[["compilecontext",3]],[["option",4],["genericclassref",6]]]],[11,"to_result","","",128,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[11,"get_class","","",128,[[["compilecontext",3]],[["option",4],["genericclassref",6]]]],[11,"to_result","","",126,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[11,"get_class","","",126,[[["compilecontext",3]],[["option",4],["genericclassref",6]]]],[11,"from","debris_core::hir","",31,[[["span",3]]]],[11,"from","","",30,[[["spannedidentifier",3]]]],[11,"from","debris_core::mir","",60,[[["objectref",3]]]],[11,"from","","",124,[[["index",3]]]],[11,"from","debris_core","",114,[[["contextid",3]]]],[11,"from","","",126,[[["debrisobject",3]]]],[11,"from","debris_core::objects::obj_bool","",69,[[["itemid",3]]]],[11,"from","debris_core::objects::obj_bool_static","",70,[[]]],[11,"from","debris_core::objects::obj_function","",75,[[["typepattern",4],["vec",3]]]],[11,"from","debris_core::objects::obj_int","",79,[[["itemid",3]]]],[11,"from","debris_core::objects::obj_int_static","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","","",80,[[]]],[11,"from","debris_core::objects::obj_module","",82,[[]]],[11,"from","debris_core::objects::obj_null","",86,[[]]],[11,"from","debris_core::objects::obj_string","",87,[[["string",3]]]],[11,"from","debris_core::error","",107,[[["parseerror",3]]]],[11,"from","","",107,[[["langerror",3]]]],[11,"from","debris_core","",121,[[["genericclassref",6]]]],[11,"from","debris_core::function_interface","",127,[[["normalizedfunctioninterface",8],["box",3]]]],[11,"from","","",127,[[]]],[11,"clone","debris_core::hir::hir_nodes","",0,[[],["hirconstvalue",4]]],[11,"clone","","",4,[[],["hircomparisonoperator",4]]],[11,"clone","","",5,[[],["hirinfixoperator",4]]],[11,"clone","","",6,[[],["hirinfix",3]]],[11,"clone","","",7,[[],["hirprefixoperator",4]]],[11,"clone","","",8,[[],["hirprefix",3]]],[11,"clone","","",10,[[],["hirvariabledeclaration",3]]],[11,"clone","","",19,[[],["hirtypepattern",4]]],[11,"clone","debris_core::hir","",31,[[],["spannedidentifier",3]]],[11,"clone","","",30,[[],["identifierpath",3]]],[11,"clone","","",33,[[],["rule",4]]],[11,"clone","debris_core::llir::llir_nodes","",39,[[],["binaryoperation",3]]],[11,"clone","","",41,[[],["condition",4]]],[11,"clone","","",46,[[],["writetarget",4]]],[11,"clone","debris_core::llir::utils","",48,[[],["scoreboard",4]]],[11,"clone","","",49,[[],["scoreboardvalue",4]]],[11,"clone","","",50,[[],["scoreboardoperation",4]]],[11,"clone","","",51,[[],["scoreboardcomparison",4]]],[11,"clone","","",52,[[],["itemid",3]]],[11,"clone","debris_core::mir","",60,[[],["mirvalue",4]]],[11,"clone","","",124,[[],["contextid",3]]],[11,"clone","debris_core","",126,[[],["objectref",3]]],[11,"clone","debris_core::objects::obj_class","",72,[[],["objclass",3]]],[11,"clone","debris_core::objects::obj_function","",74,[[],["objfunction",3]]],[11,"clone","","",75,[[],["functionparameters",4]]],[11,"clone","","",78,[[],["functionoverload",3]]],[11,"clone","debris_core::objects::obj_int","",79,[[],["objint",3]]],[11,"clone","debris_core::objects::obj_int_static","",80,[[],["objstaticint",3]]],[11,"clone","debris_core::objects::obj_module","",81,[[],["objmodule",3]]],[11,"clone","debris_core::objects::obj_native_function","",83,[[],["functionparameterdefinition",3]]],[11,"clone","","",84,[[],["objnativefunction",3]]],[11,"clone","","",85,[[],["objnativefunctionsignature",3]]],[11,"clone","debris_core::objects::obj_null","",86,[[],["objnull",3]]],[11,"clone","debris_core::objects::obj_string","",87,[[],["objstring",3]]],[11,"clone","debris_core::error","",91,[[],["parseerror",3]]],[11,"clone","","",92,[[],["langerror",3]]],[11,"clone","","",93,[[],["langerrorkind",4]]],[11,"clone","","",107,[[],["compileerror",4]]],[11,"clone","debris_core","",121,[[],["typepattern",4]]],[11,"clone","","",120,[[],["type",4]]],[11,"default","debris_core::hir","",35,[[],["importdependencies",3]]],[11,"default","debris_core::mir","",123,[[],["namespacearena",3]]],[11,"default","","",67,[[],["mir",3]]],[11,"default","","",68,[[],["mircontextmap",3]]],[11,"default","debris_core","",113,[[],["compilecontext",3]]],[11,"default","","",119,[[]]],[11,"cmp","debris_core::hir","",33,[[["rule",4]],["ordering",4]]],[11,"eq","debris_core::hir::hir_nodes","",0,[[["hirconstvalue",4]]]],[11,"ne","","",0,[[["hirconstvalue",4]]]],[11,"eq","","",4,[[["hircomparisonoperator",4]]]],[11,"eq","","",5,[[["hirinfixoperator",4]]]],[11,"ne","","",5,[[["hirinfixoperator",4]]]],[11,"eq","","",6,[[["hirinfix",3]]]],[11,"ne","","",6,[[["hirinfix",3]]]],[11,"eq","","",7,[[["hirprefixoperator",4]]]],[11,"eq","","",8,[[["hirprefix",3]]]],[11,"ne","","",8,[[["hirprefix",3]]]],[11,"eq","","",9,[[["hirimport",3]]]],[11,"ne","","",9,[[["hirimport",3]]]],[11,"eq","","",10,[[["hirvariabledeclaration",3]]]],[11,"ne","","",10,[[["hirvariabledeclaration",3]]]],[11,"eq","","",11,[[["hirvariableinitialization",3]]]],[11,"ne","","",11,[[["hirvariableinitialization",3]]]],[11,"eq","","",12,[[["hirpropertydeclaration",3]]]],[11,"ne","","",12,[[["hirpropertydeclaration",3]]]],[11,"eq","","",13,[[["hirfunctioncall",3]]]],[11,"ne","","",13,[[["hirfunctioncall",3]]]],[11,"eq","","",14,[[["hirconditionalbranch",3]]]],[11,"ne","","",14,[[["hirconditionalbranch",3]]]],[11,"eq","","",15,[[["hirexpression",4]]]],[11,"ne","","",15,[[["hirexpression",4]]]],[11,"eq","","",18,[[["hirstatement",4]]]],[11,"ne","","",18,[[["hirstatement",4]]]],[11,"eq","","",19,[[["hirtypepattern",4]]]],[11,"ne","","",19,[[["hirtypepattern",4]]]],[11,"eq","","",21,[[["hirblock",3]]]],[11,"ne","","",21,[[["hirblock",3]]]],[11,"eq","","",22,[[["attribute",3]]]],[11,"ne","","",22,[[["attribute",3]]]],[11,"eq","","",23,[[["hirfunction",3]]]],[11,"ne","","",23,[[["hirfunction",3]]]],[11,"eq","","",24,[[["hirstruct",3]]]],[11,"ne","","",24,[[["hirstruct",3]]]],[11,"eq","","",25,[[["hirmodule",3]]]],[11,"ne","","",25,[[["hirmodule",3]]]],[11,"eq","","",26,[[["hirobject",4]]]],[11,"ne","","",26,[[["hirobject",4]]]],[11,"eq","","",27,[[["hiritem",4]]]],[11,"ne","","",27,[[["hiritem",4]]]],[11,"eq","debris_core::hir","",31,[[["spannedidentifier",3]]]],[11,"ne","","",31,[[["spannedidentifier",3]]]],[11,"eq","","",30,[[["identifierpath",3]]]],[11,"ne","","",30,[[["identifierpath",3]]]],[11,"eq","","",33,[[["rule",4]]]],[11,"eq","debris_core::llir::llir_nodes","",37,[[["faststore",3]]]],[11,"ne","","",37,[[["faststore",3]]]],[11,"eq","","",39,[[["binaryoperation",3]]]],[11,"ne","","",39,[[["binaryoperation",3]]]],[11,"eq","","",40,[[["call",3]]]],[11,"ne","","",40,[[["call",3]]]],[11,"eq","","",41,[[["condition",4]]]],[11,"ne","","",41,[[["condition",4]]]],[11,"eq","","",44,[[["execute",3]]]],[11,"ne","","",44,[[["execute",3]]]],[11,"eq","debris_core::llir::utils","",48,[[["scoreboard",4]]]],[11,"ne","","",48,[[["scoreboard",4]]]],[11,"eq","","",49,[[["scoreboardvalue",4]]]],[11,"ne","","",49,[[["scoreboardvalue",4]]]],[11,"eq","","",50,[[["scoreboardoperation",4]]]],[11,"eq","","",51,[[["scoreboardcomparison",4]]]],[11,"eq","","",52,[[["itemid",3]]]],[11,"ne","","",52,[[["itemid",3]]]],[11,"eq","debris_core::mir","",60,[[["mirvalue",4]]]],[11,"ne","","",60,[[["mirvalue",4]]]],[11,"eq","","",58,[[["mirgotocontext",3]]]],[11,"ne","","",58,[[["mirgotocontext",3]]]],[11,"eq","","",56,[[["mirbranchif",3]]]],[11,"ne","","",56,[[["mirbranchif",3]]]],[11,"eq","","",59,[[["mirnode",4]]]],[11,"ne","","",59,[[["mirnode",4]]]],[11,"eq","","",57,[[["mircall",3]]]],[11,"eq","","",124,[[["contextid",3]]]],[11,"ne","","",124,[[["contextid",3]]]],[11,"eq","debris_core","",114,[[["namespace",3]]]],[11,"ne","","",114,[[["namespace",3]]]],[11,"eq","","",126,[[["objectref",3]]]],[11,"eq","debris_core::objects::obj_bool","",69,[[["objbool",3]]]],[11,"ne","","",69,[[["objbool",3]]]],[11,"eq","debris_core::objects::obj_bool_static","",70,[[["objstaticbool",3]]]],[11,"ne","","",70,[[["objstaticbool",3]]]],[11,"eq","debris_core::objects::obj_class","",72,[[]]],[11,"eq","","",73,[[["genericclass",3]]]],[11,"eq","debris_core::objects::obj_function","",74,[[["objfunction",3]]]],[11,"eq","","",75,[[["functionparameters",4]]]],[11,"ne","","",75,[[["functionparameters",4]]]],[11,"eq","debris_core::objects::obj_int","",79,[[["objint",3]]]],[11,"ne","","",79,[[["objint",3]]]],[11,"eq","debris_core::objects::obj_int_static","",80,[[["objstaticint",3]]]],[11,"ne","","",80,[[["objstaticint",3]]]],[11,"eq","debris_core::objects::obj_module","",81,[[["objmodule",3]]]],[11,"ne","","",81,[[["objmodule",3]]]],[11,"eq","debris_core::objects::obj_native_function","",84,[[["objnativefunction",3]]]],[11,"ne","","",84,[[["objnativefunction",3]]]],[11,"eq","","",85,[[["objnativefunctionsignature",3]]]],[11,"eq","debris_core::objects::obj_null","",86,[[["objnull",3]]]],[11,"eq","debris_core::objects::obj_string","",87,[[["objstring",3]]]],[11,"ne","","",87,[[["objstring",3]]]],[11,"eq","debris_core","",118,[[["buildmode",4]]]],[11,"eq","","",119,[[["config",3]]]],[11,"ne","","",119,[[["config",3]]]],[11,"eq","debris_core::error","",91,[[["parseerror",3]]]],[11,"ne","","",91,[[["parseerror",3]]]],[11,"eq","","",92,[[["langerror",3]]]],[11,"ne","","",92,[[["langerror",3]]]],[11,"eq","","",93,[[["langerrorkind",4]]]],[11,"ne","","",93,[[["langerrorkind",4]]]],[11,"eq","","",107,[[["compileerror",4]]]],[11,"ne","","",107,[[["compileerror",4]]]],[11,"eq","debris_core","",121,[[["typepattern",4]]]],[11,"ne","","",121,[[["typepattern",4]]]],[11,"eq","","",120,[[["type",4]]]],[11,"eq","debris_core::memory","",111,[[["memorylayout",4]]]],[11,"ne","","",111,[[["memorylayout",4]]]],[11,"eq","","",112,[[["memorycounter",3]]]],[11,"ne","","",112,[[["memorycounter",3]]]],[11,"partial_cmp","debris_core::hir","",33,[[["rule",4]],[["option",4],["ordering",4]]]],[11,"deref","debris_core::mir","",123,[[]]],[11,"deref","debris_core","",126,[[]]],[11,"deref","debris_core::objects::obj_string","",87,[[]]],[11,"deref_mut","debris_core::mir","",123,[[]]],[11,"fmt","debris_core::hir","",32,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::hir::hir_nodes","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::hir","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir","",55,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir::llir_nodes","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir::utils","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir::json_format","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::mir","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_bool","",69,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_bool_static","",70,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_class","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_function","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_int","",79,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_int_static","",80,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_module","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_native_function","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_null","",86,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_string","",87,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::error","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::memory","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_class","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_function","",77,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::error","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",121,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"hash","debris_core::hir","",31,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",33,[[]]],[11,"hash","debris_core::llir::utils","",48,[[]]],[11,"hash","","",52,[[]]],[11,"hash","debris_core::mir","",124,[[]]],[11,"hash","debris_core::objects::obj_class","",72,[[]]],[11,"hash","debris_core","",120,[[]]],[11,"from_str","","",120,[[],["result",4]]],[11,"source","debris_core::error","",107,[[],[["error",8],["option",4]]]],[11,"parse","debris_core::hir","",122,[[["rule",4]],[["result",4],["pairs",3],["error",3]]]],[11,"from_code","","Creates a <code>Hir</code> from code.",32,[[["importdependencies",3],["compilecontext",3],["coderef",3]],["result",6]]],[11,"new","","",28,[[["coderef",3],["compilecontext",3],["importdependencies",3]]]],[11,"span","","",28,[[["span",3]],["span",3]]],[11,"normalize_pest_span","","",28,[[["span",3]],["span",3]]],[11,"get_ident","","",28,[[["spannedidentifier",3]],["ident",4]]],[11,"add_import_file","","",28,[[["spannedidentifier",3]]]],[11,"new","","Creates a new <code>SpannedIdentifier</code> from the [Span]",31,[[["span",3]]]],[11,"new","","Creates a new IdentifierPath from the vec of identifiers",30,[[["vec",3],["spannedidentifier",3]]]],[11,"single_ident","","",30,[[],[["spannedidentifier",3],["option",4]]]],[11,"span","","",30,[[],["span",3]]],[11,"from_mir","debris_core::llir","Compiles the mir into a llir",55,[[["mircontextmap",3],["namespacearena",3]],[["result",6],["llir",3]]]],[11,"null","debris_core::mir","Creates a new mir value that is null",60,[[["compilecontext",3]]]],[11,"get_property","","Gets a property from the value",60,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"class","","Returns the class of this value",60,[[],["genericclassref",6]]],[11,"expect_concrete","","",60,[[],["objectref",3]]],[11,"concrete","","",60,[[],[["option",4],["objectref",3]]]],[11,"expect_template","","",60,[[]]],[11,"template","","",60,[[],["option",4]]],[11,"assert_type","","Asserts that the type of this value matches <code>class</code> and …",60,[[["typepattern",4],["option",4],["span",3]],["result",6]]],[11,"visit_node","","",62,[[["mirnode",4]]]],[11,"context_mut","","Returns a mutable reference to the mir context",65,[[],["mircontext",3]]],[11,"context","","Returns a shared reference to the mir context",65,[[],["mircontext",3]]],[11,"context_info","","Returns a helper struct that can be used to work on the …",65,[[],["mircontextinfo",3]]],[11,"namespace_mut","","Returns a mutable reference to the namespace",65,[[],["namespace",3]]],[11,"arena_mut","","Returns a mutable reference to the arena",65,[[],["namespacearena",3]]],[11,"arena","","Returns an immutable reference to the arena",65,[[],["namespacearena",3]]],[11,"add_value","","",64,[[["span",3],["ident",4],["mirvalue",4]],["result",6]]],[11,"add_anonymous_template","","Adds the class as an anonymous template and returns it as …",64,[[["genericclassref",6]],["mirvalue",4]]],[11,"get_from_spanned_ident","","",64,[[["spannedidentifier",3]],[["result",6],["mirvalue",4]]]],[11,"resolve_path","","",64,[[["identifierpath",3]],[["result",6],["accessedproperty",3]]]],[11,"register","","",64,[[["objmodule",3]]]],[11,"register_function_call","","",64,[[["objectref",3],["option",4],["span",3],["vec",3],["mirvalue",4]],["result",6]]],[11,"as_inner","","",124,[[],["index",3]]],[11,"dummy","","For testing purposes creates a dummy id",124,[[],["contextid",3]]],[11,"new","","Creates a new context",63,[[["compilecontext",3],["namespacearena",3],["contextid",3],["option",4],["coderef",3]]]],[11,"namespace_mut","","",63,[[["namespacearena",3]],["namespace",3]]],[11,"namespace","","",63,[[["namespacearena",3]],["namespace",3]]],[11,"register","","Loads the module into this scope",63,[[["objmodule",3],["namespacearena",3]]]],[11,"register_members","","Loads every member of the module (but not the module …",63,[[["objmodule",3],["namespacearena",3]]]],[11,"register_function_call","","Creates a function call    ",63,[[["objectref",3],["option",4],["namespacearena",3],["vec",3],["span",3],["mirvalue",4]],["result",6]]],[11,"add_value","","Adds a value that corresponds to <code>ident</code>",63,[[["span",3],["ident",4],["namespacearena",3],["mirvalue",4]],["result",6]]],[11,"add_anonymous_object","","Adds an anonymous object and returns a ref MirValue",63,[[["namespacearena",3],["objectref",3]],["mirvalue",4]]],[11,"add_anonymous_template","","Adds an anonymous value that is usually used temporarily",63,[[["namespacearena",3],["genericclassref",6]],["mirvalue",4]]],[11,"get_from_spanned_ident","","Looks up the value that corresponds to this ident",63,[[["spannedidentifier",3],["namespacearena",3]],[["result",6],["mirvalue",4]]]],[11,"get_ident","","Returns an ident from a span",63,[[["spannedidentifier",3]],["ident",4]]],[11,"get_type_pattern","","Returns the type pattern that belongs to a single spanned …",63,[[["spannedidentifier",3]],[["typepattern",4],["result",6]]]],[11,"resolve_path","","Resolves the accessor and returns the accessed element",63,[[["identifierpath",3],["namespacearena",3]],[["result",6],["accessedproperty",3]]]],[11,"new","","",125,[[["compilecontext",3],["mir",3],["coderef",3]]]],[11,"context_mut","","Returns a mutable reference to the current context",125,[[],["mircontext",3]]],[11,"context","","Returns a shared reference to the current context",125,[[],["mircontext",3]]],[11,"context_info","","Returns a helper struct that contains both a context and …",125,[[],["mircontextinfo",3]]],[11,"namespace_mut","","Returns a mutable reference to the current namespace",125,[[],["namespace",3]]],[11,"arena_mut","","Returns a mutable reference to the global arena",125,[[],["namespacearena",3]]],[11,"arena","","Returns a shared reference to the global arena",125,[[],["namespacearena",3]]],[11,"context","","",67,[[["contextid",3]],["mircontextinfo",3]]],[11,"add_context","","",67,[[["mircontext",3]]]],[11,"from_hir","","Converts the hir into a mir",67,[[["hir",3],["compilecontext",3]],[["result",6],["mir",3]]]],[11,"type_ctx","debris_core","",113,[[],["typecontextref",3]]],[11,"add_input_file","","",113,[[["code",3]],["codeid",6]]],[11,"get_input_file","","",113,[[["codeid",6]],["code",3]]],[11,"get_unique_id","","Returns a unique id",113,[[]]],[11,"import_module","","Reads a module file and returns it as Hir",113,[[["span",3],["string",3],["coderef",3]],[["result",6],["hirmodule",3]]]],[11,"new","","Creates a new Namespace",114,[[["index",3],["contextid",3],["option",4]]]],[11,"ancestor","","",114,[[],[["index",3],["option",4]]]],[11,"has_item_key","","Returns whether a given item has a corresponding key",114,[[]]],[11,"add_object","","Adds an object with a name to this namespace",114,[[["ident",4],["namespaceentry",4]],["option",4]]],[11,"add_value","","Adds an anonymous object (without name) to this namespace",114,[[["namespaceentry",4]]]],[11,"add_value_at","","Inserts the value at this index and returns the last …",114,[[["namespaceentry",4]],[["option",4],["namespaceentry",4]]]],[11,"replace_object_at","","Replaces the object with this id",114,[[["namespaceentry",4]],["namespaceentry",4]]],[11,"len","","The amount of objects in this namespace",114,[[]]],[11,"is_empty","","Thanks, clippy...",114,[[]]],[11,"get","","Retrieves a named object from this namespace",114,[[["arena",3],["ident",4]],[["option",4],["namespaceentry",4]]]],[11,"get_by_id","","Retrieves an object by its id from this namespace",114,[[],[["option",4],["namespaceentry",4]]]],[11,"generic_class","","The class specific to this object. Contains additionally …",116,[[["compilecontext",3]],["genericclassref",6]]],[11,"get_property","","May be overwritten by distinct payloads which carry …",116,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"as_function","","Interface any object can implement to be treated as a …",116,[[],[["objfunction",3],["option",4]]]],[11,"from_payload","","",126,[[["compilecontext",3],["objectpayload",8]]]],[11,"get_property","","Tries to get a property that belongs to this object",115,[[["ident",4]],[["option",4],["objectref",3]]]],[11,"downcast_payload","","Converts the payload into its original type",115,[[],["option",4]]],[11,"is_instance","","Returns whether the payload is of type <code>T</code>",115,[[]]],[11,"is_release","","Whether the current build mode is release",118,[[]]],[11,"is_debug","","Whether the current build mode is debug",118,[[]]],[11,"as_snippet","debris_core::error","",89,[[],["snippet",3]]],[11,"as_slice","","",88,[[],["slice",3]]],[11,"as_source_annotation","","",90,[[],["sourceannotation",3]]],[11,"new","","",92,[[["langerrorkind",4],["span",3]]]],[11,"matches","debris_core","Returns whether this pattern can match the type",121,[[["genericclass",3]]]],[11,"from_str","","",121,[[["compilecontext",3]],["option",4]]],[11,"is_int","","",120,[[]]],[11,"is_bool","","",120,[[]]],[11,"runtime_encodable","","Returns whether this type can be completely encoded at …",120,[[]]]],"p":[[4,"HirConstValue"],[13,"Integer"],[13,"Fixed"],[13,"String"],[4,"HirComparisonOperator"],[4,"HirInfixOperator"],[3,"HirInfix"],[4,"HirPrefixOperator"],[3,"HirPrefix"],[3,"HirImport"],[3,"HirVariableDeclaration"],[3,"HirVariableInitialization"],[3,"HirPropertyDeclaration"],[3,"HirFunctionCall"],[3,"HirConditionalBranch"],[4,"HirExpression"],[13,"UnaryOperation"],[13,"BinaryOperation"],[4,"HirStatement"],[4,"HirTypePattern"],[13,"Function"],[3,"HirBlock"],[3,"Attribute"],[3,"HirFunction"],[3,"HirStruct"],[3,"HirModule"],[4,"HirObject"],[4,"HirItem"],[3,"HirContext"],[8,"HirVisitor"],[3,"IdentifierPath"],[3,"SpannedIdentifier"],[3,"HirFile"],[4,"Rule"],[3,"Hir"],[3,"ImportDependencies"],[3,"Function"],[3,"FastStore"],[3,"FastStoreFromResult"],[3,"BinaryOperation"],[3,"Call"],[4,"Condition"],[13,"Compare"],[3,"Branch"],[3,"Execute"],[3,"Write"],[4,"WriteTarget"],[4,"Node"],[4,"Scoreboard"],[4,"ScoreboardValue"],[4,"ScoreboardOperation"],[4,"ScoreboardComparison"],[3,"ItemId"],[3,"FormattedText"],[4,"JsonFormatComponent"],[3,"Llir"],[3,"MirBranchIf"],[3,"MirCall"],[3,"MirGotoContext"],[4,"MirNode"],[4,"MirValue"],[13,"Template"],[8,"MirVisitor"],[3,"MirContext"],[3,"MirContextInfo"],[3,"MirInfo"],[3,"CachedFunctionSignature"],[3,"Mir"],[3,"MirContextMap"],[3,"ObjBool"],[3,"ObjStaticBool"],[8,"HasClass"],[3,"ObjClass"],[3,"GenericClass"],[3,"ObjFunction"],[4,"FunctionParameters"],[3,"FunctionContext"],[3,"FunctionSignature"],[3,"FunctionOverload"],[3,"ObjInt"],[3,"ObjStaticInt"],[3,"ObjModule"],[3,"ModuleFactory"],[3,"FunctionParameterDefinition"],[3,"ObjNativeFunction"],[3,"ObjNativeFunctionSignature"],[3,"ObjNull"],[3,"ObjString"],[3,"SliceOwned"],[3,"SnippetOwned"],[3,"SourceAnnotationOwned"],[3,"ParseError"],[3,"LangError"],[4,"LangErrorKind"],[13,"VariableAlreadyDefined"],[13,"UnexpectedType"],[13,"UnexpectedPattern"],[13,"UnexpectedConversion"],[13,"UnexpectedOverload"],[13,"MissingVariable"],[13,"MissingProperty"],[13,"UnexpectedOperator"],[13,"UnpromotableType"],[13,"MissingModule"],[13,"CircularImport"],[13,"NotYetImplemented"],[8,"AsAnnotationSnippet"],[4,"CompileError"],[8,"NormalizedFunctionInterface"],[8,"ValidReturnType"],[8,"ToFunctionInterface"],[4,"MemoryLayout"],[3,"MemoryCounter"],[3,"CompileContext"],[3,"Namespace"],[3,"DebrisObject"],[8,"ObjectPayload"],[8,"ValidPayload"],[4,"BuildMode"],[3,"Config"],[4,"Type"],[4,"TypePattern"],[3,"DebrisParser"],[3,"NamespaceArena"],[3,"ContextId"],[3,"MirBuilder"],[3,"ObjectRef"],[3,"DebrisFunctionInterface"],[6,"LangResult"]]},\
"debris_derive":{"doc":"","i":[[23,"object","debris_derive","Handles an impl block containing methods for debris …",null,null]],"p":[]},\
"debris_lang":{"doc":"The Debris compiler.","i":[[5,"get_extern_modules","debris_lang","Loads the extern modules (for now only std)",null,[[]]],[5,"debug_run","","Compiles the file <code>test.txt</code> into llir",null,[[["compileconfig",3]],[["result",6],["llir",3]]]],[5,"main","","",null,[[]]]],"p":[]},\
"debris_std":{"doc":"The standard library implementation for the debris …","i":[[5,"load","debris_std","Loads the standard library module",null,[[["compilecontext",3]],["objmodule",3]]]],"p":[]},\
"vfs":{"doc":"Virstual in-memory file system. might switch to a more …","i":[[4,"FsElement","vfs","",null,null],[13,"File","","",0,null],[13,"Directoy","","",0,null],[3,"File","","",null,null],[3,"Directory","","",null,null],[11,"persist","","",0,[[["path",3]],["result",6]]],[11,"new","","",1,[[]]],[11,"with_data","","",1,[[]]],[11,"push_string","","",1,[[]]],[11,"persist","","",1,[[["path",3]],["result",6]]],[11,"new","","",2,[[]]],[11,"with_contents","","",2,[[["hashmap",3],["hashmap",3],["file",3],["string",3],["directory",3]]]],[11,"file","","returns a new file with this name or returns an existing …",2,[[["string",3]],["file",3]]],[11,"dir","","Returns a new directory with this name or returns an …",2,[[["string",3]],["directory",3]]],[11,"resolve_path","","",2,[[],[["option",4],["fselement",4]]]],[11,"persist","","",2,[[["path",3]],["result",6]]],[14,"directories","","Custom macro to easily generate predefined file structures…",null,null],[14,"directories_inner","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"default","","",1,[[],["file",3]]],[11,"default","","",2,[[],["directory",3]]],[11,"eq","","",0,[[["fselement",4]]]],[11,"ne","","",0,[[["fselement",4]]]],[11,"eq","","",1,[[["file",3]]]],[11,"ne","","",1,[[["file",3]]]],[11,"eq","","",2,[[["directory",3]]]],[11,"ne","","",2,[[["directory",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[4,"FsElement"],[3,"File"],[3,"Directory"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);