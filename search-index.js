var searchIndex = JSON.parse('{\
"debris_backends":{"doc":"Backend implementations for the debris compiler","i":[[0,"common","debris_backends","Defines common items that are specific to the latest …",null,null],[4,"ExecuteComponent","debris_backends::common","A component in an execute command",null,null],[13,"IfScoreRelation","","Tests for a relation between to scores",0,null],[12,"player1","debris_backends::common::ExecuteComponent","",1,null],[12,"player2","","",1,null],[12,"comparison","","",1,null],[13,"IfScoreRange","debris_backends::common","Tests for a relation between a score and a static value",0,null],[12,"player","debris_backends::common::ExecuteComponent","",2,null],[12,"range","","",2,null],[3,"FunctionIdent","debris_backends::common","A unique minecraft function identifier",null,null],[12,"namespace","","The namespace of this function, for example <code>debris</code>",3,null],[12,"path","","The path of this function, for example <code>foo/bar/baz</code>",3,null],[12,"is_collection","","Whether this function is a collection, marked by a <code>#</code>",3,null],[4,"MinecraftCommand","","Enumerates all minecraft commands that are used by any …",null,null],[13,"ScoreboardSet","","Sets the scoreboard value to a specific integer",4,null],[12,"player","debris_backends::common::MinecraftCommand","",5,null],[12,"value","","",5,null],[13,"ScoreboardSetEqual","debris_backends::common","Sets the scoreboard value to another scorboard value",4,null],[12,"player1","debris_backends::common::MinecraftCommand","",6,null],[12,"player2","","",6,null],[13,"ScoreboardSetFromResult","debris_backends::common","Sets the scoreboard value equal to the result of the …",4,null],[12,"player","debris_backends::common::MinecraftCommand","",7,null],[12,"command","","",7,null],[13,"ScoreboardOperation","debris_backends::common","",4,null],[12,"player1","debris_backends::common::MinecraftCommand","",8,null],[12,"player2","","",8,null],[12,"operation","","",8,null],[13,"ScoreboardOperationAdd","debris_backends::common","Quick operation which adds or removes a static value",4,null],[12,"player","debris_backends::common::MinecraftCommand","",9,null],[12,"value","","",9,null],[13,"Execute","debris_backends::common","Any used execute command",4,null],[12,"parts","debris_backends::common::MinecraftCommand","",10,null],[12,"and_then","","",10,null],[13,"Function","debris_backends::common","Calls another function",4,null],[12,"function","debris_backends::common::MinecraftCommand","",11,null],[13,"ScoreboardAdd","debris_backends::common","",4,null],[12,"name","debris_backends::common::MinecraftCommand","",12,null],[12,"criterion","","",12,null],[12,"json_name","","",12,null],[13,"ScoreboardRemove","debris_backends::common","",4,null],[12,"name","debris_backends::common::MinecraftCommand","",13,null],[13,"RawCommand","debris_backends::common","",4,null],[12,"command","debris_backends::common::MinecraftCommand","",14,null],[13,"JsonMessage","debris_backends::common","",4,null],[12,"target","debris_backends::common::MinecraftCommand","",15,null],[12,"message","","",15,null],[4,"MinecraftRange","debris_backends::common","Any valid minecraft range",null,null],[13,"Range","","A full range, eg. 1..99",16,null],[12,"from","debris_backends::common::MinecraftRange","",17,null],[12,"to","","",17,null],[13,"Minimum","debris_backends::common","A range with a lower bound, eg. 0..",16,null],[13,"Maximum","","A range with an upper bound, eg. ..50",16,null],[13,"Equal","","A range that only contains one value",16,null],[13,"NotEqual","","A range that contains every value except one",16,null],[4,"ObjectiveCriterion","","Any objective criterion",null,null],[13,"Dummy","","Mostly used by debris",18,null],[3,"ScoreboardPlayer","","A combination of scoreboard and player",null,null],[12,"player","","",19,null],[12,"scoreboard","","",19,null],[3,"DatapackBackend","debris_backends","The Datapack Backend implementation",null,null],[8,"Backend","","A Backend for debris, which has to convert <code>LLIR</code> into a …",null,null],[10,"generate","","Converts the llir into a directory",20,[[["llir",3],["compilecontext",3]],["directory",3]]],[11,"from","debris_backends::common","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","debris_backends","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"generate","","",21,[[["llir",3],["compilecontext",3]],["directory",3]]],[11,"clone","debris_backends::common","",4,[[],["minecraftcommand",4]]],[11,"clone","","",0,[[],["executecomponent",4]]],[11,"clone","","",16,[[],["minecraftrange",4]]],[11,"clone","","",19,[[],["scoreboardplayer",3]]],[11,"clone","","",18,[[],["objectivecriterion",4]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","debris_backends","",21,[[["formatter",3]],["result",6]]],[11,"fmt","debris_backends::common","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"from_operator","","",16,[[["scoreboardcomparison",4],["i32",15]]]]],"p":[[4,"ExecuteComponent"],[13,"IfScoreRelation"],[13,"IfScoreRange"],[3,"FunctionIdent"],[4,"MinecraftCommand"],[13,"ScoreboardSet"],[13,"ScoreboardSetEqual"],[13,"ScoreboardSetFromResult"],[13,"ScoreboardOperation"],[13,"ScoreboardOperationAdd"],[13,"Execute"],[13,"Function"],[13,"ScoreboardAdd"],[13,"ScoreboardRemove"],[13,"RawCommand"],[13,"JsonMessage"],[4,"MinecraftRange"],[13,"Range"],[4,"ObjectiveCriterion"],[3,"ScoreboardPlayer"],[8,"Backend"],[3,"DatapackBackend"]]},\
"debris_common":{"doc":"Common items used by the compiler","i":[[4,"Ident","debris_common","identifier for a value",null,null],[13,"Value","","Since Idents have be cloned quite often a generic value is…",0,null],[13,"Special","","",0,null],[4,"SpecialIdent","","Every special identifier",null,null],[13,"Add","","",1,null],[13,"Sub","","",1,null],[13,"Mul","","",1,null],[13,"Div","","",1,null],[13,"Modu","","",1,null],[13,"UnaryMinus","","",1,null],[13,"And","","",1,null],[13,"Or","","",1,null],[13,"Not","","",1,null],[13,"CmpEq","","",1,null],[13,"CmpNe","","",1,null],[13,"CmpGt","","",1,null],[13,"CmpGe","","",1,null],[13,"CmpLt","","",1,null],[13,"CmpLe","","",1,null],[13,"Clone","","",1,null],[13,"PromoteRuntime","","",1,null],[4,"Accessor","","An accessor represents a dotted path",null,null],[13,"Path","","A path like a.b.c",2,null],[3,"Code","","A code object contains the source code and optionally a …",null,null],[12,"source","","",3,null],[12,"path","","",3,null],[6,"CodeId","","The type of a code id, currently just a usize",null,null],[3,"CodeRef","","A handy object to work in a specific input file",null,null],[12,"file","","",4,null],[3,"InputFiles","","Keeps track of all input files and allows to make cheap …",null,null],[3,"Span","","A span which uniquely specifies a span of characters in …",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[["specialident",4]]]],[11,"from","","",0,[[]]],[11,"from","","",2,[[["ident",4]]]],[11,"clone","","",0,[[],["ident",4]]],[11,"clone","","",1,[[],["specialident",4]]],[11,"clone","","",2,[[],["accessor",4]]],[11,"clone","","",4,[[],["coderef",3]]],[11,"clone","","",6,[[],["span",3]]],[11,"default","","",5,[[],["inputfiles",3]]],[11,"eq","","",0,[[["ident",4]],["bool",15]]],[11,"ne","","",0,[[["ident",4]],["bool",15]]],[11,"eq","","",1,[[["specialident",4]],["bool",15]]],[11,"eq","","",2,[[["accessor",4]],["bool",15]]],[11,"ne","","",2,[[["accessor",4]],["bool",15]]],[11,"eq","","",3,[[["code",3]],["bool",15]]],[11,"ne","","",3,[[["code",3]],["bool",15]]],[11,"eq","","",6,[[["span",3]],["bool",15]]],[11,"ne","","",6,[[["span",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",6,[[]]],[11,"new","","Creates a new identifier",0,[[["asref",8],["str",15]]]],[11,"equals_ident","","",2,[[],["bool",15]]],[11,"get_code","","",4,[[],["code",3]]],[11,"get_offset","","",4,[[],["usize",15]]],[11,"get_span","","",4,[[],["span",3]]],[11,"get_relative_span","","Returns a span that is relative to the start of this code …",4,[[["span",3]],["span",3]]],[11,"new","","",5,[[]]],[11,"add_input","","Adds a code unit and returns its ID",5,[[["code",3]],["codeid",6]]],[11,"get_code_ref","","",5,[[["codeid",6]],["coderef",3]]],[11,"get_input","","Gets the input file with this id",5,[[["codeid",6]],["code",3]]],[11,"get_input_offset","","Gets the offset of the file with this id",5,[[["codeid",6]],["usize",15]]],[11,"get_total_offset","","Calculates the total byte offset",5,[[],["usize",15]]],[11,"get_span_code","","",5,[[["span",3]],["coderef",3]]],[11,"get_span_str","","Returns the str that corresponds to a span",5,[[["span",3]],["str",15]]],[11,"get_span_line","","Returns the line in a file at which this span begins",5,[[["span",3]],["usize",15]]],[11,"new","","Creates a new <code>Span</code> from the starting character and its …",6,[[["usize",15]]]],[11,"empty","","Creates an empty Span",6,[[]]],[11,"start","","Returns the start of this span",6,[[],["usize",15]]],[11,"end","","Returns the end of this span",6,[[],["usize",15]]],[11,"len","","Returns the length of this span",6,[[],["usize",15]]],[11,"is_empty","","Returns, whether this span is empty",6,[[],["bool",15]]],[11,"until","","Constructs a new span which ranges from the start of this …",6,[[["span",3]]]]],"p":[[4,"Ident"],[4,"SpecialIdent"],[4,"Accessor"],[3,"Code"],[3,"CodeRef"],[3,"InputFiles"],[3,"Span"]]},\
"debris_core":{"doc":"Core implementation of the debris compiler","i":[[0,"hir","debris_core","High-level intermediate representation",null,null],[0,"hir_nodes","debris_core::hir","Defines every node used in the hir representation",null,null],[4,"HirConstValue","debris_core::hir::hir_nodes","A constant literal, already parsed",null,null],[13,"Integer","","",0,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",1,null],[12,"value","","",1,null],[13,"Bool","debris_core::hir::hir_nodes","",0,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",2,null],[12,"value","","",2,null],[13,"Fixed","debris_core::hir::hir_nodes","",0,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",3,null],[12,"value","","",3,null],[13,"String","debris_core::hir::hir_nodes","",0,null],[12,"span","debris_core::hir::hir_nodes::HirConstValue","",4,null],[12,"value","","",4,null],[4,"HirComparisonOperator","debris_core::hir::hir_nodes","Any supported comparison operator",null,null],[13,"Eq","","",5,null],[13,"Ne","","",5,null],[13,"Gt","","",5,null],[13,"Ge","","",5,null],[13,"Lt","","",5,null],[13,"Le","","",5,null],[4,"HirInfixOperator","","Any operator that can be used as an infix",null,null],[13,"Comparison","","Any comparison like <, >, <=, >=, ==, !=",6,null],[13,"And","","Logical and",6,null],[13,"Or","","Logical or",6,null],[13,"Plus","","Mathematical addition",6,null],[13,"Minus","","Mathematical substraction",6,null],[13,"Times","","Mathematical multiplication",6,null],[13,"Divide","","Mathematical division",6,null],[13,"Modulo","","Mathematical modulo",6,null],[3,"HirInfix","","Holds an infix operator combined with its span",null,null],[12,"span","","",7,null],[12,"operator","","",7,null],[4,"HirPrefixOperator","","Any prefix operator",null,null],[13,"Minus","","Mathematical minus",8,null],[13,"Not","","Logical negation",8,null],[3,"HirPrefix","","Holds a prefix operator combined with its span",null,null],[12,"span","","",9,null],[12,"operator","","",9,null],[3,"HirImport","","Marks an import statement. The id specifies the index of …",null,null],[12,"span","","",10,null],[12,"ident_span","","",10,null],[12,"id","","",10,null],[4,"HirControlKind","","",null,null],[13,"Return","","",11,null],[3,"HirControlFlow","","Represents a control flow statement like return or break",null,null],[12,"span","","",12,null],[12,"kind","","",12,null],[12,"expression","","",12,null],[3,"HirParameterDeclaration","","Holds a variable type declaration like <code>foo: String</code> This …",null,null],[12,"span","","",13,null],[12,"ident","","",13,null],[12,"typ","","",13,null],[3,"HirVariableInitialization","","Sets a variable like <code>let a = expression();</code>",null,null],[12,"span","","",14,null],[12,"ident","","",14,null],[12,"value","","",14,null],[3,"HirVariableUpdate","","Similar to <code>HirVariableInitialization</code>, however this node …",null,null],[12,"span","","",15,null],[12,"ident","","",15,null],[12,"value","","",15,null],[3,"HirPropertyDeclaration","","Declaration of a property in a struct definition",null,null],[12,"span","","The span of the declaration",16,null],[12,"identifier","","The identifier inside of the struct",16,null],[12,"datatype","","The type of the property",16,null],[3,"HirFunctionCall","","Any function call, can be dotted",null,null],[12,"span","","",17,null],[12,"accessor","","",17,null],[12,"parameters_span","","",17,null],[12,"parameters","","",17,null],[3,"HirConditionalBranch","","An if-branch which checks a condition and runs code …",null,null],[12,"span","","",18,null],[12,"condition","","",18,null],[12,"block_positive","","",18,null],[12,"block_negative","","",18,null],[4,"HirExpression","","Any expression",null,null],[13,"Variable","","A variable, for example <code>a</code>",19,null],[13,"Path","","A path to a variable, for example <code>for.bar.a</code>",19,null],[13,"Value","","A literal value, for example <code>2.0</code> or <code>\\\"Hello World\\\"</code>",19,null],[13,"UnaryOperation","","A unary operation, for example <code>-a</code>",19,null],[12,"operation","debris_core::hir::hir_nodes::HirExpression","",20,null],[12,"value","","",20,null],[13,"BinaryOperation","debris_core::hir::hir_nodes","A binary operation, for example <code>a + b</code>",19,null],[12,"operation","debris_core::hir::hir_nodes::HirExpression","",21,null],[12,"lhs","","",21,null],[12,"rhs","","",21,null],[13,"Block","debris_core::hir::hir_nodes","A block which returns something",19,null],[13,"FunctionCall","","A function call, for example <code>foo()</code> or <code>path.to.foo()</code>",19,null],[13,"ConditionalBranch","","",19,null],[4,"HirStatement","","Any statement, the difference to an expression is that a …",null,null],[13,"VariableDecl","","A variable declaration, for example <code>let foo = 1</code>",22,null],[13,"VariableUpdate","","A write to an already existing variable",22,null],[13,"FunctionCall","","A function call, which can be both an expression and …",22,null],[13,"Import","","Imports another debris file",22,null],[13,"ControlFlow","","Controls the program flow",22,null],[13,"Block","","A normal block",22,null],[13,"ConditonalBranch","","A normal if statement",22,null],[4,"HirTypePattern","","Any pattern that is allowed to specify a function …",null,null],[13,"Path","","A normal type, like <code>Int</code>",23,null],[13,"Function","","A function, like <code>fn(Int, Int) -> Int</code>",23,null],[12,"parameters","debris_core::hir::hir_nodes::HirTypePattern","",24,null],[12,"return_type","","",24,null],[12,"span","","",24,null],[3,"HirBlock","debris_core::hir::hir_nodes","A block of code. Usually contained withing a pair of {} …",null,null],[12,"span","","",25,null],[12,"statements","","The statements of this block",25,null],[12,"return_value","","The returned value:",25,null],[12,"objects","","The objects that got declared within this block",25,null],[3,"Attribute","","Attributes are a form of metadata that can be applied to …",null,null],[12,"accessor","","",26,null],[3,"HirFunction","","A function, which contains other statements",null,null],[12,"span","","",27,null],[12,"attributes","","",27,null],[12,"ident","","",27,null],[12,"block","","The block containing all statements of the function",27,null],[12,"parameters","","",27,null],[12,"parameter_span","","",27,null],[12,"return_type","","",27,null],[3,"HirStruct","","A struct definition",null,null],[12,"span","","",28,null],[12,"attributes","","",28,null],[12,"properties","","All declaraed properties of this struct",28,null],[3,"HirModule","","A module with an associated name",null,null],[12,"span","","",29,null],[12,"attributes","","",29,null],[12,"ident","","",29,null],[12,"block","","",29,null],[4,"HirObject","","",null,null],[13,"Function","","",30,null],[13,"Struct","","",30,null],[13,"Module","","",30,null],[4,"HirItem","","Any Item",null,null],[13,"Object","","",31,null],[13,"Statement","","",31,null],[11,"span","","",0,[[],["span",3]]],[11,"get_raw_special_ident","","Returns the associated [SpecialIdent]",5,[[],["specialident",4]]],[11,"get_special_ident","","Returns the associated [SpecialIdent]",6,[[],["specialident",4]]],[11,"get_ident","","Returns the associated [Ident]",8,[[],["ident",4]]],[11,"last_item_span","","Returns the span of the item in the block which is …",25,[[],["span",3]]],[11,"span","","",19,[[],["span",3]]],[11,"span","","",22,[[],["span",3]]],[11,"span","","",23,[[],["span",3]]],[11,"span","","",26,[[],["span",3]]],[11,"return_type_span","","",27,[[],["span",3]]],[3,"HirContext","debris_core::hir","Contains state data that are used during the hir …",null,null],[12,"input_file","","",32,null],[12,"compile_context","","",32,null],[12,"file_offset","","",32,null],[12,"dependencies","","",32,null],[8,"HirVisitor","","Trait which defines methods that a visitor has to …",null,null],[16,"Output","","",33,null],[10,"visit_item","","",33,[[["hiritem",4]]]],[10,"visit_object","","",33,[[["hirobject",4]]]],[10,"visit_struct","","",33,[[["hirstruct",3]]]],[10,"visit_module","","",33,[[["hirmodule",3]]]],[10,"visit_block","","",33,[[["hirblock",3]]]],[10,"visit_import","","",33,[[["hirimport",3]]]],[10,"visit_control_flow","","",33,[[["hircontrolflow",3]]]],[10,"visit_function","","",33,[[["hirfunction",3]]]],[10,"visit_conditional_branch","","",33,[[["hirconditionalbranch",3]]]],[10,"visit_statement","","",33,[[["hirstatement",4]]]],[10,"visit_expression","","",33,[[["hirexpression",4]]]],[10,"visit_function_call","","",33,[[["hirfunctioncall",3]]]],[10,"visit_variable_declaration","","",33,[[["hirvariableinitialization",3]]]],[10,"visit_variable_update","","",33,[[["hirvariableupdate",3]]]],[10,"visit_property_declaration","","",33,[[["hirpropertydeclaration",3]]]],[10,"visit_const_value","","",33,[[["hirconstvalue",4]]]],[3,"IdentifierPath","","A list of [SpannedIdentifier]s, can be a dotted path",null,null],[12,"idents","","",34,null],[3,"SpannedIdentifier","","Identifies a variable or value based on its span",null,null],[12,"span","","",35,null],[3,"HirFile","","This struct stores the high-level intermediate …",null,null],[12,"main_function","","",36,null],[12,"code_id","","",36,null],[3,"DebrisParser","","The pest parser which can parse the grammar file",null,null],[4,"Rule","","",null,null],[13,"EOI","","",37,null],[13,"program","","",37,null],[13,"item","","",37,null],[13,"statement","","",37,null],[13,"block","","",37,null],[13,"object_def","","",37,null],[13,"attribute_list","","",37,null],[13,"object","","",37,null],[13,"function_def","","",37,null],[13,"function_signature","","",37,null],[13,"param_list","","",37,null],[13,"type_def","","",37,null],[13,"type_pattern","","",37,null],[13,"fn_pattern","","",37,null],[13,"type_pattern_list","","",37,null],[13,"module","","",37,null],[13,"assignment","","",37,null],[13,"value_update","","",37,null],[13,"import","","",37,null],[13,"control_flow","","",37,null],[13,"expression","","",37,null],[13,"exp_prefix","","",37,null],[13,"prefix_value","","",37,null],[13,"exp_infix","","",37,null],[13,"exp_primary","","",37,null],[13,"exp_parens","","",37,null],[13,"value","","",37,null],[13,"function_call","","",37,null],[13,"parameter_list","","",37,null],[13,"if_branch","","",37,null],[13,"accessor","","",37,null],[13,"fixed","","",37,null],[13,"integer","","",37,null],[13,"bool","","",37,null],[13,"ident","","",37,null],[13,"string","","",37,null],[13,"string_inner","","",37,null],[13,"char","","",37,null],[13,"control_flow_kw","","",37,null],[13,"prefix_minus","","",37,null],[13,"prefix_not","","",37,null],[13,"infix_times","","",37,null],[13,"infix_divide","","",37,null],[13,"infix_modulo","","",37,null],[13,"infix_plus","","",37,null],[13,"infix_minus","","",37,null],[13,"infix_and","","",37,null],[13,"infix_or","","",37,null],[13,"infix_comparison","","",37,null],[13,"compare_eq","","",37,null],[13,"compare_ne","","",37,null],[13,"compare_ge","","",37,null],[13,"compare_gt","","",37,null],[13,"compare_le","","",37,null],[13,"compare_lt","","",37,null],[13,"WHITESPACE","","",37,null],[13,"COMMENT","","",37,null],[3,"Hir","","The hir representation of an input file and all of its …",null,null],[12,"main_function","","",38,null],[12,"code_id","","",38,null],[12,"imported_modules","","",38,null],[3,"ImportDependencies","","Keeps track of all imported modules, uses indexes as keys",null,null],[11,"insert","","Inserts a dependency and the code span and returns its …",39,[[["span",3],["ident",4]],["usize",15]]],[11,"len","","",39,[[],["usize",15]]],[11,"is_empty","","",39,[[],["bool",15]]],[11,"get","","",39,[[["usize",15]]]],[11,"iter","","",39,[[]]],[0,"llir","debris_core","Low-level intermediate representation",null,null],[0,"llir_nodes","debris_core::llir","Contains every node that can be produced in the llir step.",null,null],[3,"Function","debris_core::llir::llir_nodes","A function node, contains other nodes",null,null],[12,"id","","The id of this function",40,null],[12,"returned_value","","The value that this function returns",40,null],[3,"FastStore","","Stores a \'fast\' variable",null,null],[12,"scoreboard","","The scoreboard of the target var",41,null],[12,"id","","The id of the target var",41,null],[12,"value","","The value to store into the target var",41,null],[3,"FastStoreFromResult","","Stores a \'fast\' variable from the result of another node",null,null],[12,"scoreboard","","The scoreboard of the target var",42,null],[12,"id","","The id of the target var",42,null],[12,"command","","The command to use",42,null],[3,"BinaryOperation","","Operates on two scoreboard values and stores the result …",null,null],[12,"scoreboard","","The scoreboard of the resulting value",43,null],[12,"id","","The id of the resulting value",43,null],[12,"lhs","","The left value",43,null],[12,"rhs","","The right value",43,null],[12,"operation","","The kind of operation",43,null],[3,"Call","","Calls a function",null,null],[12,"id","","The id of that function",44,null],[4,"Condition","","Evaluates a condition and returns either true or false",null,null],[13,"Compare","","Comparison between two values, eg. val1 <= val2",45,null],[12,"lhs","debris_core::llir::llir_nodes::Condition","",46,null],[12,"rhs","","",46,null],[12,"comparison","","",46,null],[13,"And","debris_core::llir::llir_nodes","",45,null],[13,"Or","","",45,null],[3,"Branch","","Branches based on a condition",null,null],[12,"condition","","The condition to test",47,null],[12,"pos_branch","","The node to execute if that condition is true",47,null],[12,"neg_branch","","The node to execute if that condition is false",47,null],[4,"ExecuteRawComponent","","A component for a raw execute command. Either string or …",null,null],[13,"String","","",48,null],[13,"ScoreboardValue","","",48,null],[3,"ExecuteRaw","","Executes a literal string",null,null],[12,"0","","",49,null],[3,"Write","","Writes a formatted message",null,null],[12,"target","","",50,null],[12,"message","","",50,null],[4,"WriteTarget","","The buffer to write to",null,null],[13,"Chat","","",51,null],[13,"Actionbar","","",51,null],[13,"Title","","",51,null],[13,"Subtitle","","",51,null],[4,"Node","","Any node",null,null],[13,"Function","","",52,null],[13,"FastStore","","",52,null],[13,"FastStoreFromResult","","",52,null],[13,"BinaryOperation","","",52,null],[13,"Call","","",52,null],[13,"Condition","","",52,null],[13,"Branch","","",52,null],[13,"Execute","","",52,null],[13,"Write","","",52,null],[11,"nodes","","",40,[[]]],[11,"calls_itself","","Checks if this function contains a node that calls this …",40,[[],["bool",15]]],[11,"is_empty","","",40,[[],["bool",15]]],[11,"not","","Returns a condition that is true, when this condition is …",45,[[],["condition",4]]],[11,"is_simple","","Checks whether this condition is \\\"simple\\\", which means …",45,[[],["bool",15]]],[11,"accessed_variables","","Recursively yields all variables that this condition …",45,[[]]],[11,"iter","","Iterates over this node and all other nodes that this …",52,[[]]],[11,"is_effect_free","","Returns whether this command has no side effect",52,[[],["bool",15]]],[11,"get_write","","If this node writes to a value, returns Some",52,[[],[["option",4],["itemid",3]]]],[11,"set_write_to","","Modifies this so, so that it writes to <code>target_id</code>",52,[[["itemid",3]]]],[0,"utils","debris_core::llir","",null,null],[3,"BlockId","debris_core::llir::utils","Identifies a single callable block of code",null,null],[4,"Scoreboard","","Identifies a specific scoreboard",null,null],[13,"Main","","The Main scoreboard, where all operations are per default",53,null],[13,"Custom","","Custom scoreboards, each with a unique identifier",53,null],[13,"Internal","","Special scorbeoards used for internal tracking",53,null],[4,"ScoreboardValue","","A Value that can be stored on a scoreboard",null,null],[13,"Static","","",54,null],[13,"Scoreboard","","",54,null],[11,"id","","",54,[[],[["option",4],["itemid",3]]]],[4,"ScoreboardOperation","","Any operation that can be executed on a scoreboard",null,null],[13,"Plus","","",55,null],[13,"Minus","","",55,null],[13,"Times","","",55,null],[13,"Divide","","",55,null],[13,"Modulo","","",55,null],[13,"Copy","","Copy the second value onto the first value",55,null],[13,"Min","","Set the first value to min(first, last)",55,null],[13,"Max","","Set the second value to max(first, last)",55,null],[4,"ScoreboardComparison","","Any comparison that can be executed on two scoreboard …",null,null],[13,"Equal","","",56,null],[13,"NotEqual","","",56,null],[13,"Greater","","",56,null],[13,"GreaterOrEqual","","",56,null],[13,"Less","","",56,null],[13,"LessOrEqual","","",56,null],[11,"flip_sides","","Flips the comparison (converts OP such that …",56,[[],["scoreboardcomparison",4]]],[11,"invert","","Inverts the comparison, such that it is exactly and only …",56,[[],["scoreboardcomparison",4]]],[3,"ItemId","","A unique identifier for an item",null,null],[12,"id","","",57,null],[12,"context","","",57,null],[0,"json_format","debris_core::llir","(Current incomplete) interface for minecrafts text …",null,null],[3,"FormattedText","debris_core::llir::json_format","",null,null],[12,"components","","",58,null],[4,"JsonFormatComponent","","",null,null],[13,"RawText","","",59,null],[13,"Score","","",59,null],[3,"Llir","debris_core::llir","The low-level intermediate representation struct",null,null],[12,"main_function","","The entry point of the program",60,null],[12,"functions","","The functions which were created, excluding the main …",60,null],[0,"mir","debris_core","Mid-level intermediate representation",null,null],[3,"MirBranchIf","debris_core::mir","Acts like <code>MirGotoContext</code>, if the condition is equal to …",null,null],[12,"span","","",61,null],[12,"pos_branch","","",61,null],[12,"neg_branch","","",61,null],[12,"pos_value","","The values returned by positive and negative branch",61,null],[12,"neg_value","","",61,null],[12,"value_id","","The id of the item returned by the block. None if nothing …",61,null],[12,"condition","","The condition, has to be a boolean (right now)",61,null],[3,"MirCall","","A function call to api functions",null,null],[12,"span","","",62,null],[12,"function","","",62,null],[12,"value","","",62,null],[12,"parameters","","",62,null],[12,"return_value","","",62,null],[3,"MirGotoContext","","Calls a specific block of a context",null,null],[12,"span","","",63,null],[12,"context_id","","",63,null],[12,"block_id","","The nth block of this context to go to",63,null],[3,"MirJumpLocation","","Command to start a new Block withing this context This …",null,null],[12,"index","","",64,null],[4,"MirNode","","Any node that can be part of the mir representation",null,null],[13,"Call","","A function call which goes to a new block and initializes …",65,null],[13,"GotoContext","","Goes to a specific jump location.",65,null],[13,"JumpLocation","","Marks a jump location. A jump location can be seen as a …",65,null],[13,"UpdateValue","","Updates the value of a variable. This is the only node …",65,null],[13,"ReturnValue","","Sets the return value for this context. Note that this …",65,null],[13,"BranchIf","","Branches if a condition evaluates to true",65,null],[3,"MirReturnValue","","Sets the return value for a given context",null,null],[12,"return_index","","A reference to the value to be returned, See <code>ReturnValues</code> …",66,null],[12,"context_id","","The context to set the return value for",66,null],[3,"MirUpdateValue","","Overrides the old value in the namespace struct with …",null,null],[12,"id","","",67,null],[12,"new_value","","",67,null],[4,"MirValue","","Any value that is used in the mir compilation and also in …",null,null],[13,"Concrete","","A concrete object Since concrete objects are already …",68,null],[13,"Template","","A template which marks a future object",68,null],[12,"id","debris_core::mir::MirValue","",69,null],[12,"class","","",69,null],[8,"MirVisitor","debris_core::mir","",null,null],[16,"Output","","",70,null],[11,"visit_node","","",70,[[["mirnode",4]]]],[10,"visit_call","","",70,[[["mircall",3]]]],[10,"visit_jump_location","","",70,[[["mirjumplocation",3]]]],[10,"visit_goto_context","","",70,[[["mirgotocontext",3]]]],[10,"visit_update_value","","",70,[[["mirupdatevalue",3]]]],[10,"visit_return_value","","",70,[[["mirreturnvalue",3]]]],[10,"visit_branch_if","","",70,[[["mirbranchif",3]]]],[3,"ContextId","","",null,null],[3,"MirContext","","Keeps track of single context, which can be a function, a …",null,null],[12,"compile_context","","A ref to the global compile context",71,null],[12,"span","","",71,null],[12,"kind","","",71,null],[12,"id","","The context id and the id of the corresponding namespace",71,null],[12,"nodes","","All mir nodes that are emitted",71,null],[12,"control_flow","","Which control flow mode is used for this context Most …",71,null],[12,"return_values","","The values returned by this function",71,null],[3,"MirContextInfo","","Helper struct which can hold mutable references to the …",null,null],[12,"context","","",72,null],[12,"arena","","",72,null],[3,"NamespaceArena","","",null,null],[3,"ReturnValues","","",null,null],[12,"template","","Stores the value and the span it is returned at",73,null],[4,"ContextKind","","Contains all possible \'kinds\' of contexts. This is for …",null,null],[13,"Block","","A simple block created by <code>{}</code>",74,null],[13,"Function","","A built-in function",74,null],[13,"NativeFunction","","A function created by a user",74,null],[13,"ComptimeConditionalBlock","","A block that is conditonally executed at compile time",74,null],[13,"RuntimeConditionalBlock","","A block that is conditionally executed at runtime",74,null],[4,"ControlFlowMode","","The mode how a <code>MirContext</code> exits",null,null],[13,"Normal","","Normal exit, just continue with the next nodes",75,null],[13,"Return","","Look for the current function and call the context after …",75,null],[3,"CachedFunctionSignature","","",null,null],[12,"parameters","","",76,null],[12,"return_type","","",76,null],[3,"MirBuilder","","Visits the hir and creates a mir from it",null,null],[12,"main_context","","The first visited function gets marked as the main …",77,null],[3,"Mir","","A Mid-level intermediate representation",null,null],[12,"contexts","","All contexts",78,null],[12,"namespaces","","",78,null],[3,"MirContextMap","","",null,null],[12,"main_context","","",79,null],[11,"get_main_context","","",79,[[],["mircontext",3]]],[11,"get","","",79,[[["contextid",3]],["mircontext",3]]],[11,"get_mut","","",79,[[["contextid",3]],["mircontext",3]]],[0,"objects","debris_core","Contains all objects which can be used in a debris …",null,null],[0,"obj_bool","debris_core::objects","",null,null],[5,"or_static","debris_core::objects::obj_bool","Returns the boolean or-ed with the static value",null,[[["objbool",3],["bool",15],["itemid",3]]]],[5,"and_static","","",null,[[["objbool",3],["bool",15],["itemid",3]]]],[3,"ObjBool","","A boolean value that is stored on a scoreboard",null,null],[12,"id","","",80,null],[11,"new","","",80,[[["itemid",3]]]],[11,"as_scoreboard_value","","",80,[[],["scoreboardvalue",4]]],[0,"obj_bool_static","debris_core::objects","",null,null],[3,"ObjStaticBool","debris_core::objects::obj_bool_static","",null,null],[12,"value","","",81,null],[0,"obj_class","debris_core::objects","",null,null],[6,"ClassRef","debris_core::objects::obj_class","A reference to a class",null,null],[8,"HasClass","","Marks objects that have a class",null,null],[10,"class","","Returns the class of this object",82,[[["compilecontext",3]],["classref",6]]],[3,"ObjClass","","The class of a value.",null,null],[11,"new","","Constructs a new class with a <code>typ</code> and class properties",83,[[["type",4],["objectproperties",6]]]],[11,"as_generic_ref","","",83,[[["rc",3]],["genericclassref",6]]],[11,"get_property","","Retrieves a property of this class",83,[[["ident",4]],[["objectref",3],["option",4]]]],[11,"set_property","","Changes a property of this class",83,[[["objectref",3],["ident",4]]]],[11,"get_properties","","",83,[[],[["ref",3],["objectproperties",6]]]],[11,"new_empty","","Constructs a new class with a <code>typ</code>",83,[[["type",4]]]],[11,"is","","Returns whether this class is the same class as <code>other</code>",83,[[["objclass",3]],["bool",15]]],[11,"typ","","",83,[[],["type",4]]],[6,"GenericClassRef","","",null,null],[3,"GenericClass","","",null,null],[11,"new","","",84,[[["rc",3]]]],[11,"into_class_ref","","",84,[[],["rc",3]]],[11,"class","","",84,[[],["classref",6]]],[11,"get_property","","",84,[[["ident",4]],[["objectref",3],["option",4]]]],[11,"typ","","",84,[[],["type",4]]],[11,"matches","","Whether this class matches the other class",84,[[["genericclass",3]],["bool",15]]],[11,"set_generics","","",84,[[["vec",3],["string",3],["typepattern",4]]]],[11,"get_generics","","",84,[[["str",15]],["option",4]]],[0,"obj_function","debris_core::objects","",null,null],[3,"ObjFunction","debris_core::objects::obj_function","A function object",null,null],[11,"new","","",85,[[["functionoverload",3],["vec",3],["compilecontext",3]]]],[11,"new_single","","",85,[[["compilecontext",3]]]],[11,"overload","","",85,[[],[["option",4],["functionoverload",3]]]],[11,"expected_signatures","","Returns every possible signature as (params, return) …",85,[[]]],[4,"FunctionParameters","","Decides which arguments a function can accepts",null,null],[13,"Any","","",86,null],[13,"Specific","","",86,null],[3,"FunctionContext","","The context which gets passed to a function",null,null],[12,"compile_context","","",87,null],[12,"namespaces","","",87,null],[12,"parent","","",87,null],[12,"item_id","","The id for the returned value",87,null],[12,"span","","The current span",87,null],[12,"mir_contexts","","All generated mir contexts mir contexts",87,null],[6,"FunctionSignatureRef","","",null,null],[3,"FunctionSignature","","A signature containing expected parameters and return type",null,null],[11,"new","","",88,[[["genericclassref",6],["functionparameters",4]]]],[11,"matches","","Returns whether the args iterator matches all of the …",88,[[],["bool",15]]],[11,"parameters","","",88,[[],["functionparameters",4]]],[11,"return_type","","",88,[[],["genericclassref",6]]],[3,"FunctionOverload","","A signature describing a single overload of a function",null,null],[11,"new","","",89,[[["debrisfunctioninterface",3],["functionsignatureref",6]]]],[11,"signature","","",89,[[],["functionsignature",3]]],[11,"function","","",89,[[],[["rc",3],["debrisfunctioninterface",3]]]],[11,"emit","","Adds a node to the previously emitted nodes",87,[[["node",4]]]],[11,"null","","Shortcut for returning <code>ObjNull</code>",87,[[],["objectref",3]]],[11,"make_context","","Creates a new namespace context which can be used to …",87,[[],["index",3]]],[11,"get_object","","Tries to get a property starting at the <code>start</code> namespace …",87,[[["ident",4],["contextid",3]],[["objectref",3],["option",4]]]],[11,"set_object","","Sets an object in this namespace",87,[[["index",3],["objectref",3],["ident",4]]]],[0,"obj_int","debris_core::objects","",null,null],[3,"ObjInt","debris_core::objects::obj_int","A dynamic Integer",null,null],[12,"id","","The id of the item",90,null],[11,"new","","Creates a new dynamic integer with this id",90,[[["itemid",3]]]],[11,"as_scoreboard_value","","Returns a <code>ScoreboardValue</code> which identifies a specific …",90,[[],["scoreboardvalue",4]]],[0,"obj_int_static","debris_core::objects","",null,null],[3,"ObjStaticInt","debris_core::objects::obj_int_static","A static integer object",null,null],[12,"value","","",91,null],[11,"new","","Creates a new static integers with this value",91,[[]]],[11,"as_scoreboard_value","","Returns a <code>ScoreboardValue</code> which matches this int",91,[[],["scoreboardvalue",4]]],[0,"obj_module","debris_core::objects","",null,null],[3,"ObjModule","debris_core::objects::obj_module","A module object",null,null],[11,"new","","Creates a new empty module with this name",92,[[]]],[11,"with_members","","",92,[[["objectproperties",6],["ident",4]]]],[11,"ident","","Returns the ident of this module",92,[[],["ident",4]]],[11,"members","","",92,[[]]],[11,"set_property","","Sets a property",92,[[["objectref",3],["into",8],["ident",4]],[["objectref",3],["option",4]]]],[11,"register","","Registers a value for the first time",92,[[["objectref",3],["into",8],["ident",4]]]],[11,"register_typed_function","","Registers a simple api-function whose signature specifies …",92,[[["compilecontext",3]]]],[3,"ModuleFactory","","A wrapper function for functions that return modules",null,null],[11,"new","","",93,[[["fn",8],["bool",15]]]],[11,"call","","",93,[[["compilecontext",3]],["objmodule",3]]],[11,"import_members","","",93,[[],["bool",15]]],[0,"obj_native_function","debris_core::objects","",null,null],[5,"match_parameters","debris_core::objects::obj_native_function","",null,[[],["bool",15]]],[3,"FunctionParameterDefinition","","",null,null],[12,"name","","",94,null],[12,"expected_type","","",94,null],[12,"span","","",94,null],[3,"ObjNativeFunction","","A callable function object for functions declared in …",null,null],[11,"new","","",95,[[["cachedfunctionsignature",3],["genericclassref",6],["contextid",3],["rc",3],["compilecontext",3]]]],[3,"ObjNativeFunctionSignature","","Created when the mir comes across a function definition, …",null,null],[12,"native_function_id","","",96,null],[12,"function_span","","",96,null],[12,"attributes","","",96,null],[12,"return_type_span","","",96,null],[12,"definition_scope","","",96,null],[11,"new","","",96,[[["usize",15],["accessor",4],["vec",3],["contextid",3],["typepattern",4],["span",3],["compilecontext",3]]]],[0,"obj_null","debris_core::objects","",null,null],[3,"ObjNull","debris_core::objects::obj_null","",null,null],[11,"instance","","",97,[[["compilecontext",3]],["objectref",3]]],[0,"obj_string","debris_core::objects","",null,null],[3,"ObjString","debris_core::objects::obj_string","A static string object",null,null],[11,"new","","",98,[[["string",3]]]],[11,"as_str","","",98,[[],["str",15]]],[0,"error","debris_core","Compilation error handling",null,null],[3,"SliceOwned","debris_core::error","An owned counterpart to the <code>annotate_snippets::Slice</code> …",null,null],[12,"source","","",99,null],[12,"origin","","",99,null],[12,"annotations","","",99,null],[12,"fold","","",99,null],[3,"SnippetOwned","","An owned counterpart to the <code>annotate_snippets::Snippet</code> …",null,null],[12,"title","","",100,null],[12,"id","","",100,null],[12,"annotation_type","","",100,null],[12,"slices","","",100,null],[12,"footer","","",100,null],[3,"SourceAnnotationOwned","","An owned counterpart to the …",null,null],[12,"annotation_type","","",101,null],[12,"range","","",101,null],[12,"label","","",101,null],[3,"ParseError","","Thrown when parsing bad input",null,null],[12,"span","","The span where this error occured",102,null],[12,"expected","","Symbols which were expected instead",102,null],[3,"LangError","","A generic error which gets thrown when compiling",null,null],[12,"kind","","The specific error",103,null],[12,"span","","",103,null],[4,"LangErrorKind","","Specifies a specific error reason",null,null],[13,"VariableAlreadyDefined","","",104,null],[12,"name","debris_core::error::LangErrorKind","",105,null],[12,"previous_definition","","",105,null],[13,"UnexpectedType","debris_core::error","",104,null],[12,"expected","debris_core::error::LangErrorKind","",106,null],[12,"got","","",106,null],[12,"declared","","",106,null],[13,"UnexpectedPattern","debris_core::error","",104,null],[12,"got","debris_core::error::LangErrorKind","",107,null],[13,"UnexpectedOverload","debris_core::error","",104,null],[12,"parameters","debris_core::error::LangErrorKind","",108,null],[12,"expected","","",108,null],[13,"MissingVariable","debris_core::error","",104,null],[12,"var_name","debris_core::error::LangErrorKind","",109,null],[12,"similar","","",109,null],[12,"notes","","",109,null],[13,"MissingProperty","debris_core::error","",104,null],[12,"property","debris_core::error::LangErrorKind","",110,null],[12,"parent","","",110,null],[12,"similar","","",110,null],[13,"ConstVariable","debris_core::error","",104,null],[12,"var_name","debris_core::error::LangErrorKind","",111,null],[13,"UnexpectedOperator","debris_core::error","",104,null],[12,"operator","debris_core::error::LangErrorKind","",112,null],[12,"lhs","","",112,null],[12,"rhs","","",112,null],[13,"UnpromotableType","debris_core::error","",104,null],[12,"got","debris_core::error::LangErrorKind","",113,null],[13,"MissingModule","debris_core::error","",104,null],[12,"path","debris_core::error::LangErrorKind","",114,null],[12,"error","","",114,null],[13,"CircularImport","debris_core::error","",104,null],[12,"module","debris_core::error::LangErrorKind","",115,null],[13,"InvalidControlFlow","debris_core::error","",104,null],[12,"mode","debris_core::error::LangErrorKind","",116,null],[13,"UnreachableCode","debris_core::error","",104,null],[13,"NotYetImplemented","","",104,null],[12,"msg","debris_core::error::LangErrorKind","",117,null],[6,"Result","debris_core::error","The result type used by most of the core functions",null,null],[6,"LangResult","","A result type which allows quick error throwing since no …",null,null],[8,"AsAnnotationSnippet","","",null,null],[10,"as_annotation_snippet","","",118,[[["compilecontext",3]],["snippetowned",3]]],[11,"to_string","","",118,[[["compilecontext",3]],["string",3]]],[4,"CompileError","","A Compile Error",null,null],[13,"ParseError","","An error which happens when parsing the input",119,null],[13,"LangError","","An error which happens when compiling the input",119,null],[11,"format","","",119,[[["compilecontext",3]],["string",3]]],[0,"function_interface","debris_core","This module contains a trait <code>ToFunctionInterface</code> which …",null,null],[3,"DebrisFunctionInterface","debris_core::function_interface","The common type for working with callbacks",null,null],[8,"NormalizedFunctionInterface","","Any function that can be called as a normal function …",null,null],[10,"call","","",120,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[8,"ValidReturnType","","Trait used for converting any valid return value into a …",null,null],[10,"into_result","","",121,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[10,"get_class","","If possible, returns the type of the return value",121,[[["compilecontext",3]],[["genericclassref",6],["option",4]]]],[8,"ToFunctionInterface","","This trait can convert functions into compatible …",null,null],[10,"to_function_interface","","",122,[[],[["box",3],["normalizedfunctioninterface",8]]]],[10,"query_parameters","","Static method for querying the accepted parameters",122,[[["compilecontext",3]],["functionparameters",4]]],[11,"query_return","","Static method for querying the return type, may be None",122,[[["compilecontext",3]],[["genericclassref",6],["option",4]]]],[0,"memory","debris_core","",null,null],[5,"copy","debris_core::memory","Copies a scoreboard value from source to destination",null,[[["itemid",3]],["node",4]]],[5,"mem_move","","Copies all items from source over to destination",null,[[["objectref",3]]]],[4,"MemoryLayout","","Specifies how a specific object lays out its runtime …",null,null],[13,"Unsized","","This type has no runtime memory",123,null],[13,"One","","This type has exactly one integer sized field",123,null],[13,"Multiple","","This type is spread across multiple fields",123,null],[3,"MemoryCounter","","Counter that can give out unique <code>ItemId</code>\'s",null,null],[11,"new","","",124,[[["usize",15],["contextid",3]]]],[11,"next_item","","",124,[[],["itemid",3]]],[11,"next_id","","",124,[[],["usize",15]]],[3,"CompileContext","debris_core","The Compilation context stores various information about …",null,null],[12,"config","","The current config which specifies how to compile",125,null],[12,"input_files","","The code files",125,null],[3,"Namespace","","",null,null],[12,"id_counter","","The current id counter for items that get added to this …",126,null],[3,"DebrisObject","","Objects are a central type for the compiler. Basically …",null,null],[12,"class","","The class of the object",127,null],[12,"layout","","The runtime memory layout of this object",127,null],[12,"payload","","The actual value",127,null],[8,"ObjectPayload","","A trait for values that can be used as debris object …",null,null],[10,"memory_layout","","Returns the memory layout of this specific object This …",128,[[["compilecontext",3]],["memorylayout",4]]],[11,"generic_class","","The class specific to this object. Contains additionally …",128,[[["compilecontext",3]],["genericclassref",6]]],[11,"get_property","","May be overwritten by distinct payloads which carry …",128,[[["ident",4]],[["objectref",3],["option",4]]]],[11,"as_function","","Interface any object can implement to be treated as a …",128,[[],[["option",4],["objfunction",3]]]],[6,"ObjectProperties","","The type of the properties map",null,null],[3,"ObjectRef","","This struct is used to pass objects arround",null,null],[8,"ValidPayload","","",null,null],[10,"as_any","","",129,[[],["any",8]]],[10,"eq","","Tests whether this object is equal to another object",129,[[["objectref",3]],["bool",15]]],[10,"into_object","","",129,[[["compilecontext",3]],["objectref",3]]],[10,"get_class","","",129,[[["compilecontext",3]],["classref",6]]],[4,"BuildMode","","The build mode for this compilation",null,null],[13,"Debug","","Debug build: produces slower code, but contains various …",130,null],[13,"Release","","Release build: optimized the code, drops most safety …",130,null],[3,"Config","","Holds data about the user specified configuration",null,null],[12,"project_name","","",131,null],[12,"project_description","","",131,null],[12,"default_scoreboard_name","","",131,null],[12,"build_mode","","",131,null],[4,"Type","","The type of a class object",null,null],[13,"Null","","The null type, implicitely return by function which don\'t …",132,null],[13,"StaticInt","","Compile time known 32-bit signed integer",132,null],[13,"DynamicInt","","32-bit signed integer known at runtime",132,null],[13,"StaticBool","","A boolean value known at compile time",132,null],[13,"DynamicBool","","Runtime boolean",132,null],[13,"String","","A compile time known string",132,null],[13,"Function","","Any function, native or api",132,null],[13,"Class","","The type of a class",132,null],[13,"Module","","Module type",132,null],[4,"TypePattern","","The enumeration of patterns allowed as function arguments",null,null],[13,"Any","","The Any pattern matches every type",133,null],[13,"Int","","The Int pattern matches every integer",133,null],[13,"Bool","","The Boolean pattern matches every boolean",133,null],[13,"Class","","A type pattern can also take any normal type",133,null],[11,"from","debris_core::hir","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","debris_core::hir::hir_nodes","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[],["bool",15]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[],["bool",15]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"equivalent","","",6,[[],["bool",15]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"equivalent","","",7,[[],["bool",15]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[],["bool",15]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"equivalent","","",9,[[],["bool",15]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[],["bool",15]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"equivalent","","",11,[[],["bool",15]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"equivalent","","",12,[[],["bool",15]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"equivalent","","",13,[[],["bool",15]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"equivalent","","",14,[[],["bool",15]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"equivalent","","",15,[[],["bool",15]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"equivalent","","",16,[[],["bool",15]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"equivalent","","",17,[[],["bool",15]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"equivalent","","",18,[[],["bool",15]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"equivalent","","",19,[[],["bool",15]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"equivalent","","",22,[[],["bool",15]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"equivalent","","",23,[[],["bool",15]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"equivalent","","",25,[[],["bool",15]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[],["bool",15]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"equivalent","","",27,[[],["bool",15]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"equivalent","","",28,[[],["bool",15]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"equivalent","","",29,[[],["bool",15]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"equivalent","","",30,[[],["bool",15]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"equivalent","","",31,[[],["bool",15]]],[11,"from","debris_core::hir","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"equivalent","","",35,[[],["bool",15]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"equivalent","","",34,[[],["bool",15]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"equivalent","","",37,[[],["bool",15]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","debris_core::llir","",60,[[]]],[11,"into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","debris_core::llir::llir_nodes","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"equivalent","","",41,[[],["bool",15]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"equivalent","","",43,[[],["bool",15]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"equivalent","","",44,[[],["bool",15]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"equivalent","","",45,[[],["bool",15]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"equivalent","","",48,[[],["bool",15]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"equivalent","","",49,[[],["bool",15]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","debris_core::llir::utils","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"equivalent","","",135,[[],["bool",15]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"equivalent","","",53,[[],["bool",15]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"equivalent","","",54,[[],["bool",15]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"equivalent","","",55,[[],["bool",15]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"equivalent","","",56,[[],["bool",15]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"equivalent","","",57,[[],["bool",15]]],[11,"from","debris_core::llir::json_format","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","debris_core::mir","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"equivalent","","",68,[[],["bool",15]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"equivalent","","",62,[[],["bool",15]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"equivalent","","",63,[[],["bool",15]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"equivalent","","",64,[[],["bool",15]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"equivalent","","",67,[[],["bool",15]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"equivalent","","",66,[[],["bool",15]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"equivalent","","",61,[[],["bool",15]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"equivalent","","",65,[[],["bool",15]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"equivalent","","",137,[[],["bool",15]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"equivalent","","",74,[[],["bool",15]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"equivalent","","",75,[[],["bool",15]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","debris_core","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"equivalent","","",126,[[],["bool",15]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"equivalent","","",138,[[],["bool",15]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"into_result","debris_core::objects::obj_bool","",80,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",80,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"equivalent","","",80,[[],["bool",15]]],[11,"into_result","debris_core::objects::obj_bool_static","",81,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",81,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"equivalent","","",81,[[],["bool",15]]],[11,"into_result","debris_core::objects::obj_class","",83,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",83,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"equivalent","","",83,[[],["bool",15]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"equivalent","","",84,[[],["bool",15]]],[11,"into_result","debris_core::objects::obj_function","",85,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",85,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"equivalent","","",85,[[],["bool",15]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"equivalent","","",86,[[],["bool",15]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_result","debris_core::objects::obj_int","",90,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",90,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"equivalent","","",90,[[],["bool",15]]],[11,"into_result","debris_core::objects::obj_int_static","",91,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",91,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"equivalent","","",91,[[],["bool",15]]],[11,"into_result","debris_core::objects::obj_module","",92,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",92,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"equivalent","","",92,[[],["bool",15]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","debris_core::objects::obj_native_function","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_result","","",95,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",95,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"equivalent","","",95,[[],["bool",15]]],[11,"into_result","","",96,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",96,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"equivalent","","",96,[[],["bool",15]]],[11,"into_result","debris_core::objects::obj_null","",97,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",97,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"equivalent","","",97,[[],["bool",15]]],[11,"into_result","debris_core::objects::obj_string","",98,[[["functioncontext",3]],[["objectref",3],["result",4],["langerrorkind",4]]]],[11,"get_class","","",98,[[["compilecontext",3]],[["rc",3],["option",4]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"equivalent","","",98,[[],["bool",15]]],[11,"from","debris_core","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"equivalent","","",130,[[],["bool",15]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"equivalent","","",131,[[],["bool",15]]],[11,"from","debris_core::error","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"to_string","","",102,[[],["string",3]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"equivalent","","",102,[[],["bool",15]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"equivalent","","",103,[[],["bool",15]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"to_string","","",104,[[],["string",3]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"equivalent","","",104,[[],["bool",15]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"to_string","","",119,[[],["string",3]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"equivalent","","",119,[[],["bool",15]]],[11,"from","debris_core","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"to_string","","",133,[[],["string",3]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"equivalent","","",133,[[],["bool",15]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"to_string","","",132,[[],["string",3]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"equivalent","","",132,[[],["bool",15]]],[11,"from","debris_core::function_interface","",139,[[]]],[11,"into","","",139,[[]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","debris_core::memory","",123,[[]]],[11,"into","","",123,[[]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"equivalent","","",123,[[],["bool",15]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"equivalent","","",124,[[],["bool",15]]],[11,"visit_item","debris_core::mir","",77,[[["hiritem",4]]]],[11,"visit_object","","",77,[[["hirobject",4]]]],[11,"visit_struct","","",77,[[["hirstruct",3]]]],[11,"visit_module","","",77,[[["hirmodule",3]]]],[11,"visit_block","","",77,[[["hirblock",3]]]],[11,"visit_import","","",77,[[["hirimport",3]]]],[11,"visit_control_flow","","",77,[[["hircontrolflow",3]]]],[11,"visit_function","","",77,[[["hirfunction",3]]]],[11,"visit_conditional_branch","","",77,[[["hirconditionalbranch",3]]]],[11,"visit_statement","","",77,[[["hirstatement",4]]]],[11,"visit_expression","","",77,[[["hirexpression",4]]]],[11,"visit_function_call","","",77,[[["hirfunctioncall",3]]]],[11,"visit_variable_declaration","","",77,[[["hirvariableinitialization",3]]]],[11,"visit_variable_update","","",77,[[["hirvariableupdate",3]]]],[11,"visit_property_declaration","","",77,[[["hirpropertydeclaration",3]]]],[11,"visit_const_value","","",77,[[["hirconstvalue",4]]]],[11,"memory_layout","debris_core::objects::obj_bool","",80,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_bool_static","",81,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_class","",83,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_function","",85,[[["compilecontext",3]],["memorylayout",4]]],[11,"as_function","","",85,[[],[["option",4],["objfunction",3]]]],[11,"memory_layout","debris_core::objects::obj_int","",90,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_int_static","",91,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_module","",92,[[["compilecontext",3]],["memorylayout",4]]],[11,"get_property","","",92,[[["ident",4]],[["objectref",3],["option",4]]]],[11,"memory_layout","debris_core::objects::obj_native_function","",95,[[["compilecontext",3]],["memorylayout",4]]],[11,"as_function","","",95,[[],[["option",4],["objfunction",3]]]],[11,"memory_layout","","",96,[[["compilecontext",3]],["memorylayout",4]]],[11,"generic_class","","",96,[[["compilecontext",3]],["genericclassref",6]]],[11,"memory_layout","debris_core::objects::obj_null","",97,[[["compilecontext",3]],["memorylayout",4]]],[11,"memory_layout","debris_core::objects::obj_string","",98,[[["compilecontext",3]],["memorylayout",4]]],[11,"class","debris_core::objects::obj_bool","",80,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_bool_static","",81,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_class","",83,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_function","",85,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_int","",90,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_int_static","",91,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_module","",92,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_native_function","",95,[[["compilecontext",3]],["classref",6]]],[11,"class","","",96,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_null","",97,[[["compilecontext",3]],["classref",6]]],[11,"class","debris_core::objects::obj_string","",98,[[["compilecontext",3]],["classref",6]]],[11,"as_annotation_snippet","debris_core::error","",102,[[["compilecontext",3]],["snippetowned",3]]],[11,"as_annotation_snippet","","",103,[[["compilecontext",3]],["snippetowned",3]]],[11,"as_annotation_snippet","","",119,[[["compilecontext",3]],["snippetowned",3]]],[11,"into_result","debris_core","",140,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[11,"get_class","","",140,[[["compilecontext",3]],[["genericclassref",6],["option",4]]]],[11,"into_result","","",140,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[11,"get_class","","",140,[[["compilecontext",3]],[["genericclassref",6],["option",4]]]],[11,"into_result","","",138,[[["functioncontext",3]],[["langresult",6],["objectref",3]]]],[11,"get_class","","",138,[[["compilecontext",3]],[["genericclassref",6],["option",4]]]],[11,"drop","","",125,[[]]],[11,"from","debris_core::hir","",35,[[["span",3]]]],[11,"from","","",34,[[["spannedidentifier",3]]]],[11,"from","debris_core::mir","",68,[[["objectref",3]]]],[11,"from","","",137,[[["index",3]]]],[11,"from","","",75,[[["hircontrolkind",4]]]],[11,"from","debris_core","",126,[[["contextid",3]]]],[11,"from","","",138,[[["debrisobject",3]]]],[11,"from","debris_core::objects::obj_bool","",80,[[["itemid",3]]]],[11,"from","debris_core::objects::obj_bool_static","",81,[[["bool",15]]]],[11,"from","debris_core::objects::obj_function","",86,[[["vec",3],["typepattern",4]]]],[11,"from","debris_core::objects::obj_int","",90,[[["itemid",3]]]],[11,"from","debris_core::objects::obj_int_static","",91,[[["i8",15]]]],[11,"from","","",91,[[["i16",15]]]],[11,"from","","",91,[[["i32",15]]]],[11,"from","","",91,[[["i64",15]]]],[11,"from","","",91,[[["i128",15]]]],[11,"from","","",91,[[["isize",15]]]],[11,"from","","",91,[[["u8",15]]]],[11,"from","","",91,[[["u16",15]]]],[11,"from","","",91,[[["u32",15]]]],[11,"from","","",91,[[["u64",15]]]],[11,"from","","",91,[[["u128",15]]]],[11,"from","","",91,[[["usize",15]]]],[11,"from","debris_core::objects::obj_module","",93,[[]]],[11,"from","debris_core::objects::obj_null","",97,[[]]],[11,"from","debris_core::objects::obj_string","",98,[[["string",3]]]],[11,"from","debris_core::error","",119,[[["parseerror",3]]]],[11,"from","","",119,[[["langerror",3]]]],[11,"from","debris_core","",133,[[["genericclassref",6]]]],[11,"from","debris_core::function_interface","",139,[[["box",3],["normalizedfunctioninterface",8]]]],[11,"from","","",139,[[]]],[11,"clone","debris_core::hir::hir_nodes","",0,[[],["hirconstvalue",4]]],[11,"clone","","",5,[[],["hircomparisonoperator",4]]],[11,"clone","","",6,[[],["hirinfixoperator",4]]],[11,"clone","","",7,[[],["hirinfix",3]]],[11,"clone","","",8,[[],["hirprefixoperator",4]]],[11,"clone","","",9,[[],["hirprefix",3]]],[11,"clone","","",11,[[],["hircontrolkind",4]]],[11,"clone","","",13,[[],["hirparameterdeclaration",3]]],[11,"clone","","",23,[[],["hirtypepattern",4]]],[11,"clone","debris_core::hir","",35,[[],["spannedidentifier",3]]],[11,"clone","","",34,[[],["identifierpath",3]]],[11,"clone","","",37,[[],["rule",4]]],[11,"clone","debris_core::llir::llir_nodes","",43,[[],["binaryoperation",3]]],[11,"clone","","",44,[[],["call",3]]],[11,"clone","","",45,[[],["condition",4]]],[11,"clone","","",51,[[],["writetarget",4]]],[11,"clone","debris_core::llir::utils","",135,[[],["blockid",3]]],[11,"clone","","",53,[[],["scoreboard",4]]],[11,"clone","","",54,[[],["scoreboardvalue",4]]],[11,"clone","","",55,[[],["scoreboardoperation",4]]],[11,"clone","","",56,[[],["scoreboardcomparison",4]]],[11,"clone","","",57,[[],["itemid",3]]],[11,"clone","debris_core::mir","",68,[[],["mirvalue",4]]],[11,"clone","","",137,[[],["contextid",3]]],[11,"clone","","",74,[[],["contextkind",4]]],[11,"clone","","",75,[[],["controlflowmode",4]]],[11,"clone","debris_core","",138,[[],["objectref",3]]],[11,"clone","debris_core::objects::obj_class","",83,[[],["objclass",3]]],[11,"clone","debris_core::objects::obj_function","",85,[[],["objfunction",3]]],[11,"clone","","",86,[[],["functionparameters",4]]],[11,"clone","","",89,[[],["functionoverload",3]]],[11,"clone","debris_core::objects::obj_int","",90,[[],["objint",3]]],[11,"clone","debris_core::objects::obj_int_static","",91,[[],["objstaticint",3]]],[11,"clone","debris_core::objects::obj_module","",92,[[],["objmodule",3]]],[11,"clone","debris_core::objects::obj_native_function","",94,[[],["functionparameterdefinition",3]]],[11,"clone","","",95,[[],["objnativefunction",3]]],[11,"clone","","",96,[[],["objnativefunctionsignature",3]]],[11,"clone","debris_core::objects::obj_null","",97,[[],["objnull",3]]],[11,"clone","debris_core::objects::obj_string","",98,[[],["objstring",3]]],[11,"clone","debris_core::error","",102,[[],["parseerror",3]]],[11,"clone","","",103,[[],["langerror",3]]],[11,"clone","","",104,[[],["langerrorkind",4]]],[11,"clone","","",119,[[],["compileerror",4]]],[11,"clone","debris_core","",133,[[],["typepattern",4]]],[11,"clone","","",132,[[],["type",4]]],[11,"default","debris_core::hir","",39,[[],["importdependencies",3]]],[11,"default","debris_core::mir","",136,[[],["namespacearena",3]]],[11,"default","","",73,[[],["returnvalues",3]]],[11,"default","","",75,[[]]],[11,"default","","",78,[[],["mir",3]]],[11,"default","","",79,[[],["mircontextmap",3]]],[11,"default","debris_core","",125,[[],["compilecontext",3]]],[11,"default","","",131,[[]]],[11,"cmp","debris_core::hir","",37,[[["rule",4]],["ordering",4]]],[11,"cmp","debris_core::llir::utils","",135,[[["blockid",3]],["ordering",4]]],[11,"eq","debris_core::hir::hir_nodes","",0,[[["hirconstvalue",4]],["bool",15]]],[11,"ne","","",0,[[["hirconstvalue",4]],["bool",15]]],[11,"eq","","",5,[[["hircomparisonoperator",4]],["bool",15]]],[11,"eq","","",6,[[["hirinfixoperator",4]],["bool",15]]],[11,"ne","","",6,[[["hirinfixoperator",4]],["bool",15]]],[11,"eq","","",7,[[["hirinfix",3]],["bool",15]]],[11,"ne","","",7,[[["hirinfix",3]],["bool",15]]],[11,"eq","","",8,[[["hirprefixoperator",4]],["bool",15]]],[11,"eq","","",9,[[["hirprefix",3]],["bool",15]]],[11,"ne","","",9,[[["hirprefix",3]],["bool",15]]],[11,"eq","","",10,[[["hirimport",3]],["bool",15]]],[11,"ne","","",10,[[["hirimport",3]],["bool",15]]],[11,"eq","","",11,[[["hircontrolkind",4]],["bool",15]]],[11,"eq","","",12,[[["hircontrolflow",3]],["bool",15]]],[11,"ne","","",12,[[["hircontrolflow",3]],["bool",15]]],[11,"eq","","",13,[[["hirparameterdeclaration",3]],["bool",15]]],[11,"ne","","",13,[[["hirparameterdeclaration",3]],["bool",15]]],[11,"eq","","",14,[[["hirvariableinitialization",3]],["bool",15]]],[11,"ne","","",14,[[["hirvariableinitialization",3]],["bool",15]]],[11,"eq","","",15,[[["hirvariableupdate",3]],["bool",15]]],[11,"ne","","",15,[[["hirvariableupdate",3]],["bool",15]]],[11,"eq","","",16,[[["hirpropertydeclaration",3]],["bool",15]]],[11,"ne","","",16,[[["hirpropertydeclaration",3]],["bool",15]]],[11,"eq","","",17,[[["hirfunctioncall",3]],["bool",15]]],[11,"ne","","",17,[[["hirfunctioncall",3]],["bool",15]]],[11,"eq","","",18,[[["hirconditionalbranch",3]],["bool",15]]],[11,"ne","","",18,[[["hirconditionalbranch",3]],["bool",15]]],[11,"eq","","",19,[[["hirexpression",4]],["bool",15]]],[11,"ne","","",19,[[["hirexpression",4]],["bool",15]]],[11,"eq","","",22,[[["hirstatement",4]],["bool",15]]],[11,"ne","","",22,[[["hirstatement",4]],["bool",15]]],[11,"eq","","",23,[[["hirtypepattern",4]],["bool",15]]],[11,"ne","","",23,[[["hirtypepattern",4]],["bool",15]]],[11,"eq","","",25,[[["hirblock",3]],["bool",15]]],[11,"ne","","",25,[[["hirblock",3]],["bool",15]]],[11,"eq","","",26,[[["attribute",3]],["bool",15]]],[11,"ne","","",26,[[["attribute",3]],["bool",15]]],[11,"eq","","",27,[[["hirfunction",3]],["bool",15]]],[11,"ne","","",27,[[["hirfunction",3]],["bool",15]]],[11,"eq","","",28,[[["hirstruct",3]],["bool",15]]],[11,"ne","","",28,[[["hirstruct",3]],["bool",15]]],[11,"eq","","",29,[[["hirmodule",3]],["bool",15]]],[11,"ne","","",29,[[["hirmodule",3]],["bool",15]]],[11,"eq","","",30,[[["hirobject",4]],["bool",15]]],[11,"ne","","",30,[[["hirobject",4]],["bool",15]]],[11,"eq","","",31,[[["hiritem",4]],["bool",15]]],[11,"ne","","",31,[[["hiritem",4]],["bool",15]]],[11,"eq","debris_core::hir","",35,[[["spannedidentifier",3]],["bool",15]]],[11,"ne","","",35,[[["spannedidentifier",3]],["bool",15]]],[11,"eq","","",34,[[["identifierpath",3]],["bool",15]]],[11,"ne","","",34,[[["identifierpath",3]],["bool",15]]],[11,"eq","","",37,[[["rule",4]],["bool",15]]],[11,"eq","debris_core::llir::llir_nodes","",41,[[["faststore",3]],["bool",15]]],[11,"ne","","",41,[[["faststore",3]],["bool",15]]],[11,"eq","","",43,[[["binaryoperation",3]],["bool",15]]],[11,"ne","","",43,[[["binaryoperation",3]],["bool",15]]],[11,"eq","","",44,[[["call",3]],["bool",15]]],[11,"ne","","",44,[[["call",3]],["bool",15]]],[11,"eq","","",45,[[["condition",4]],["bool",15]]],[11,"ne","","",45,[[["condition",4]],["bool",15]]],[11,"eq","","",48,[[["executerawcomponent",4]],["bool",15]]],[11,"ne","","",48,[[["executerawcomponent",4]],["bool",15]]],[11,"eq","","",49,[[["executeraw",3]],["bool",15]]],[11,"ne","","",49,[[["executeraw",3]],["bool",15]]],[11,"eq","debris_core::llir::utils","",135,[[["blockid",3]],["bool",15]]],[11,"ne","","",135,[[["blockid",3]],["bool",15]]],[11,"eq","","",53,[[["scoreboard",4]],["bool",15]]],[11,"ne","","",53,[[["scoreboard",4]],["bool",15]]],[11,"eq","","",54,[[["scoreboardvalue",4]],["bool",15]]],[11,"ne","","",54,[[["scoreboardvalue",4]],["bool",15]]],[11,"eq","","",55,[[["scoreboardoperation",4]],["bool",15]]],[11,"eq","","",56,[[["scoreboardcomparison",4]],["bool",15]]],[11,"eq","","",57,[[["itemid",3]],["bool",15]]],[11,"ne","","",57,[[["itemid",3]],["bool",15]]],[11,"eq","debris_core::mir","",68,[[["mirvalue",4]],["bool",15]]],[11,"ne","","",68,[[["mirvalue",4]],["bool",15]]],[11,"eq","","",63,[[["mirgotocontext",3]],["bool",15]]],[11,"ne","","",63,[[["mirgotocontext",3]],["bool",15]]],[11,"eq","","",64,[[["mirjumplocation",3]],["bool",15]]],[11,"ne","","",64,[[["mirjumplocation",3]],["bool",15]]],[11,"eq","","",67,[[["mirupdatevalue",3]],["bool",15]]],[11,"ne","","",67,[[["mirupdatevalue",3]],["bool",15]]],[11,"eq","","",66,[[["mirreturnvalue",3]],["bool",15]]],[11,"ne","","",66,[[["mirreturnvalue",3]],["bool",15]]],[11,"eq","","",61,[[["mirbranchif",3]],["bool",15]]],[11,"ne","","",61,[[["mirbranchif",3]],["bool",15]]],[11,"eq","","",65,[[["mirnode",4]],["bool",15]]],[11,"ne","","",65,[[["mirnode",4]],["bool",15]]],[11,"eq","","",62,[[["mircall",3]],["bool",15]]],[11,"eq","","",137,[[["contextid",3]],["bool",15]]],[11,"ne","","",137,[[["contextid",3]],["bool",15]]],[11,"eq","","",74,[[["contextkind",4]],["bool",15]]],[11,"eq","","",75,[[["controlflowmode",4]],["bool",15]]],[11,"eq","debris_core","",126,[[["namespace",3]],["bool",15]]],[11,"ne","","",126,[[["namespace",3]],["bool",15]]],[11,"eq","","",138,[[["objectref",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_bool","",80,[[["objbool",3]],["bool",15]]],[11,"ne","","",80,[[["objbool",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_bool_static","",81,[[["objstaticbool",3]],["bool",15]]],[11,"ne","","",81,[[["objstaticbool",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_class","",83,[[],["bool",15]]],[11,"eq","","",84,[[["genericclass",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_function","",85,[[["objfunction",3]],["bool",15]]],[11,"eq","","",86,[[["functionparameters",4]],["bool",15]]],[11,"ne","","",86,[[["functionparameters",4]],["bool",15]]],[11,"eq","debris_core::objects::obj_int","",90,[[["objint",3]],["bool",15]]],[11,"ne","","",90,[[["objint",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_int_static","",91,[[["objstaticint",3]],["bool",15]]],[11,"ne","","",91,[[["objstaticint",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_module","",92,[[["objmodule",3]],["bool",15]]],[11,"ne","","",92,[[["objmodule",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_native_function","",95,[[["objnativefunction",3]],["bool",15]]],[11,"ne","","",95,[[["objnativefunction",3]],["bool",15]]],[11,"eq","","",96,[[["objnativefunctionsignature",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_null","",97,[[["objnull",3]],["bool",15]]],[11,"eq","debris_core::objects::obj_string","",98,[[["objstring",3]],["bool",15]]],[11,"ne","","",98,[[["objstring",3]],["bool",15]]],[11,"eq","debris_core","",130,[[["buildmode",4]],["bool",15]]],[11,"eq","","",131,[[["config",3]],["bool",15]]],[11,"ne","","",131,[[["config",3]],["bool",15]]],[11,"eq","debris_core::error","",102,[[["parseerror",3]],["bool",15]]],[11,"ne","","",102,[[["parseerror",3]],["bool",15]]],[11,"eq","","",103,[[["langerror",3]],["bool",15]]],[11,"ne","","",103,[[["langerror",3]],["bool",15]]],[11,"eq","","",104,[[["langerrorkind",4]],["bool",15]]],[11,"ne","","",104,[[["langerrorkind",4]],["bool",15]]],[11,"eq","","",119,[[["compileerror",4]],["bool",15]]],[11,"ne","","",119,[[["compileerror",4]],["bool",15]]],[11,"eq","debris_core","",133,[[["typepattern",4]],["bool",15]]],[11,"ne","","",133,[[["typepattern",4]],["bool",15]]],[11,"eq","","",132,[[["type",4]],["bool",15]]],[11,"eq","debris_core::memory","",123,[[["memorylayout",4]],["bool",15]]],[11,"ne","","",123,[[["memorylayout",4]],["bool",15]]],[11,"eq","","",124,[[["memorycounter",3]],["bool",15]]],[11,"ne","","",124,[[["memorycounter",3]],["bool",15]]],[11,"partial_cmp","debris_core::hir","",37,[[["rule",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","debris_core::llir::utils","",135,[[["blockid",3]],[["ordering",4],["option",4]]]],[11,"deref","debris_core::mir","",136,[[]]],[11,"deref","debris_core","",138,[[]]],[11,"deref","debris_core::objects::obj_string","",98,[[]]],[11,"deref_mut","debris_core::mir","",136,[[]]],[11,"fmt","debris_core::hir","",36,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::hir::hir_nodes","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::hir","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir","",60,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir::llir_nodes","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir::utils","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::llir::json_format","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::mir","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","","",138,[[["formatter",3]],["result",6]]],[11,"fmt","","",127,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_bool","",80,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_bool_static","",81,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_class","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_function","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_int","",90,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_int_static","",91,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_module","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_native_function","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_null","",97,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_string","",98,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",130,[[["formatter",3]],["result",6]]],[11,"fmt","","",131,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::error","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::memory","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::mir","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_class","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::objects::obj_function","",88,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core::error","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",103,[[["formatter",3]],["result",6]]],[11,"fmt","debris_core","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"hash","debris_core::hir","",35,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",37,[[]]],[11,"hash","debris_core::llir::utils","",135,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",57,[[]]],[11,"hash","debris_core::mir","",137,[[]]],[11,"hash","debris_core::objects::obj_class","",83,[[]]],[11,"hash","debris_core","",132,[[]]],[11,"from_str","","",132,[[["str",15]],["result",4]]],[11,"source","debris_core::error","",119,[[],[["error",8],["option",4]]]],[11,"parse","debris_core::hir","",134,[[["str",15],["rule",4]],[["result",4],["pairs",3],["error",3]]]],[11,"from_code","","Creates a [HirFile] from code.",36,[[["importdependencies",3],["coderef",3],["compilecontext",3]],["result",6]]],[11,"new","","",32,[[["coderef",3],["compilecontext",3],["importdependencies",3]]]],[11,"span","","",32,[[["span",3]],["span",3]]],[11,"normalize_pest_span","","",32,[[["usize",15],["span",3]],["span",3]]],[11,"get_ident","","",32,[[["spannedidentifier",3]],["ident",4]]],[11,"add_import_file","","",32,[[["spannedidentifier",3]],["usize",15]]],[11,"new","","Creates a new <code>SpannedIdentifier</code> from the [Span]",35,[[["span",3]]]],[11,"new","","Creates a new IdentifierPath from the vec of identifiers",34,[[["vec",3],["spannedidentifier",3]]]],[11,"single_ident","","",34,[[],[["option",4],["spannedidentifier",3]]]],[11,"span","","",34,[[],["span",3]]],[11,"from_mir","debris_core::llir","Compiles the mir into a llir",60,[[["namespacearena",3],["mircontextmap",3]],[["llir",3],["result",6]]]],[11,"get_function_calls","","",60,[[],[["hashmap",3],["usize",15],["blockid",3]]]],[11,"null","debris_core::mir","Creates a new mir value that is null",68,[[["compilecontext",3]]]],[11,"get_property","","Gets a property from the value",68,[[["ident",4]],[["objectref",3],["option",4]]]],[11,"class","","Returns the class of this value",68,[[],["genericclassref",6]]],[11,"expect_concrete","","",68,[[["str",15]],["objectref",3]]],[11,"concrete","","",68,[[],[["objectref",3],["option",4]]]],[11,"expect_template","","",68,[[["str",15]]]],[11,"template","","",68,[[],["option",4]]],[11,"assert_type","","Asserts that the type of this value matches <code>typ</code> and …",68,[[["typepattern",4],["span",3],["option",4]],["result",6]]],[11,"visit_node","","",70,[[["mirnode",4]]]],[11,"push","","Pushes a node to the current context",72,[[["mirnode",4]]]],[11,"add_value","","Adds a value to the current namespace. Fails if the ident …",72,[[["mirvalue",4],["span",3],["ident",4]],["result",6]]],[11,"add_anonymous_template","","Adds the class as an anonymous template and returns it as …",72,[[["genericclassref",6]],["mirvalue",4]]],[11,"convert_into_template","","",72,[[["itemid",3]]]],[11,"get_from_spanned_ident","","Returns the value that is associated with this ident",72,[[["spannedidentifier",3]],[["result",6],["mirvalue",4]]]],[11,"resolve_path","","Follows this path",72,[[["identifierpath",3]],[["accessedproperty",3],["result",6]]]],[11,"register_function_call","","Adds a function call to the current context",72,[[["option",4],["vec",3],["mirvalue",4],["span",3],["objectref",3]],["result",6]]],[11,"search","","",136,[[["ident",4],["contextid",3]],["option",4]]],[11,"as_inner","","",137,[[],["index",3]]],[11,"dummy","","For testing purposes, creates a dummy id",137,[[["usize",15]],["contextid",3]]],[11,"add","","",73,[[["mirvalue",4]],["usize",15]]],[11,"get","","",73,[[["usize",15]],[["option",4],["mirvalue",4]]]],[11,"get_template","","",73,[[],["option",4]]],[11,"new","","Creates a new context",71,[[["option",4],["contextid",3],["contextkind",4],["namespacearena",3],["span",3],["compilecontext",3]]]],[11,"namespace_mut","","",71,[[["namespacearena",3]],["namespace",3]]],[11,"namespace","","",71,[[["namespacearena",3]],["namespace",3]]],[11,"next_jump_location","","Increments the jump location counter and returns it",71,[[],["usize",15]]],[11,"register","","Loads the module into this scope",71,[[["namespacearena",3],["objmodule",3]]]],[11,"register_members","","Loads every member of the module (but not the module …",71,[[["namespacearena",3],["objmodule",3]]]],[11,"register_function_call","","Creates a function call    ",71,[[["span",3],["option",4],["namespacearena",3],["vec",3],["mirvalue",4],["objectref",3]],["result",6]]],[11,"add_value","","Adds a value that corresponds to <code>ident</code>",71,[[["ident",4],["namespacearena",3],["mirvalue",4],["span",3]],["result",6]]],[11,"add_anonymous_object","","Adds an anonymous object and returns a ref MirValue",71,[[["namespacearena",3],["objectref",3]],["mirvalue",4]]],[11,"add_anonymous_template","","Adds an anonymous value that is usually used temporarily",71,[[["namespacearena",3],["genericclassref",6]],["mirvalue",4]]],[11,"get_from_spanned_ident","","Looks up the value that corresponds to this ident",71,[[["spannedidentifier",3],["namespacearena",3]],[["result",6],["mirvalue",4]]]],[11,"get_ident","","Returns an ident from a span",71,[[["spannedidentifier",3]],["ident",4]]],[11,"get_type_pattern","","Returns the type pattern that belongs to a single spanned …",71,[[["spannedidentifier",3]],[["typepattern",4],["result",6]]]],[11,"resolve_path","","Resolves the accessor and returns the accessed element",71,[[["identifierpath",3],["namespacearena",3]],[["accessedproperty",3],["result",6]]]],[11,"is_dynamic","","Returns whether this context can only be executed at …",74,[[],["bool",15]]],[11,"can_return","","Whether a return statement can select this block as an …",74,[[],["bool",15]]],[11,"matches_control_flow","","Returns whether this context matches this control flow …",74,[[["hircontrolkind",4]],["bool",15]]],[11,"is_normal","","",75,[[],["bool",15]]],[11,"new","","",77,[[["mir",3],["compilecontext",3],["coderef",3]]]],[11,"context_mut","","Returns a mutable reference to the current context",77,[[],["mircontext",3]]],[11,"context","","Returns a shared reference to the current context",77,[[],["mircontext",3]]],[11,"context_info","","Returns a helper struct that contains both a context and …",77,[[],["mircontextinfo",3]]],[11,"namespace_mut","","Returns a mutable reference to the current namespace",77,[[],["namespace",3]]],[11,"arena_mut","","Returns a mutable reference to the global arena",77,[[],["namespacearena",3]]],[11,"arena","","Returns a shared reference to the global arena",77,[[],["namespacearena",3]]],[11,"context_info","","",78,[[["contextid",3]],["mircontextinfo",3]]],[11,"add_context","","",78,[[["mircontext",3]]]],[11,"from_hir","","Converts the hir into a mir",78,[[["compilecontext",3],["hir",3]],[["result",6],["mir",3]]]],[11,"type_ctx","debris_core","",125,[[],["typecontextref",3]]],[11,"add_input_file","","",125,[[["code",3]],["codeid",6]]],[11,"get_input_file","","",125,[[["codeid",6]],["code",3]]],[11,"get_unique_id","","Returns a unique id",125,[[],["usize",15]]],[11,"new","","Creates a new Namespace",126,[[["index",3],["option",4],["contextid",3]]]],[11,"iter","","",126,[[],["namespaceiterator",3]]],[11,"ancestor","","",126,[[],[["index",3],["option",4]]]],[11,"has_item_key","","Returns whether a given item has a corresponding key",126,[[["usize",15]],["bool",15]]],[11,"add_object","","Adds an object with a name to this namespace",126,[[["namespaceentry",4],["ident",4]],[["option",4],["usize",15]]]],[11,"add_value","","Adds an anonymous object (without name) to this namespace",126,[[["namespaceentry",4]],["usize",15]]],[11,"add_value_at","","Inserts the value at this index and returns the last …",126,[[["usize",15],["namespaceentry",4]],[["option",4],["namespaceentry",4]]]],[11,"replace_object_at","","Replaces the object with this id",126,[[["usize",15],["namespaceentry",4]],["namespaceentry",4]]],[11,"len","","The amount of objects in this namespace",126,[[],["usize",15]]],[11,"is_empty","","Thanks, clippy...",126,[[],["bool",15]]],[11,"get","","Retrieves a named object from this namespace together …",126,[[["ident",4],["arena",3]],["option",4]]],[11,"get_by_id","","Retrieves an object by its id from this namespace",126,[[["usize",15]],[["namespaceentry",4],["option",4]]]],[11,"generic_class","","The class specific to this object. Contains additionally …",128,[[["compilecontext",3]],["genericclassref",6]]],[11,"get_property","","May be overwritten by distinct payloads which carry …",128,[[["ident",4]],[["objectref",3],["option",4]]]],[11,"as_function","","Interface any object can implement to be treated as a …",128,[[],[["option",4],["objfunction",3]]]],[11,"from_payload","","",138,[[["objectpayload",8],["compilecontext",3]]]],[11,"get_property","","Tries to get a property that belongs to this object",127,[[["ident",4]],[["objectref",3],["option",4]]]],[11,"downcast_payload","","Converts the payload into its original type",127,[[],["option",4]]],[11,"is_instance","","Returns whether the payload is of type <code>T</code>",127,[[],["bool",15]]],[11,"is_release","","Whether the current build mode is release",130,[[],["bool",15]]],[11,"is_debug","","Whether the current build mode is debug",130,[[],["bool",15]]],[11,"as_snippet","debris_core::error","",100,[[],["snippet",3]]],[11,"as_slice","","",99,[[],["slice",3]]],[11,"as_source_annotation","","",101,[[],["sourceannotation",3]]],[11,"new","","",103,[[["langerrorkind",4],["span",3]]]],[11,"matches","debris_core","Returns whether this pattern can match the type",133,[[["genericclass",3]],["bool",15]]],[11,"from_str","","",133,[[["compilecontext",3],["str",15]],["option",4]]],[11,"is_int","","",132,[[],["bool",15]]],[11,"is_bool","","",132,[[],["bool",15]]],[11,"runtime_encodable","","Returns whether this type can be completely encoded at …",132,[[],["bool",15]]]],"p":[[4,"HirConstValue"],[13,"Integer"],[13,"Bool"],[13,"Fixed"],[13,"String"],[4,"HirComparisonOperator"],[4,"HirInfixOperator"],[3,"HirInfix"],[4,"HirPrefixOperator"],[3,"HirPrefix"],[3,"HirImport"],[4,"HirControlKind"],[3,"HirControlFlow"],[3,"HirParameterDeclaration"],[3,"HirVariableInitialization"],[3,"HirVariableUpdate"],[3,"HirPropertyDeclaration"],[3,"HirFunctionCall"],[3,"HirConditionalBranch"],[4,"HirExpression"],[13,"UnaryOperation"],[13,"BinaryOperation"],[4,"HirStatement"],[4,"HirTypePattern"],[13,"Function"],[3,"HirBlock"],[3,"Attribute"],[3,"HirFunction"],[3,"HirStruct"],[3,"HirModule"],[4,"HirObject"],[4,"HirItem"],[3,"HirContext"],[8,"HirVisitor"],[3,"IdentifierPath"],[3,"SpannedIdentifier"],[3,"HirFile"],[4,"Rule"],[3,"Hir"],[3,"ImportDependencies"],[3,"Function"],[3,"FastStore"],[3,"FastStoreFromResult"],[3,"BinaryOperation"],[3,"Call"],[4,"Condition"],[13,"Compare"],[3,"Branch"],[4,"ExecuteRawComponent"],[3,"ExecuteRaw"],[3,"Write"],[4,"WriteTarget"],[4,"Node"],[4,"Scoreboard"],[4,"ScoreboardValue"],[4,"ScoreboardOperation"],[4,"ScoreboardComparison"],[3,"ItemId"],[3,"FormattedText"],[4,"JsonFormatComponent"],[3,"Llir"],[3,"MirBranchIf"],[3,"MirCall"],[3,"MirGotoContext"],[3,"MirJumpLocation"],[4,"MirNode"],[3,"MirReturnValue"],[3,"MirUpdateValue"],[4,"MirValue"],[13,"Template"],[8,"MirVisitor"],[3,"MirContext"],[3,"MirContextInfo"],[3,"ReturnValues"],[4,"ContextKind"],[4,"ControlFlowMode"],[3,"CachedFunctionSignature"],[3,"MirBuilder"],[3,"Mir"],[3,"MirContextMap"],[3,"ObjBool"],[3,"ObjStaticBool"],[8,"HasClass"],[3,"ObjClass"],[3,"GenericClass"],[3,"ObjFunction"],[4,"FunctionParameters"],[3,"FunctionContext"],[3,"FunctionSignature"],[3,"FunctionOverload"],[3,"ObjInt"],[3,"ObjStaticInt"],[3,"ObjModule"],[3,"ModuleFactory"],[3,"FunctionParameterDefinition"],[3,"ObjNativeFunction"],[3,"ObjNativeFunctionSignature"],[3,"ObjNull"],[3,"ObjString"],[3,"SliceOwned"],[3,"SnippetOwned"],[3,"SourceAnnotationOwned"],[3,"ParseError"],[3,"LangError"],[4,"LangErrorKind"],[13,"VariableAlreadyDefined"],[13,"UnexpectedType"],[13,"UnexpectedPattern"],[13,"UnexpectedOverload"],[13,"MissingVariable"],[13,"MissingProperty"],[13,"ConstVariable"],[13,"UnexpectedOperator"],[13,"UnpromotableType"],[13,"MissingModule"],[13,"CircularImport"],[13,"InvalidControlFlow"],[13,"NotYetImplemented"],[8,"AsAnnotationSnippet"],[4,"CompileError"],[8,"NormalizedFunctionInterface"],[8,"ValidReturnType"],[8,"ToFunctionInterface"],[4,"MemoryLayout"],[3,"MemoryCounter"],[3,"CompileContext"],[3,"Namespace"],[3,"DebrisObject"],[8,"ObjectPayload"],[8,"ValidPayload"],[4,"BuildMode"],[3,"Config"],[4,"Type"],[4,"TypePattern"],[3,"DebrisParser"],[3,"BlockId"],[3,"NamespaceArena"],[3,"ContextId"],[3,"ObjectRef"],[3,"DebrisFunctionInterface"],[6,"LangResult"]]},\
"debris_derive":{"doc":"","i":[[23,"object","debris_derive","Handles an impl block containing methods for debris …",null,null]],"p":[]},\
"debris_lang":{"doc":"The Debris compiler.","i":[[5,"debug_run","debris_lang","Compiles the file <code>test.txt</code> into llir",null,[[["compileconfig",3]],[["llir",3],["result",6]]]],[5,"main","","",null,[[]]]],"p":[]},\
"debris_std":{"doc":"The standard library implementation for the debris …","i":[[5,"load","debris_std","Loads the standard library module",null,[[["compilecontext",3]],["objmodule",3]]]],"p":[]},\
"vfs":{"doc":"Virstual in-memory file system. might switch to a more …","i":[[4,"FsElement","vfs","",null,null],[13,"File","","",0,null],[13,"Directoy","","",0,null],[3,"File","","",null,null],[3,"Directory","","",null,null],[11,"persist","","",0,[[["path",3],["str",15]],["result",6]]],[11,"new","","",1,[[]]],[11,"with_data","","",1,[[["str",15]]]],[11,"push_string","","",1,[[["str",15]]]],[11,"persist","","",1,[[["path",3],["str",15]],["result",6]]],[11,"new","","",2,[[]]],[11,"with_contents","","",2,[[["hashmap",3],["string",3],["directory",3],["hashmap",3],["file",3]]]],[11,"file","","returns a new file with this name or returns an existing …",2,[[["string",3]],["file",3]]],[11,"dir","","Returns a new directory with this name or returns an …",2,[[["string",3]],["directory",3]]],[11,"resolve_path","","",2,[[],[["fselement",4],["option",4]]]],[11,"persist","","",2,[[["path",3],["str",15]],["result",6]]],[14,"directories","","Custom macro to easily generate predefined file structures…",null,null],[14,"directories_inner","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"default","","",1,[[],["file",3]]],[11,"default","","",2,[[],["directory",3]]],[11,"eq","","",0,[[["fselement",4]],["bool",15]]],[11,"ne","","",0,[[["fselement",4]],["bool",15]]],[11,"eq","","",1,[[["file",3]],["bool",15]]],[11,"ne","","",1,[[["file",3]],["bool",15]]],[11,"eq","","",2,[[["directory",3]],["bool",15]]],[11,"ne","","",2,[[["directory",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[4,"FsElement"],[3,"File"],[3,"Directory"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);