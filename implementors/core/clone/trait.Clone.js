(function() {var implementors = {};
implementors["debris_backends"] = [{"text":"impl Clone for MinecraftCommand","synthetic":false,"types":[]},{"text":"impl Clone for ExecuteComponent","synthetic":false,"types":[]},{"text":"impl Clone for MinecraftRange","synthetic":false,"types":[]},{"text":"impl Clone for ScoreboardPlayer","synthetic":false,"types":[]},{"text":"impl Clone for ObjectiveCriterion","synthetic":false,"types":[]}];
implementors["debris_common"] = [{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl Clone for SpecialIdent","synthetic":false,"types":[]},{"text":"impl Clone for Accessor","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for CodeRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]}];
implementors["debris_core"] = [{"text":"impl Clone for HirConstValue","synthetic":false,"types":[]},{"text":"impl Clone for HirComparisonOperator","synthetic":false,"types":[]},{"text":"impl Clone for HirInfixOperator","synthetic":false,"types":[]},{"text":"impl Clone for HirInfix","synthetic":false,"types":[]},{"text":"impl Clone for HirPrefixOperator","synthetic":false,"types":[]},{"text":"impl Clone for HirPrefix","synthetic":false,"types":[]},{"text":"impl Clone for HirVariableDeclaration","synthetic":false,"types":[]},{"text":"impl Clone for HirVariableInitialization","synthetic":false,"types":[]},{"text":"impl Clone for HirPropertyDeclaration","synthetic":false,"types":[]},{"text":"impl Clone for HirFunctionCall","synthetic":false,"types":[]},{"text":"impl Clone for HirConditionalBranch","synthetic":false,"types":[]},{"text":"impl Clone for HirExpression","synthetic":false,"types":[]},{"text":"impl Clone for HirStatement","synthetic":false,"types":[]},{"text":"impl Clone for HirTypePattern","synthetic":false,"types":[]},{"text":"impl Clone for HirFunction","synthetic":false,"types":[]},{"text":"impl Clone for HirBlock","synthetic":false,"types":[]},{"text":"impl Clone for HirStruct","synthetic":false,"types":[]},{"text":"impl Clone for HirObject","synthetic":false,"types":[]},{"text":"impl Clone for SpannedIdentifier","synthetic":false,"types":[]},{"text":"impl Clone for IdentifierPath","synthetic":false,"types":[]},{"text":"impl Clone for Rule","synthetic":false,"types":[]},{"text":"impl Clone for Condition","synthetic":false,"types":[]},{"text":"impl Clone for Scoreboard","synthetic":false,"types":[]},{"text":"impl Clone for ScoreboardValue","synthetic":false,"types":[]},{"text":"impl Clone for ScoreboardOperation","synthetic":false,"types":[]},{"text":"impl Clone for ScoreboardComparison","synthetic":false,"types":[]},{"text":"impl Clone for ItemId","synthetic":false,"types":[]},{"text":"impl Clone for MirValue","synthetic":false,"types":[]},{"text":"impl Clone for ContextId","synthetic":false,"types":[]},{"text":"impl Clone for ObjectRef","synthetic":false,"types":[]},{"text":"impl Clone for ObjClass","synthetic":false,"types":[]},{"text":"impl Clone for ObjFunction","synthetic":false,"types":[]},{"text":"impl Clone for FunctionParameters","synthetic":false,"types":[]},{"text":"impl Clone for FunctionOverload","synthetic":false,"types":[]},{"text":"impl Clone for FunctionParameterDefinition","synthetic":false,"types":[]},{"text":"impl Clone for ObjNativeFunction","synthetic":false,"types":[]},{"text":"impl Clone for ObjNativeFunctionSignature","synthetic":false,"types":[]},{"text":"impl Clone for ObjStaticInt","synthetic":false,"types":[]},{"text":"impl Clone for ObjInt","synthetic":false,"types":[]},{"text":"impl Clone for ObjModule","synthetic":false,"types":[]},{"text":"impl Clone for ObjNull","synthetic":false,"types":[]},{"text":"impl Clone for ObjString","synthetic":false,"types":[]},{"text":"impl Clone for ParseError","synthetic":false,"types":[]},{"text":"impl Clone for LangError","synthetic":false,"types":[]},{"text":"impl Clone for LangErrorKind","synthetic":false,"types":[]},{"text":"impl Clone for CompileError","synthetic":false,"types":[]},{"text":"impl Clone for TypePattern","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()