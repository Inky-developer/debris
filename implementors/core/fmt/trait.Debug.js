(function() {var implementors = {};
implementors["debris_backends"] = [{"text":"impl Debug for MinecraftCommand","synthetic":false,"types":[]},{"text":"impl Debug for ExecuteComponent","synthetic":false,"types":[]},{"text":"impl Debug for MinecraftRange","synthetic":false,"types":[]},{"text":"impl Debug for ScoreboardPlayer","synthetic":false,"types":[]},{"text":"impl Debug for ObjectiveCriterion","synthetic":false,"types":[]},{"text":"impl Debug for FunctionIdent","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for DatapackBackend&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["debris_common"] = [{"text":"impl Debug for Ident","synthetic":false,"types":[]},{"text":"impl Debug for SpecialIdent","synthetic":false,"types":[]},{"text":"impl Debug for Accessor","synthetic":false,"types":[]},{"text":"impl Debug for Code","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for CodeRef&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Debug for InputFiles","synthetic":false,"types":[]},{"text":"impl Debug for Span","synthetic":false,"types":[]}];
implementors["debris_core"] = [{"text":"impl&lt;'code&gt; Debug for Hir&lt;'code&gt;","synthetic":false,"types":[]},{"text":"impl Debug for HirConstValue","synthetic":false,"types":[]},{"text":"impl Debug for HirComparisonOperator","synthetic":false,"types":[]},{"text":"impl Debug for HirInfixOperator","synthetic":false,"types":[]},{"text":"impl Debug for HirInfix","synthetic":false,"types":[]},{"text":"impl Debug for HirPrefixOperator","synthetic":false,"types":[]},{"text":"impl Debug for HirPrefix","synthetic":false,"types":[]},{"text":"impl Debug for HirVariableDeclaration","synthetic":false,"types":[]},{"text":"impl Debug for HirPropertyDeclaration","synthetic":false,"types":[]},{"text":"impl Debug for HirFunctionCall","synthetic":false,"types":[]},{"text":"impl Debug for HirExpression","synthetic":false,"types":[]},{"text":"impl Debug for HirStatement","synthetic":false,"types":[]},{"text":"impl Debug for HirFunction","synthetic":false,"types":[]},{"text":"impl Debug for HirBlock","synthetic":false,"types":[]},{"text":"impl Debug for HirStruct","synthetic":false,"types":[]},{"text":"impl Debug for HirObject","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for HirContext&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Debug for SpannedIdentifier","synthetic":false,"types":[]},{"text":"impl Debug for IdentifierPath","synthetic":false,"types":[]},{"text":"impl Debug for Rule","synthetic":false,"types":[]},{"text":"impl Debug for Llir","synthetic":false,"types":[]},{"text":"impl Debug for Function","synthetic":false,"types":[]},{"text":"impl Debug for FastStore","synthetic":false,"types":[]},{"text":"impl Debug for FastStoreFromResult","synthetic":false,"types":[]},{"text":"impl Debug for BinaryOperation","synthetic":false,"types":[]},{"text":"impl Debug for Call","synthetic":false,"types":[]},{"text":"impl Debug for Condition","synthetic":false,"types":[]},{"text":"impl Debug for Branch","synthetic":false,"types":[]},{"text":"impl Debug for Execute","synthetic":false,"types":[]},{"text":"impl Debug for Node","synthetic":false,"types":[]},{"text":"impl Debug for Scoreboard","synthetic":false,"types":[]},{"text":"impl Debug for ScoreboardValue","synthetic":false,"types":[]},{"text":"impl Debug for ScoreboardOperation","synthetic":false,"types":[]},{"text":"impl Debug for ScoreboardComparison","synthetic":false,"types":[]},{"text":"impl Debug for ItemId","synthetic":false,"types":[]},{"text":"impl Debug for ItemIdentifier","synthetic":false,"types":[]},{"text":"impl Debug for MirCall","synthetic":false,"types":[]},{"text":"impl Debug for MirGotoContext","synthetic":false,"types":[]},{"text":"impl Debug for MirRawCommand","synthetic":false,"types":[]},{"text":"impl Debug for MirNode","synthetic":false,"types":[]},{"text":"impl Debug for MirValue","synthetic":false,"types":[]},{"text":"impl Debug for MirContext&lt;'_&gt;","synthetic":false,"types":[]},{"text":"impl Debug for MirNamespaceEntry","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'ctx&gt; Debug for MirBuilder&lt;'a, 'ctx&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'ctx&gt; Debug for Mir&lt;'ctx&gt;","synthetic":false,"types":[]},{"text":"impl Debug for CompileContext","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Debug for Namespace&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Debug for ObjectRef","synthetic":false,"types":[]},{"text":"impl Debug for DebrisObject&lt;dyn ObjectPayload&gt;","synthetic":false,"types":[]},{"text":"impl Debug for ObjBool","synthetic":false,"types":[]},{"text":"impl Debug for ObjStaticBool","synthetic":false,"types":[]},{"text":"impl Debug for ObjClass","synthetic":false,"types":[]},{"text":"impl Debug for ObjFunction","synthetic":false,"types":[]},{"text":"impl Debug for ObjStaticInt","synthetic":false,"types":[]},{"text":"impl Debug for ObjInt","synthetic":false,"types":[]},{"text":"impl Debug for ObjModule","synthetic":false,"types":[]},{"text":"impl Debug for ModuleFactory","synthetic":false,"types":[]},{"text":"impl Debug for ObjNull","synthetic":false,"types":[]},{"text":"impl Debug for ObjString","synthetic":false,"types":[]},{"text":"impl Debug for BuildMode","synthetic":false,"types":[]},{"text":"impl Debug for Config","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for SnippetOwned&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Debug for SliceOwned&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Debug for SourceAnnotationOwned","synthetic":false,"types":[]},{"text":"impl Debug for ParseError","synthetic":false,"types":[]},{"text":"impl Debug for LangError","synthetic":false,"types":[]},{"text":"impl Debug for LangErrorKind","synthetic":false,"types":[]},{"text":"impl Debug for CompileError","synthetic":false,"types":[]},{"text":"impl Debug for Type","synthetic":false,"types":[]}];
implementors["vfs"] = [{"text":"impl&lt;'a&gt; Debug for FsElement&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Debug for File","synthetic":false,"types":[]},{"text":"impl Debug for Directory","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()