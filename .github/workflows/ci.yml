name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - name: Set git to use LF
      run: git config --global core.autocrlf false

    - uses: actions/checkout@v2
    
    - name: Setup Java JDK
      uses: actions/setup-java@v2
      with:
        distribution: "adopt"
        java-version: "17"
      
    - name: Install rust
      run: rustup update stable
      
    - name: Run tests
      if: matrix.os == 'ubuntu-latest'
      run: cargo test --verbose --features test_vanilla_server -- --nocapture
    
    - name: Run tests
      if: matrix.os != 'ubuntu-latest'
      run: cargo test --verbose -- --nocapture
  
  static_analysis:
    name: Static code analysis
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install rust
      run: rustup update stable
    
    - name: Install clippy
      run: rustup component add clippy
    
    - name: Run clippy
      run: cargo clippy --all-targets -- -D warnings -D clippy::pedantic -A clippy::must_use_candidate -A clippy::default_trait_access -A clippy::missing_panics_doc -A clippy::module_name_repetitions -A clippy::missing_errors_doc -A clippy::match_bool -A clippy::too_many_lines -A clippy::enum_glob_use -A clippy::non_ascii_literal -A clippy::return_self_not_must_use -D clippy::cargo -A clippy::cargo-common-metadata -D clippy::dbg_macro -D clippy::rc_buffer -D clippy::string_to_string -D clippy::use_debug -D clippy::nursery -A clippy::use_self -A clippy::missing_const_for_fn -A clippy::cognitive_complexity -A clippy::option-if-let-else -A clippy::type-complexity
  
    - name: Install rustfmt
      run: rustup component add rustfmt
    
    - name: Run rustfmt
      run: cargo fmt -- --check